# Generated by the protocol buffer compiler.  DO NOT EDIT!

from google.protobuf import descriptor
from google.protobuf import message
from google.protobuf import reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)


DESCRIPTOR = descriptor.FileDescriptor(
  name='include/a/infra/io/nic/nic_cfg.proto',
  package='a.io.nic',
  serialized_pb='\n$include/a/infra/io/nic/nic_cfg.proto\x12\x08\x61.io.nic\x1a&include/a/infra/prov/definitions.proto\x1a)include/a/infra/config/config_types.proto\"\xe1\x04\n\tNicCfgGpb\x12\x14\n\tnumQueues\x18\x01 \x01(\x03:\x01\x31\x12\x1b\n\rmaxPacketSize\x18\x02 \x01(\r:\x04\x38\x31\x39\x32\x12!\n\x14numPacketsPerRxQueue\x18\x03 \x01(\x03:\x03\x31\x32\x38\x12!\n\x14numPacketsPerTxQueue\x18\x04 \x01(\x03:\x03\x31\x32\x38\x12\x1b\n\risNonBlocking\x18\x05 \x01(\x08:\x04true\x12\x18\n\nshouldDrop\x18\x06 \x01(\x08:\x04true\x12\x15\n\x06is1Gig\x18\x07 \x01(\x08:\x05\x66\x61lse\x12\x1e\n\x0fisSingleRxQueue\x18\x08 \x01(\x08:\x05\x66\x61lse\x12\x1e\n\x0fisSingleTxQueue\x18\t \x01(\x08:\x05\x66\x61lse\x12\x35\n\x0crssHashTypes\x18\n \x01(\x0b\x32\x1f.a.io.nic.NicCfgGpb.RssHashType\x12\x30\n!shouldBindToExplicitServerAddress\x18\x0b \x01(\x08:\x05\x66\x61lse\x12\x14\n\x07memSize\x18\x0c \x01(\x03:\x03\x37\x36\x38\x1aY\n\x0bRssHashType\x12\x39\n\x08hashFunc\x18\x01 \x01(\x0e\x32\x1c.a.io.nic.NicCfgGpb.HashType:\tIPV4_ONLY\x12\x0f\n\x07hashKey\x18\x02 \x01(\x0c\"5\n\x07NicType\x12\t\n\x05kNone\x10\x00\x12\t\n\x05kJake\x10\x01\x12\t\n\x05kDpdk\x10\x02\x12\t\n\x05kPcap\x10\x03\"<\n\x08HashType\x12\r\n\tIPV4_ONLY\x10\x01\x12\r\n\tIPV6_ONLY\x10\x02\x12\x12\n\x0eIPV4_IPV6_BOTH\x10\x03\"\x8d\x08\n\x0f\x43hannelStatsGpb\x12\n\n\x02id\x18\x01 \x01(\t\x12@\n\x08opackets\x18\x02 \x01(\x04\x42.\x8a\xb5\x18*Total of successfully transmitted packets.\x12<\n\x06obytes\x18\x03 \x01(\x04\x42,\x8a\xb5\x18(Total of successfully transmitted bytes.\x12\x39\n\x07oerrors\x18\x04 \x01(\x04\x42(\x8a\xb5\x18$Total of failed transmitted packets.\x12=\n\x08ipackets\x18\x05 \x01(\x04\x42+\x8a\xb5\x18\'Total of successfully received packets.\x12\x39\n\x06ibytes\x18\x06 \x01(\x04\x42)\x8a\xb5\x18%Total of successfully received bytes.\x12\x36\n\x07ierrors\x18\x07 \x01(\x04\x42%\x8a\xb5\x18!Total of failed received packets.\x12\x36\n\x06idrops\x18\x08 \x01(\x04\x42&\x8a\xb5\x18\"Total of dropped received packets.\x12P\n\x08notxbuff\x18\t \x01(\x04\x42>\x8a\xb5\x18:Number of times tx buffer was requested and was not found.\x12\x37\n\x07ierrCrc\x18\x0b \x01(\x04\x42&\x8a\xb5\x18\"Total of received CRC error count.\x12:\n\x07ierrLen\x18\x0c \x01(\x04\x42)\x8a\xb5\x18%Total of received length error count.\x12T\n\tierrRunts\x18\r \x01(\x04\x42\x41\x8a\xb5\x18=Number of received packets that were too small to be handled.\x12U\n\nierrGiants\x18\x0e \x01(\x04\x42\x41\x8a\xb5\x18=Number of received packets that were too large to be handled.\x12Q\n\x08rxNoMbuf\x18\x0f \x01(\x04\x42?\x8a\xb5\x18;Number of received packets that had no available rx buffer.\x12@\n\x07imcasts\x18\x10 \x01(\x04\x42/\x8a\xb5\x18+Total number of multicast received packets.\x12@\n\x07ibcasts\x18\x11 \x01(\x04\x42/\x8a\xb5\x18+Total number of broadcast received packets.\"\x9f\x02\n\x0bNicStatsGpb\x12(\n\x02in\x18\x01 \x02(\x0b\x32\x1c.a.io.nic.NicStatsGpb.InxGpb\x12*\n\x03out\x18\x02 \x02(\x0b\x32\x1d.a.io.nic.NicStatsGpb.OutxGpb\x1a]\n\x06InxGpb\x12S\n\x0cisAggregated\x18\x01 \x01(\x08:\x04trueB7\x8a\xb5\x18\x33Show aggregated statistics or detailed per channel.\x1a:\n\x07OutxGpb\x12/\n\x0c\x63hannelStats\x18\x01 \x03(\x0b\x32\x19.a.io.nic.ChannelStatsGpb:\x1f\x8a\xb5\x18\x1bGets NIC adapter statistics\"p\n\x10\x43learNicStatsGpb\x12\x1b\n\x02in\x18\x01 \x02(\x0b\x32\x0f.a.prov.NullGpb\x12\x1c\n\x03out\x18\x02 \x02(\x0b\x32\x0f.a.prov.NullGpb:!\x8a\xb5\x18\x1d\x43lears NIC adapter statistics\"\x9c\x01\n\x13\x41llAvailableNicsGpb\x12\x1b\n\x02in\x18\x01 \x02(\x0b\x32\x0f.a.prov.NullGpb\x12\x32\n\x03out\x18\x02 \x02(\x0b\x32%.a.io.nic.AllAvailableNicsGpb.OutxGpb\x1a\x17\n\x07OutxGpb\x12\x0c\n\x04name\x18\x01 \x03(\t:\x1b\x8a\xb5\x18\x17Gets all available NICs\"\x9c\x01\n\x0bisLinkUpGpb\x12\x1b\n\x02in\x18\x01 \x02(\x0b\x32\x0f.a.prov.NullGpb\x12*\n\x03out\x18\x02 \x02(\x0b\x32\x1d.a.io.nic.isLinkUpGpb.OutxGpb\x1a\x17\n\x07OutxGpb\x12\x0c\n\x04isUp\x18\x01 \x01(\x08:+\x8a\xb5\x18\'Returns whether this link is up or down\"\x88\x01\n\x18UseActualPhyStopStartGpb\x12\x35\n\x02in\x18\x01 \x02(\x0b\x32).a.io.nic.UseActualPhyStopStartGpb.InxGpb\x12\x1c\n\x03out\x18\x02 \x02(\x0b\x32\x0f.a.prov.NullGpb\x1a\x17\n\x06InxGpb\x12\r\n\x05state\x18\x01 \x01(\x08\"\x81\x02\n\x12LoadCaptureFileGpb\x12/\n\x02in\x18\x01 \x02(\x0b\x32#.a.io.nic.LoadCaptureFileGpb.InxGpb\x12\x1c\n\x03out\x18\x02 \x02(\x0b\x32\x0f.a.prov.NullGpb\x1ay\n\x06InxGpb\x12\"\n\x08\x66ilename\x18\x01 \x01(\tB\x10\x8a\xb5\x18\x0c\x63\x61p filename\x12K\n\x0bshouldBlock\x18\x02 \x01(\x08:\x05\x66\x61lseB/\x8a\xb5\x18+should block until all packets are consumed:!\x8a\xb5\x18\x1dLoads new packet capture file\"\xa3\x01\n\x10hasNextPacketGpb\x12\x1b\n\x02in\x18\x01 \x02(\x0b\x32\x0f.a.prov.NullGpb\x12/\n\x03out\x18\x02 \x02(\x0b\x32\".a.io.nic.hasNextPacketGpb.OutxGpb\x1a\x1a\n\x07OutxGpb\x12\x0f\n\x07hasNext\x18\x01 \x01(\x08:%\x8a\xb5\x18!Returns whether next packet exist\"\xb7\x01\n\x0csetFilterGpb\x12)\n\x02in\x18\x01 \x02(\x0b\x32\x1d.a.io.nic.setFilterGpb.InxGpb\x12\x1c\n\x03out\x18\x02 \x02(\x0b\x32\x0f.a.prov.NullGpb\x1a\x44\n\x06InxGpb\x12:\n\npcapFilter\x18\x01 \x01(\tB&\x8a\xb5\x18\"pcap-filter - packet filter syntax:\x18\x8a\xb5\x18\x14\x46ilters live traffic\"n\n\x0c\x44\x65\x62ugStepGpb\x12)\n\x02in\x18\x01 \x02(\x0b\x32\x1d.a.io.nic.DebugStepGpb.InxGpb\x12\x1c\n\x03out\x18\x02 \x02(\x0b\x32\x0f.a.prov.NullGpb\x1a\x15\n\x06InxGpb\x12\x0b\n\x03num\x18\x01 \x01(\x05\"\x83\x01\n\x10SetWireConfigGpb\x12-\n\x02in\x18\x01 \x02(\x0b\x32!.a.io.nic.SetWireConfigGpb.InxGpb\x12\x1c\n\x03out\x18\x02 \x02(\x0b\x32\x0f.a.prov.NullGpb\x1a\"\n\x06InxGpb\x12\x18\n\x0bsleepCycles\x18\x01 \x01(\x03:\x03\x33\x30\x30')



_NICCFGGPB_NICTYPE = descriptor.EnumDescriptor(
  name='NicType',
  full_name='a.io.nic.NicCfgGpb.NicType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    descriptor.EnumValueDescriptor(
      name='kNone', index=0, number=0,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='kJake', index=1, number=1,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='kDpdk', index=2, number=2,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='kPcap', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=628,
  serialized_end=681,
)

_NICCFGGPB_HASHTYPE = descriptor.EnumDescriptor(
  name='HashType',
  full_name='a.io.nic.NicCfgGpb.HashType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    descriptor.EnumValueDescriptor(
      name='IPV4_ONLY', index=0, number=1,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='IPV6_ONLY', index=1, number=2,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='IPV4_IPV6_BOTH', index=2, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=683,
  serialized_end=743,
)


_NICCFGGPB_RSSHASHTYPE = descriptor.Descriptor(
  name='RssHashType',
  full_name='a.io.nic.NicCfgGpb.RssHashType',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='hashFunc', full_name='a.io.nic.NicCfgGpb.RssHashType.hashFunc', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='hashKey', full_name='a.io.nic.NicCfgGpb.RssHashType.hashKey', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=537,
  serialized_end=626,
)

_NICCFGGPB = descriptor.Descriptor(
  name='NicCfgGpb',
  full_name='a.io.nic.NicCfgGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='numQueues', full_name='a.io.nic.NicCfgGpb.numQueues', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='maxPacketSize', full_name='a.io.nic.NicCfgGpb.maxPacketSize', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=8192,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='numPacketsPerRxQueue', full_name='a.io.nic.NicCfgGpb.numPacketsPerRxQueue', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=True, default_value=128,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='numPacketsPerTxQueue', full_name='a.io.nic.NicCfgGpb.numPacketsPerTxQueue', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=True, default_value=128,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='isNonBlocking', full_name='a.io.nic.NicCfgGpb.isNonBlocking', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='shouldDrop', full_name='a.io.nic.NicCfgGpb.shouldDrop', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='is1Gig', full_name='a.io.nic.NicCfgGpb.is1Gig', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='isSingleRxQueue', full_name='a.io.nic.NicCfgGpb.isSingleRxQueue', index=7,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='isSingleTxQueue', full_name='a.io.nic.NicCfgGpb.isSingleTxQueue', index=8,
      number=9, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='rssHashTypes', full_name='a.io.nic.NicCfgGpb.rssHashTypes', index=9,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='shouldBindToExplicitServerAddress', full_name='a.io.nic.NicCfgGpb.shouldBindToExplicitServerAddress', index=10,
      number=11, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='memSize', full_name='a.io.nic.NicCfgGpb.memSize', index=11,
      number=12, type=3, cpp_type=2, label=1,
      has_default_value=True, default_value=768,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_NICCFGGPB_RSSHASHTYPE, ],
  enum_types=[
    _NICCFGGPB_NICTYPE,
    _NICCFGGPB_HASHTYPE,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=134,
  serialized_end=743,
)


_CHANNELSTATSGPB = descriptor.Descriptor(
  name='ChannelStatsGpb',
  full_name='a.io.nic.ChannelStatsGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='id', full_name='a.io.nic.ChannelStatsGpb.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='opackets', full_name='a.io.nic.ChannelStatsGpb.opackets', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030*Total of successfully transmitted packets.')),
    descriptor.FieldDescriptor(
      name='obytes', full_name='a.io.nic.ChannelStatsGpb.obytes', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030(Total of successfully transmitted bytes.')),
    descriptor.FieldDescriptor(
      name='oerrors', full_name='a.io.nic.ChannelStatsGpb.oerrors', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030$Total of failed transmitted packets.')),
    descriptor.FieldDescriptor(
      name='ipackets', full_name='a.io.nic.ChannelStatsGpb.ipackets', index=4,
      number=5, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\'Total of successfully received packets.')),
    descriptor.FieldDescriptor(
      name='ibytes', full_name='a.io.nic.ChannelStatsGpb.ibytes', index=5,
      number=6, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030%Total of successfully received bytes.')),
    descriptor.FieldDescriptor(
      name='ierrors', full_name='a.io.nic.ChannelStatsGpb.ierrors', index=6,
      number=7, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030!Total of failed received packets.')),
    descriptor.FieldDescriptor(
      name='idrops', full_name='a.io.nic.ChannelStatsGpb.idrops', index=7,
      number=8, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\"Total of dropped received packets.')),
    descriptor.FieldDescriptor(
      name='notxbuff', full_name='a.io.nic.ChannelStatsGpb.notxbuff', index=8,
      number=9, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030:Number of times tx buffer was requested and was not found.')),
    descriptor.FieldDescriptor(
      name='ierrCrc', full_name='a.io.nic.ChannelStatsGpb.ierrCrc', index=9,
      number=11, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\"Total of received CRC error count.')),
    descriptor.FieldDescriptor(
      name='ierrLen', full_name='a.io.nic.ChannelStatsGpb.ierrLen', index=10,
      number=12, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030%Total of received length error count.')),
    descriptor.FieldDescriptor(
      name='ierrRunts', full_name='a.io.nic.ChannelStatsGpb.ierrRunts', index=11,
      number=13, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030=Number of received packets that were too small to be handled.')),
    descriptor.FieldDescriptor(
      name='ierrGiants', full_name='a.io.nic.ChannelStatsGpb.ierrGiants', index=12,
      number=14, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030=Number of received packets that were too large to be handled.')),
    descriptor.FieldDescriptor(
      name='rxNoMbuf', full_name='a.io.nic.ChannelStatsGpb.rxNoMbuf', index=13,
      number=15, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030;Number of received packets that had no available rx buffer.')),
    descriptor.FieldDescriptor(
      name='imcasts', full_name='a.io.nic.ChannelStatsGpb.imcasts', index=14,
      number=16, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030+Total number of multicast received packets.')),
    descriptor.FieldDescriptor(
      name='ibcasts', full_name='a.io.nic.ChannelStatsGpb.ibcasts', index=15,
      number=17, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030+Total number of broadcast received packets.')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=746,
  serialized_end=1783,
)


_NICSTATSGPB_INXGPB = descriptor.Descriptor(
  name='InxGpb',
  full_name='a.io.nic.NicStatsGpb.InxGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='isAggregated', full_name='a.io.nic.NicStatsGpb.InxGpb.isAggregated', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0303Show aggregated statistics or detailed per channel.')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1887,
  serialized_end=1980,
)

_NICSTATSGPB_OUTXGPB = descriptor.Descriptor(
  name='OutxGpb',
  full_name='a.io.nic.NicStatsGpb.OutxGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='channelStats', full_name='a.io.nic.NicStatsGpb.OutxGpb.channelStats', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1982,
  serialized_end=2040,
)

_NICSTATSGPB = descriptor.Descriptor(
  name='NicStatsGpb',
  full_name='a.io.nic.NicStatsGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.io.nic.NicStatsGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.io.nic.NicStatsGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_NICSTATSGPB_INXGPB, _NICSTATSGPB_OUTXGPB, ],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030\033Gets NIC adapter statistics'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1786,
  serialized_end=2073,
)


_CLEARNICSTATSGPB = descriptor.Descriptor(
  name='ClearNicStatsGpb',
  full_name='a.io.nic.ClearNicStatsGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.io.nic.ClearNicStatsGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.io.nic.ClearNicStatsGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030\035Clears NIC adapter statistics'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2075,
  serialized_end=2187,
)


_ALLAVAILABLENICSGPB_OUTXGPB = descriptor.Descriptor(
  name='OutxGpb',
  full_name='a.io.nic.AllAvailableNicsGpb.OutxGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='name', full_name='a.io.nic.AllAvailableNicsGpb.OutxGpb.name', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2294,
  serialized_end=2317,
)

_ALLAVAILABLENICSGPB = descriptor.Descriptor(
  name='AllAvailableNicsGpb',
  full_name='a.io.nic.AllAvailableNicsGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.io.nic.AllAvailableNicsGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.io.nic.AllAvailableNicsGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_ALLAVAILABLENICSGPB_OUTXGPB, ],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030\027Gets all available NICs'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2190,
  serialized_end=2346,
)


_ISLINKUPGPB_OUTXGPB = descriptor.Descriptor(
  name='OutxGpb',
  full_name='a.io.nic.isLinkUpGpb.OutxGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='isUp', full_name='a.io.nic.isLinkUpGpb.OutxGpb.isUp', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2437,
  serialized_end=2460,
)

_ISLINKUPGPB = descriptor.Descriptor(
  name='isLinkUpGpb',
  full_name='a.io.nic.isLinkUpGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.io.nic.isLinkUpGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.io.nic.isLinkUpGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_ISLINKUPGPB_OUTXGPB, ],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030\'Returns whether this link is up or down'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2349,
  serialized_end=2505,
)


_USEACTUALPHYSTOPSTARTGPB_INXGPB = descriptor.Descriptor(
  name='InxGpb',
  full_name='a.io.nic.UseActualPhyStopStartGpb.InxGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='state', full_name='a.io.nic.UseActualPhyStopStartGpb.InxGpb.state', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2621,
  serialized_end=2644,
)

_USEACTUALPHYSTOPSTARTGPB = descriptor.Descriptor(
  name='UseActualPhyStopStartGpb',
  full_name='a.io.nic.UseActualPhyStopStartGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.io.nic.UseActualPhyStopStartGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.io.nic.UseActualPhyStopStartGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_USEACTUALPHYSTOPSTARTGPB_INXGPB, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2508,
  serialized_end=2644,
)


_LOADCAPTUREFILEGPB_INXGPB = descriptor.Descriptor(
  name='InxGpb',
  full_name='a.io.nic.LoadCaptureFileGpb.InxGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='filename', full_name='a.io.nic.LoadCaptureFileGpb.InxGpb.filename', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\014cap filename')),
    descriptor.FieldDescriptor(
      name='shouldBlock', full_name='a.io.nic.LoadCaptureFileGpb.InxGpb.shouldBlock', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030+should block until all packets are consumed')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2748,
  serialized_end=2869,
)

_LOADCAPTUREFILEGPB = descriptor.Descriptor(
  name='LoadCaptureFileGpb',
  full_name='a.io.nic.LoadCaptureFileGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.io.nic.LoadCaptureFileGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.io.nic.LoadCaptureFileGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_LOADCAPTUREFILEGPB_INXGPB, ],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030\035Loads new packet capture file'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2647,
  serialized_end=2904,
)


_HASNEXTPACKETGPB_OUTXGPB = descriptor.Descriptor(
  name='OutxGpb',
  full_name='a.io.nic.hasNextPacketGpb.OutxGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='hasNext', full_name='a.io.nic.hasNextPacketGpb.OutxGpb.hasNext', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=3005,
  serialized_end=3031,
)

_HASNEXTPACKETGPB = descriptor.Descriptor(
  name='hasNextPacketGpb',
  full_name='a.io.nic.hasNextPacketGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.io.nic.hasNextPacketGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.io.nic.hasNextPacketGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_HASNEXTPACKETGPB_OUTXGPB, ],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030!Returns whether next packet exist'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2907,
  serialized_end=3070,
)


_SETFILTERGPB_INXGPB = descriptor.Descriptor(
  name='InxGpb',
  full_name='a.io.nic.setFilterGpb.InxGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='pcapFilter', full_name='a.io.nic.setFilterGpb.InxGpb.pcapFilter', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\"pcap-filter - packet filter syntax')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=3162,
  serialized_end=3230,
)

_SETFILTERGPB = descriptor.Descriptor(
  name='setFilterGpb',
  full_name='a.io.nic.setFilterGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.io.nic.setFilterGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.io.nic.setFilterGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_SETFILTERGPB_INXGPB, ],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030\024Filters live traffic'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=3073,
  serialized_end=3256,
)


_DEBUGSTEPGPB_INXGPB = descriptor.Descriptor(
  name='InxGpb',
  full_name='a.io.nic.DebugStepGpb.InxGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='num', full_name='a.io.nic.DebugStepGpb.InxGpb.num', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=3347,
  serialized_end=3368,
)

_DEBUGSTEPGPB = descriptor.Descriptor(
  name='DebugStepGpb',
  full_name='a.io.nic.DebugStepGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.io.nic.DebugStepGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.io.nic.DebugStepGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_DEBUGSTEPGPB_INXGPB, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=3258,
  serialized_end=3368,
)


_SETWIRECONFIGGPB_INXGPB = descriptor.Descriptor(
  name='InxGpb',
  full_name='a.io.nic.SetWireConfigGpb.InxGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='sleepCycles', full_name='a.io.nic.SetWireConfigGpb.InxGpb.sleepCycles', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=True, default_value=300,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=3468,
  serialized_end=3502,
)

_SETWIRECONFIGGPB = descriptor.Descriptor(
  name='SetWireConfigGpb',
  full_name='a.io.nic.SetWireConfigGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.io.nic.SetWireConfigGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.io.nic.SetWireConfigGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_SETWIRECONFIGGPB_INXGPB, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=3371,
  serialized_end=3502,
)

import include.a.infra.prov.definitions_pb2
import include.a.infra.config.config_types_pb2

_NICCFGGPB_RSSHASHTYPE.fields_by_name['hashFunc'].enum_type = _NICCFGGPB_HASHTYPE
_NICCFGGPB_RSSHASHTYPE.containing_type = _NICCFGGPB;
_NICCFGGPB.fields_by_name['rssHashTypes'].message_type = _NICCFGGPB_RSSHASHTYPE
_NICCFGGPB_NICTYPE.containing_type = _NICCFGGPB;
_NICCFGGPB_HASHTYPE.containing_type = _NICCFGGPB;
_NICSTATSGPB_INXGPB.containing_type = _NICSTATSGPB;
_NICSTATSGPB_OUTXGPB.fields_by_name['channelStats'].message_type = _CHANNELSTATSGPB
_NICSTATSGPB_OUTXGPB.containing_type = _NICSTATSGPB;
_NICSTATSGPB.fields_by_name['in'].message_type = _NICSTATSGPB_INXGPB
_NICSTATSGPB.fields_by_name['out'].message_type = _NICSTATSGPB_OUTXGPB
_CLEARNICSTATSGPB.fields_by_name['in'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_CLEARNICSTATSGPB.fields_by_name['out'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_ALLAVAILABLENICSGPB_OUTXGPB.containing_type = _ALLAVAILABLENICSGPB;
_ALLAVAILABLENICSGPB.fields_by_name['in'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_ALLAVAILABLENICSGPB.fields_by_name['out'].message_type = _ALLAVAILABLENICSGPB_OUTXGPB
_ISLINKUPGPB_OUTXGPB.containing_type = _ISLINKUPGPB;
_ISLINKUPGPB.fields_by_name['in'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_ISLINKUPGPB.fields_by_name['out'].message_type = _ISLINKUPGPB_OUTXGPB
_USEACTUALPHYSTOPSTARTGPB_INXGPB.containing_type = _USEACTUALPHYSTOPSTARTGPB;
_USEACTUALPHYSTOPSTARTGPB.fields_by_name['in'].message_type = _USEACTUALPHYSTOPSTARTGPB_INXGPB
_USEACTUALPHYSTOPSTARTGPB.fields_by_name['out'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_LOADCAPTUREFILEGPB_INXGPB.containing_type = _LOADCAPTUREFILEGPB;
_LOADCAPTUREFILEGPB.fields_by_name['in'].message_type = _LOADCAPTUREFILEGPB_INXGPB
_LOADCAPTUREFILEGPB.fields_by_name['out'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_HASNEXTPACKETGPB_OUTXGPB.containing_type = _HASNEXTPACKETGPB;
_HASNEXTPACKETGPB.fields_by_name['in'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_HASNEXTPACKETGPB.fields_by_name['out'].message_type = _HASNEXTPACKETGPB_OUTXGPB
_SETFILTERGPB_INXGPB.containing_type = _SETFILTERGPB;
_SETFILTERGPB.fields_by_name['in'].message_type = _SETFILTERGPB_INXGPB
_SETFILTERGPB.fields_by_name['out'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_DEBUGSTEPGPB_INXGPB.containing_type = _DEBUGSTEPGPB;
_DEBUGSTEPGPB.fields_by_name['in'].message_type = _DEBUGSTEPGPB_INXGPB
_DEBUGSTEPGPB.fields_by_name['out'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_SETWIRECONFIGGPB_INXGPB.containing_type = _SETWIRECONFIGGPB;
_SETWIRECONFIGGPB.fields_by_name['in'].message_type = _SETWIRECONFIGGPB_INXGPB
_SETWIRECONFIGGPB.fields_by_name['out'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB

class NicCfgGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class RssHashType(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _NICCFGGPB_RSSHASHTYPE
    
    # @@protoc_insertion_point(class_scope:a.io.nic.NicCfgGpb.RssHashType)
  DESCRIPTOR = _NICCFGGPB
  
  # @@protoc_insertion_point(class_scope:a.io.nic.NicCfgGpb)

class ChannelStatsGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _CHANNELSTATSGPB
  
  # @@protoc_insertion_point(class_scope:a.io.nic.ChannelStatsGpb)

class NicStatsGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class InxGpb(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _NICSTATSGPB_INXGPB
    
    # @@protoc_insertion_point(class_scope:a.io.nic.NicStatsGpb.InxGpb)
  
  class OutxGpb(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _NICSTATSGPB_OUTXGPB
    
    # @@protoc_insertion_point(class_scope:a.io.nic.NicStatsGpb.OutxGpb)
  DESCRIPTOR = _NICSTATSGPB
  
  # @@protoc_insertion_point(class_scope:a.io.nic.NicStatsGpb)

class ClearNicStatsGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _CLEARNICSTATSGPB
  
  # @@protoc_insertion_point(class_scope:a.io.nic.ClearNicStatsGpb)

class AllAvailableNicsGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class OutxGpb(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _ALLAVAILABLENICSGPB_OUTXGPB
    
    # @@protoc_insertion_point(class_scope:a.io.nic.AllAvailableNicsGpb.OutxGpb)
  DESCRIPTOR = _ALLAVAILABLENICSGPB
  
  # @@protoc_insertion_point(class_scope:a.io.nic.AllAvailableNicsGpb)

class isLinkUpGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class OutxGpb(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _ISLINKUPGPB_OUTXGPB
    
    # @@protoc_insertion_point(class_scope:a.io.nic.isLinkUpGpb.OutxGpb)
  DESCRIPTOR = _ISLINKUPGPB
  
  # @@protoc_insertion_point(class_scope:a.io.nic.isLinkUpGpb)

class UseActualPhyStopStartGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class InxGpb(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _USEACTUALPHYSTOPSTARTGPB_INXGPB
    
    # @@protoc_insertion_point(class_scope:a.io.nic.UseActualPhyStopStartGpb.InxGpb)
  DESCRIPTOR = _USEACTUALPHYSTOPSTARTGPB
  
  # @@protoc_insertion_point(class_scope:a.io.nic.UseActualPhyStopStartGpb)

class LoadCaptureFileGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class InxGpb(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _LOADCAPTUREFILEGPB_INXGPB
    
    # @@protoc_insertion_point(class_scope:a.io.nic.LoadCaptureFileGpb.InxGpb)
  DESCRIPTOR = _LOADCAPTUREFILEGPB
  
  # @@protoc_insertion_point(class_scope:a.io.nic.LoadCaptureFileGpb)

class hasNextPacketGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class OutxGpb(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _HASNEXTPACKETGPB_OUTXGPB
    
    # @@protoc_insertion_point(class_scope:a.io.nic.hasNextPacketGpb.OutxGpb)
  DESCRIPTOR = _HASNEXTPACKETGPB
  
  # @@protoc_insertion_point(class_scope:a.io.nic.hasNextPacketGpb)

class setFilterGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class InxGpb(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _SETFILTERGPB_INXGPB
    
    # @@protoc_insertion_point(class_scope:a.io.nic.setFilterGpb.InxGpb)
  DESCRIPTOR = _SETFILTERGPB
  
  # @@protoc_insertion_point(class_scope:a.io.nic.setFilterGpb)

class DebugStepGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class InxGpb(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _DEBUGSTEPGPB_INXGPB
    
    # @@protoc_insertion_point(class_scope:a.io.nic.DebugStepGpb.InxGpb)
  DESCRIPTOR = _DEBUGSTEPGPB
  
  # @@protoc_insertion_point(class_scope:a.io.nic.DebugStepGpb)

class SetWireConfigGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class InxGpb(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _SETWIRECONFIGGPB_INXGPB
    
    # @@protoc_insertion_point(class_scope:a.io.nic.SetWireConfigGpb.InxGpb)
  DESCRIPTOR = _SETWIRECONFIGGPB
  
  # @@protoc_insertion_point(class_scope:a.io.nic.SetWireConfigGpb)

# @@protoc_insertion_point(module_scope)
