# Generated by the protocol buffer compiler.  DO NOT EDIT!

from google.protobuf import descriptor
from google.protobuf import message
from google.protobuf import reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)


DESCRIPTOR = descriptor.FileDescriptor(
  name='include/a/elwood/thread/thread.proto',
  package='a.elwood.thread',
  serialized_pb='\n$include/a/elwood/thread/thread.proto\x12\x0f\x61.elwood.thread\x1a&include/a/infra/prov/definitions.proto\"L\n\x0bSleepCfgGpb\x12\x1e\n\ractiveNanosec\x18\x01 \x01(\x03:\x07\x31\x30\x30\x30\x30\x30\x30\x12\x1d\n\x0bidleNanosec\x18\x02 \x01(\x03:\x08\x31\x30\x30\x30\x30\x30\x30\x30\"\x89\x01\n\x08SleepGpb\x12-\n\x07stdMode\x18\x01 \x01(\x0b\x32\x1c.a.elwood.thread.SleepCfgGpb\x12/\n\trelaxMode\x18\x02 \x01(\x0b\x32\x1c.a.elwood.thread.SleepCfgGpb\x12\x1d\n\x10sleepCyclesQuota\x18\x03 \x01(\x03:\x03\x31\x30\x30\"\x85\x01\n\x10SetTimeConfigGpb\x12%\n\x02in\x18\x01 \x01(\x0b\x32\x19.a.elwood.thread.SleepGpb\x12\x1c\n\x03out\x18\x02 \x01(\x0b\x32\x0f.a.prov.NullGpb:,\x8a\xb5\x18(Sets the thread sleep time configuration\"\x85\x01\n\x10GetTimeConfigGpb\x12\x1b\n\x02in\x18\x01 \x01(\x0b\x32\x0f.a.prov.NullGpb\x12&\n\x03out\x18\x02 \x01(\x0b\x32\x19.a.elwood.thread.SleepGpb:,\x8a\xb5\x18(Gets the thread sleep time configuration\"\xa0\x01\n\x0eIsRelaxModeGpb\x12\x1b\n\x02in\x18\x01 \x01(\x0b\x32\x0f.a.prov.NullGpb\x12\x34\n\x03out\x18\x02 \x01(\x0b\x32\'.a.elwood.thread.IsRelaxModeGpb.OutxGpb\x1a\x1a\n\x07OutxGpb\x12\x0f\n\x07isRelax\x18\x01 \x01(\x08:\x1f\x8a\xb5\x18\x1bIs the thread in relax mode\"\x96\x01\n\nSetModeGpb\x12.\n\x02in\x18\x01 \x01(\x0b\x32\".a.elwood.thread.SetModeGpb.InxGpb\x12\x1c\n\x03out\x18\x02 \x01(\x0b\x32\x0f.a.prov.NullGpb\x1a \n\x06InxGpb\x12\x16\n\x07isRelax\x18\x01 \x01(\x08:\x05\x66\x61lse:\x18\x8a\xb5\x18\x14Sets the thread mode\"\xb0\x01\n\x10IsActiveStateGpb\x12\x1b\n\x02in\x18\x01 \x01(\x0b\x32\x0f.a.prov.NullGpb\x12\x36\n\x03out\x18\x02 \x01(\x0b\x32).a.elwood.thread.IsActiveStateGpb.OutxGpb\x1a\x1b\n\x07OutxGpb\x12\x10\n\x08isActive\x18\x01 \x01(\x08:*\x8a\xb5\x18&Is the thread currently active or idle')




_SLEEPCFGGPB = descriptor.Descriptor(
  name='SleepCfgGpb',
  full_name='a.elwood.thread.SleepCfgGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='activeNanosec', full_name='a.elwood.thread.SleepCfgGpb.activeNanosec', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=True, default_value=1000000,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='idleNanosec', full_name='a.elwood.thread.SleepCfgGpb.idleNanosec', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=True, default_value=10000000,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=97,
  serialized_end=173,
)


_SLEEPGPB = descriptor.Descriptor(
  name='SleepGpb',
  full_name='a.elwood.thread.SleepGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='stdMode', full_name='a.elwood.thread.SleepGpb.stdMode', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='relaxMode', full_name='a.elwood.thread.SleepGpb.relaxMode', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='sleepCyclesQuota', full_name='a.elwood.thread.SleepGpb.sleepCyclesQuota', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=True, default_value=100,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=176,
  serialized_end=313,
)


_SETTIMECONFIGGPB = descriptor.Descriptor(
  name='SetTimeConfigGpb',
  full_name='a.elwood.thread.SetTimeConfigGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.elwood.thread.SetTimeConfigGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.elwood.thread.SetTimeConfigGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030(Sets the thread sleep time configuration'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=316,
  serialized_end=449,
)


_GETTIMECONFIGGPB = descriptor.Descriptor(
  name='GetTimeConfigGpb',
  full_name='a.elwood.thread.GetTimeConfigGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.elwood.thread.GetTimeConfigGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.elwood.thread.GetTimeConfigGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030(Gets the thread sleep time configuration'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=452,
  serialized_end=585,
)


_ISRELAXMODEGPB_OUTXGPB = descriptor.Descriptor(
  name='OutxGpb',
  full_name='a.elwood.thread.IsRelaxModeGpb.OutxGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='isRelax', full_name='a.elwood.thread.IsRelaxModeGpb.OutxGpb.isRelax', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=689,
  serialized_end=715,
)

_ISRELAXMODEGPB = descriptor.Descriptor(
  name='IsRelaxModeGpb',
  full_name='a.elwood.thread.IsRelaxModeGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.elwood.thread.IsRelaxModeGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.elwood.thread.IsRelaxModeGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_ISRELAXMODEGPB_OUTXGPB, ],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030\033Is the thread in relax mode'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=588,
  serialized_end=748,
)


_SETMODEGPB_INXGPB = descriptor.Descriptor(
  name='InxGpb',
  full_name='a.elwood.thread.SetModeGpb.InxGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='isRelax', full_name='a.elwood.thread.SetModeGpb.InxGpb.isRelax', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=843,
  serialized_end=875,
)

_SETMODEGPB = descriptor.Descriptor(
  name='SetModeGpb',
  full_name='a.elwood.thread.SetModeGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.elwood.thread.SetModeGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.elwood.thread.SetModeGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_SETMODEGPB_INXGPB, ],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030\024Sets the thread mode'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=751,
  serialized_end=901,
)


_ISACTIVESTATEGPB_OUTXGPB = descriptor.Descriptor(
  name='OutxGpb',
  full_name='a.elwood.thread.IsActiveStateGpb.OutxGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='isActive', full_name='a.elwood.thread.IsActiveStateGpb.OutxGpb.isActive', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1009,
  serialized_end=1036,
)

_ISACTIVESTATEGPB = descriptor.Descriptor(
  name='IsActiveStateGpb',
  full_name='a.elwood.thread.IsActiveStateGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.elwood.thread.IsActiveStateGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.elwood.thread.IsActiveStateGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_ISACTIVESTATEGPB_OUTXGPB, ],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030&Is the thread currently active or idle'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=904,
  serialized_end=1080,
)

import include.a.infra.prov.definitions_pb2

_SLEEPGPB.fields_by_name['stdMode'].message_type = _SLEEPCFGGPB
_SLEEPGPB.fields_by_name['relaxMode'].message_type = _SLEEPCFGGPB
_SETTIMECONFIGGPB.fields_by_name['in'].message_type = _SLEEPGPB
_SETTIMECONFIGGPB.fields_by_name['out'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_GETTIMECONFIGGPB.fields_by_name['in'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_GETTIMECONFIGGPB.fields_by_name['out'].message_type = _SLEEPGPB
_ISRELAXMODEGPB_OUTXGPB.containing_type = _ISRELAXMODEGPB;
_ISRELAXMODEGPB.fields_by_name['in'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_ISRELAXMODEGPB.fields_by_name['out'].message_type = _ISRELAXMODEGPB_OUTXGPB
_SETMODEGPB_INXGPB.containing_type = _SETMODEGPB;
_SETMODEGPB.fields_by_name['in'].message_type = _SETMODEGPB_INXGPB
_SETMODEGPB.fields_by_name['out'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_ISACTIVESTATEGPB_OUTXGPB.containing_type = _ISACTIVESTATEGPB;
_ISACTIVESTATEGPB.fields_by_name['in'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_ISACTIVESTATEGPB.fields_by_name['out'].message_type = _ISACTIVESTATEGPB_OUTXGPB

class SleepCfgGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _SLEEPCFGGPB
  
  # @@protoc_insertion_point(class_scope:a.elwood.thread.SleepCfgGpb)

class SleepGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _SLEEPGPB
  
  # @@protoc_insertion_point(class_scope:a.elwood.thread.SleepGpb)

class SetTimeConfigGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _SETTIMECONFIGGPB
  
  # @@protoc_insertion_point(class_scope:a.elwood.thread.SetTimeConfigGpb)

class GetTimeConfigGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _GETTIMECONFIGGPB
  
  # @@protoc_insertion_point(class_scope:a.elwood.thread.GetTimeConfigGpb)

class IsRelaxModeGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class OutxGpb(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _ISRELAXMODEGPB_OUTXGPB
    
    # @@protoc_insertion_point(class_scope:a.elwood.thread.IsRelaxModeGpb.OutxGpb)
  DESCRIPTOR = _ISRELAXMODEGPB
  
  # @@protoc_insertion_point(class_scope:a.elwood.thread.IsRelaxModeGpb)

class SetModeGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class InxGpb(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _SETMODEGPB_INXGPB
    
    # @@protoc_insertion_point(class_scope:a.elwood.thread.SetModeGpb.InxGpb)
  DESCRIPTOR = _SETMODEGPB
  
  # @@protoc_insertion_point(class_scope:a.elwood.thread.SetModeGpb)

class IsActiveStateGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class OutxGpb(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _ISACTIVESTATEGPB_OUTXGPB
    
    # @@protoc_insertion_point(class_scope:a.elwood.thread.IsActiveStateGpb.OutxGpb)
  DESCRIPTOR = _ISACTIVESTATEGPB
  
  # @@protoc_insertion_point(class_scope:a.elwood.thread.IsActiveStateGpb)

# @@protoc_insertion_point(module_scope)
