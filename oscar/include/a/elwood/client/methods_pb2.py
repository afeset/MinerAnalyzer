# Generated by the protocol buffer compiler.  DO NOT EDIT!

from google.protobuf import descriptor
from google.protobuf import message
from google.protobuf import reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)


DESCRIPTOR = descriptor.FileDescriptor(
  name='include/a/elwood/client/methods.proto',
  package='a.elwood.client',
  serialized_pb='\n%include/a/elwood/client/methods.proto\x12\x0f\x61.elwood.client\x1a&include/a/infra/prov/definitions.proto\x1a$include/a/elwood/client/client.proto\"g\n\x0eStartClientGpb\x12\x1b\n\x02in\x18\x01 \x01(\x0b\x32\x0f.a.prov.NullGpb\x12\x1c\n\x03out\x18\x02 \x01(\x0b\x32\x0f.a.prov.NullGpb:\x1a\x8a\xb5\x18\x16Starts the live client\"e\n\rStopClientGpb\x12\x1b\n\x02in\x18\x01 \x01(\x0b\x32\x0f.a.prov.NullGpb\x12\x1c\n\x03out\x18\x02 \x01(\x0b\x32\x0f.a.prov.NullGpb:\x19\x8a\xb5\x18\x15Stops the live client\"\x99\x01\n\rIsClientUpGpb\x12\x1b\n\x02in\x18\x01 \x01(\x0b\x32\x0f.a.prov.NullGpb\x12\x33\n\x03out\x18\x02 \x01(\x0b\x32&.a.elwood.client.IsClientUpGpb.OutxGpb\x1a\x17\n\x07OutxGpb\x12\x0c\n\x04isUp\x18\x01 \x01(\x08:\x1d\x8a\xb5\x18\x19Is the live client active\"o\n\x0c\x41\x64\x64\x43lientGpb\x12&\n\x02in\x18\x01 \x01(\x0b\x32\x1a.a.elwood.client.ClientGpb\x12\x1c\n\x03out\x18\x02 \x01(\x0b\x32\x0f.a.prov.NullGpb:\x19\x8a\xb5\x18\x15\x41\x64\x64 client to manager\"\xdb\x01\n\rAddSessionGpb\x12\x31\n\x02in\x18\x01 \x01(\x0b\x32%.a.elwood.client.AddSessionGpb.InxGpb\x12\x1c\n\x03out\x18\x02 \x01(\x0b\x32\x0f.a.prov.NullGpb\x1aZ\n\x06InxGpb\x12\x10\n\x08\x63lientIp\x18\x01 \x01(\t\x12+\n\x03\x63\x66g\x18\x02 \x01(\x0b\x32\x1e.a.elwood.client.SessionCfgGpb\x12\x11\n\tinterface\x18\x03 \x01(\t:\x1d\x8a\xb5\x18\x19\x41\x64\x64 new session to client\"w\n\x18stopAndClearInstancesGpb\x12\x1b\n\x02in\x18\x01 \x01(\x0b\x32\x0f.a.prov.NullGpb\x12\x1c\n\x03out\x18\x02 \x01(\x0b\x32\x0f.a.prov.NullGpb: \x8a\xb5\x18\x1cTerminates all live sessions\"\x8e\x01\n\x12stopAndClearAllGpb\x12\x1b\n\x02in\x18\x01 \x01(\x0b\x32\x0f.a.prov.NullGpb\x12\x1c\n\x03out\x18\x02 \x01(\x0b\x32\x0f.a.prov.NullGpb:=\x8a\xb5\x18\x39Terminates all live sessions and removes all live clients\"5\n\x0fInterfaceMapGpb\x12\x11\n\tinterface\x18\x01 \x01(\t\x12\x0f\n\x07\x63lients\x18\x02 \x03(\t\"\xe4\x01\n\x19GetClientsPerInterfaceGpb\x12\x1b\n\x02in\x18\x01 \x01(\x0b\x32\x0f.a.prov.NullGpb\x12?\n\x03out\x18\x02 \x01(\x0b\x32\x32.a.elwood.client.GetClientsPerInterfaceGpb.OutxGpb\x1a\x41\n\x07OutxGpb\x12\x36\n\x0cinterfaceMap\x18\x02 \x03(\x0b\x32 .a.elwood.client.InterfaceMapGpb:&\x8a\xb5\x18\"Get all clients per interface list')




_STARTCLIENTGPB = descriptor.Descriptor(
  name='StartClientGpb',
  full_name='a.elwood.client.StartClientGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.elwood.client.StartClientGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.elwood.client.StartClientGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030\026Starts the live client'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=136,
  serialized_end=239,
)


_STOPCLIENTGPB = descriptor.Descriptor(
  name='StopClientGpb',
  full_name='a.elwood.client.StopClientGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.elwood.client.StopClientGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.elwood.client.StopClientGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030\025Stops the live client'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=241,
  serialized_end=342,
)


_ISCLIENTUPGPB_OUTXGPB = descriptor.Descriptor(
  name='OutxGpb',
  full_name='a.elwood.client.IsClientUpGpb.OutxGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='isUp', full_name='a.elwood.client.IsClientUpGpb.OutxGpb.isUp', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=444,
  serialized_end=467,
)

_ISCLIENTUPGPB = descriptor.Descriptor(
  name='IsClientUpGpb',
  full_name='a.elwood.client.IsClientUpGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.elwood.client.IsClientUpGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.elwood.client.IsClientUpGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_ISCLIENTUPGPB_OUTXGPB, ],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030\031Is the live client active'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=345,
  serialized_end=498,
)


_ADDCLIENTGPB = descriptor.Descriptor(
  name='AddClientGpb',
  full_name='a.elwood.client.AddClientGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.elwood.client.AddClientGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.elwood.client.AddClientGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030\025Add client to manager'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=500,
  serialized_end=611,
)


_ADDSESSIONGPB_INXGPB = descriptor.Descriptor(
  name='InxGpb',
  full_name='a.elwood.client.AddSessionGpb.InxGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='clientIp', full_name='a.elwood.client.AddSessionGpb.InxGpb.clientIp', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='cfg', full_name='a.elwood.client.AddSessionGpb.InxGpb.cfg', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='interface', full_name='a.elwood.client.AddSessionGpb.InxGpb.interface', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=712,
  serialized_end=802,
)

_ADDSESSIONGPB = descriptor.Descriptor(
  name='AddSessionGpb',
  full_name='a.elwood.client.AddSessionGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.elwood.client.AddSessionGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.elwood.client.AddSessionGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_ADDSESSIONGPB_INXGPB, ],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030\031Add new session to client'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=614,
  serialized_end=833,
)


_STOPANDCLEARINSTANCESGPB = descriptor.Descriptor(
  name='stopAndClearInstancesGpb',
  full_name='a.elwood.client.stopAndClearInstancesGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.elwood.client.stopAndClearInstancesGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.elwood.client.stopAndClearInstancesGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030\034Terminates all live sessions'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=835,
  serialized_end=954,
)


_STOPANDCLEARALLGPB = descriptor.Descriptor(
  name='stopAndClearAllGpb',
  full_name='a.elwood.client.stopAndClearAllGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.elwood.client.stopAndClearAllGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.elwood.client.stopAndClearAllGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\0309Terminates all live sessions and removes all live clients'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=957,
  serialized_end=1099,
)


_INTERFACEMAPGPB = descriptor.Descriptor(
  name='InterfaceMapGpb',
  full_name='a.elwood.client.InterfaceMapGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='interface', full_name='a.elwood.client.InterfaceMapGpb.interface', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='clients', full_name='a.elwood.client.InterfaceMapGpb.clients', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1101,
  serialized_end=1154,
)


_GETCLIENTSPERINTERFACEGPB_OUTXGPB = descriptor.Descriptor(
  name='OutxGpb',
  full_name='a.elwood.client.GetClientsPerInterfaceGpb.OutxGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='interfaceMap', full_name='a.elwood.client.GetClientsPerInterfaceGpb.OutxGpb.interfaceMap', index=0,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1280,
  serialized_end=1345,
)

_GETCLIENTSPERINTERFACEGPB = descriptor.Descriptor(
  name='GetClientsPerInterfaceGpb',
  full_name='a.elwood.client.GetClientsPerInterfaceGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.elwood.client.GetClientsPerInterfaceGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.elwood.client.GetClientsPerInterfaceGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_GETCLIENTSPERINTERFACEGPB_OUTXGPB, ],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030\"Get all clients per interface list'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1157,
  serialized_end=1385,
)

import include.a.infra.prov.definitions_pb2
import include.a.elwood.client.client_pb2

_STARTCLIENTGPB.fields_by_name['in'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_STARTCLIENTGPB.fields_by_name['out'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_STOPCLIENTGPB.fields_by_name['in'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_STOPCLIENTGPB.fields_by_name['out'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_ISCLIENTUPGPB_OUTXGPB.containing_type = _ISCLIENTUPGPB;
_ISCLIENTUPGPB.fields_by_name['in'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_ISCLIENTUPGPB.fields_by_name['out'].message_type = _ISCLIENTUPGPB_OUTXGPB
_ADDCLIENTGPB.fields_by_name['in'].message_type = include.a.elwood.client.client_pb2._CLIENTGPB
_ADDCLIENTGPB.fields_by_name['out'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_ADDSESSIONGPB_INXGPB.fields_by_name['cfg'].message_type = include.a.elwood.client.client_pb2._SESSIONCFGGPB
_ADDSESSIONGPB_INXGPB.containing_type = _ADDSESSIONGPB;
_ADDSESSIONGPB.fields_by_name['in'].message_type = _ADDSESSIONGPB_INXGPB
_ADDSESSIONGPB.fields_by_name['out'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_STOPANDCLEARINSTANCESGPB.fields_by_name['in'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_STOPANDCLEARINSTANCESGPB.fields_by_name['out'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_STOPANDCLEARALLGPB.fields_by_name['in'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_STOPANDCLEARALLGPB.fields_by_name['out'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_GETCLIENTSPERINTERFACEGPB_OUTXGPB.fields_by_name['interfaceMap'].message_type = _INTERFACEMAPGPB
_GETCLIENTSPERINTERFACEGPB_OUTXGPB.containing_type = _GETCLIENTSPERINTERFACEGPB;
_GETCLIENTSPERINTERFACEGPB.fields_by_name['in'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_GETCLIENTSPERINTERFACEGPB.fields_by_name['out'].message_type = _GETCLIENTSPERINTERFACEGPB_OUTXGPB

class StartClientGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _STARTCLIENTGPB
  
  # @@protoc_insertion_point(class_scope:a.elwood.client.StartClientGpb)

class StopClientGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _STOPCLIENTGPB
  
  # @@protoc_insertion_point(class_scope:a.elwood.client.StopClientGpb)

class IsClientUpGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class OutxGpb(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _ISCLIENTUPGPB_OUTXGPB
    
    # @@protoc_insertion_point(class_scope:a.elwood.client.IsClientUpGpb.OutxGpb)
  DESCRIPTOR = _ISCLIENTUPGPB
  
  # @@protoc_insertion_point(class_scope:a.elwood.client.IsClientUpGpb)

class AddClientGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _ADDCLIENTGPB
  
  # @@protoc_insertion_point(class_scope:a.elwood.client.AddClientGpb)

class AddSessionGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class InxGpb(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _ADDSESSIONGPB_INXGPB
    
    # @@protoc_insertion_point(class_scope:a.elwood.client.AddSessionGpb.InxGpb)
  DESCRIPTOR = _ADDSESSIONGPB
  
  # @@protoc_insertion_point(class_scope:a.elwood.client.AddSessionGpb)

class stopAndClearInstancesGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _STOPANDCLEARINSTANCESGPB
  
  # @@protoc_insertion_point(class_scope:a.elwood.client.stopAndClearInstancesGpb)

class stopAndClearAllGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _STOPANDCLEARALLGPB
  
  # @@protoc_insertion_point(class_scope:a.elwood.client.stopAndClearAllGpb)

class InterfaceMapGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _INTERFACEMAPGPB
  
  # @@protoc_insertion_point(class_scope:a.elwood.client.InterfaceMapGpb)

class GetClientsPerInterfaceGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class OutxGpb(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _GETCLIENTSPERINTERFACEGPB_OUTXGPB
    
    # @@protoc_insertion_point(class_scope:a.elwood.client.GetClientsPerInterfaceGpb.OutxGpb)
  DESCRIPTOR = _GETCLIENTSPERINTERFACEGPB
  
  # @@protoc_insertion_point(class_scope:a.elwood.client.GetClientsPerInterfaceGpb)

# @@protoc_insertion_point(module_scope)
