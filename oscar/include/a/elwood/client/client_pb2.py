# Generated by the protocol buffer compiler.  DO NOT EDIT!

from google.protobuf import descriptor
from google.protobuf import message
from google.protobuf import reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)


DESCRIPTOR = descriptor.FileDescriptor(
  name='include/a/elwood/client/client.proto',
  package='a.elwood.client',
  serialized_pb='\n$include/a/elwood/client/client.proto\x12\x0f\x61.elwood.client\x1a&include/a/infra/prov/definitions.proto\"\x85\x03\n\x0c\x43lientCfgGpb\x12\x93\x01\n\x0bsessionType\x18\x01 \x01(\x0e\x32).a.elwood.client.ClientCfgGpb.SessionType:\x10kComputeChecksumBA\x8a\xb5\x18=1=none, 2=save to file, 3=compute checksum 4=analyze progress\x12P\n\x0bmaxConnects\x18\x02 \x01(\r:\x04\x31\x30\x32\x34\x42\x35\x8a\xb5\x18\x31maximum amount of simultaneously open connections\x12\x33\n\x07options\x18\x03 \x01(\x0b\x32\".a.elwood.client.NetworkOptionsGpb\"X\n\x0bSessionType\x12\x0c\n\x08kDefault\x10\x01\x12\x0f\n\x0bkSaveToFile\x10\x02\x12\x14\n\x10kComputeChecksum\x10\x03\x12\x14\n\x10kAnalyzeProgress\x10\x04\"\x82\x01\n\tClientGpb\x12\x10\n\x08\x63lientIp\x18\x01 \x01(\t\x12*\n\x03\x63\x66g\x18\x03 \x01(\x0b\x32\x1d.a.elwood.client.ClientCfgGpb\x12\x37\n\tinterface\x18\x04 \x01(\tB$\x8a\xb5\x18 interface matching the client ip\"\xc5\x02\n\rSessionCfgGpb\x12\n\n\x02id\x18\x01 \x01(\x04\x12\x0b\n\x03url\x18\x02 \x01(\t\x12u\n\x07options\x18\x03 \x01(\x0b\x32\".a.elwood.client.NetworkOptionsGpbB@\x8a\xb5\x18<If not set, the session retrieved the global network options\x12G\n\x0fisNewConnection\x18\x04 \x01(\x08:\x04trueB(\x8a\xb5\x18$If set to true start new tcp session\x12[\n\x11isLastTransaction\x18\x05 \x01(\x08:\x04trueB:\x8a\xb5\x18\x36if set to true close tcp session in end of transaction\"\x83\x02\n\x11NetworkOptionsGpb\x12T\n\x08protocol\x18\x02 \x01(\x0e\x32\x19.a.elwood.client.Protocol:\x04HTTPB!\x8a\xb5\x18\x1d\x31=HTTP, 2=RTSP, 3=SMTP, 4=FTP\x12\x38\n\nconnection\x18\x03 \x01(\x0b\x32$.a.elwood.client.ConnetionOptionsGpb\x12-\n\x04http\x18\x04 \x01(\x0b\x32\x1f.a.elwood.client.HttpOptionsGpb\x12/\n\x06\x61\x63tion\x18\x05 \x01(\x0b\x32\x1f.a.elwood.client.WriteActionGpb\"\xe9\x03\n\x0eWriteActionGpb\x12T\n\x06outDir\x18\x01 \x01(\tBD\x8a\xb5\x18@The destination directory for the saved files (type=kSaveToFile)\x12\x63\n\x10\x63hecksumNumBytes\x18\x02 \x01(\x04:\x01\x30\x42\x46\x8a\xb5\x18\x42The number of bytes to compute checksum on (type=kComputeChecksum)\x12\x8d\x01\n\x0esampleInterval\x18\x03 \x01(\x0b\x32\".a.elwood.client.SampleIntervalGpbBQ\x8a\xb5\x18MThe interval (in seconds) to sample download progress (type=kAnalyzeProgress)\x12\x8b\x01\n\x0epauseIntervals\x18\x04 \x03(\x0b\x32!.a.elwood.client.PauseIntervalGpbBP\x8a\xb5\x18LThe interval (in seconds) to pause download progress (type=kAnalyzeProgress)\"\xcd\x02\n\x0eHttpOptionsGpb\x12S\n\x07version\x18\x01 \x01(\x0e\x32\x1c.a.elwood.client.HttpVersion:\x08HTTP_1_1B\x1a\x8a\xb5\x18\x16\x31=http/1.0, 2=http/1.1\x12p\n\x06method\x18\x02 \x01(\x0e\x32\x1b.a.elwood.client.HttpMethod:\x03GETB>\x8a\xb5\x18:1=GET, 2=POST, 3=PUT, 4=HEAD, 5=DELETE, 6=TRACE, 7=CONNECT\x12\x11\n\tuserAgent\x18\x03 \x01(\t\x12\x31\n\x07headers\x18\x04 \x03(\x0b\x32 .a.elwood.client.KeyValuePairGpb\x12.\n\x04\x62ody\x18\x05 \x01(\x0c\x42 \x8a\xb5\x18\x1c\x66or GET/POST/PUT method only\"-\n\x0fKeyValuePairGpb\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\"/\n\x11SampleIntervalGpb\x12\r\n\x05start\x18\x01 \x01(\r\x12\x0b\n\x03\x65nd\x18\x02 \x01(\r\"D\n\x10PauseIntervalGpb\x12\x15\n\rtimeOffsetSec\x18\x01 \x01(\x04\x12\x19\n\x11pauseDurationMsec\x18\x02 \x01(\x04\"\xef\x01\n\x13\x43onnetionOptionsGpb\x12j\n\ttimeoutMs\x18\x01 \x01(\rBW\x8a\xb5\x18Sthe maximum time in miliseconds that you allow the connection to the server to take\x12l\n\x0cmaxRecvSpeed\x18\x02 \x01(\rBV\x8a\xb5\x18Rthe average download rate (bytes/sec) is less than or equal to the parameter value\"\xab\x04\n\x14SessionStatisticsGpb\x12M\n\ttotalTime\x18\x01 \x01(\x04\x42:\x8a\xb5\x18\x36the total time (in microsec) for the previous transfer\x12Q\n\x0b\x63onnectTime\x18\x02 \x01(\x04\x42<\x8a\xb5\x18\x38the connect time (in microsec) for the previous transfer\x12\x66\n\x11startTransferTime\x18\x03 \x01(\x04\x42K\x8a\xb5\x18Gthe time (in microsec) from the start until the first byte was received\x12^\n\rdownloadSpeed\x18\x04 \x01(\x04\x42G\x8a\xb5\x18\x43the average download speed for the complete download (bits/second) \x12`\n\x0c\x64ownloadSize\x18\x05 \x01(\x04\x42J\x8a\xb5\x18\x46the total amount of bytes that were downloaded for the latest transfer\x12G\n\x08numConns\x18\x06 \x01(\x04\x42\x35\x8a\xb5\x18\x31how many new successful connections were created *1\n\x08Protocol\x12\x08\n\x04HTTP\x10\x01\x12\x08\n\x04RTSP\x10\x02\x12\x08\n\x04SMTP\x10\x03\x12\x07\n\x03\x46TP\x10\x04*V\n\nHttpMethod\x12\x07\n\x03GET\x10\x01\x12\x08\n\x04POST\x10\x02\x12\x07\n\x03PUT\x10\x03\x12\x08\n\x04HEAD\x10\x04\x12\n\n\x06\x44\x45LETE\x10\x05\x12\t\n\x05TRACE\x10\x06\x12\x0b\n\x07\x43ONNECT\x10\x07*)\n\x0bHttpVersion\x12\x0c\n\x08HTTP_1_0\x10\x00\x12\x0c\n\x08HTTP_1_1\x10\x01')

_PROTOCOL = descriptor.EnumDescriptor(
  name='Protocol',
  full_name='a.elwood.client.Protocol',
  filename=None,
  file=DESCRIPTOR,
  values=[
    descriptor.EnumValueDescriptor(
      name='HTTP', index=0, number=1,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='RTSP', index=1, number=2,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='SMTP', index=2, number=3,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='FTP', index=3, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=3006,
  serialized_end=3055,
)


_HTTPMETHOD = descriptor.EnumDescriptor(
  name='HttpMethod',
  full_name='a.elwood.client.HttpMethod',
  filename=None,
  file=DESCRIPTOR,
  values=[
    descriptor.EnumValueDescriptor(
      name='GET', index=0, number=1,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='POST', index=1, number=2,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='PUT', index=2, number=3,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='HEAD', index=3, number=4,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='DELETE', index=4, number=5,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='TRACE', index=5, number=6,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='CONNECT', index=6, number=7,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=3057,
  serialized_end=3143,
)


_HTTPVERSION = descriptor.EnumDescriptor(
  name='HttpVersion',
  full_name='a.elwood.client.HttpVersion',
  filename=None,
  file=DESCRIPTOR,
  values=[
    descriptor.EnumValueDescriptor(
      name='HTTP_1_0', index=0, number=0,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='HTTP_1_1', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=3145,
  serialized_end=3186,
)


HTTP = 1
RTSP = 2
SMTP = 3
FTP = 4
GET = 1
POST = 2
PUT = 3
HEAD = 4
DELETE = 5
TRACE = 6
CONNECT = 7
HTTP_1_0 = 0
HTTP_1_1 = 1


_CLIENTCFGGPB_SESSIONTYPE = descriptor.EnumDescriptor(
  name='SessionType',
  full_name='a.elwood.client.ClientCfgGpb.SessionType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    descriptor.EnumValueDescriptor(
      name='kDefault', index=0, number=1,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='kSaveToFile', index=1, number=2,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='kComputeChecksum', index=2, number=3,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='kAnalyzeProgress', index=3, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=399,
  serialized_end=487,
)


_CLIENTCFGGPB = descriptor.Descriptor(
  name='ClientCfgGpb',
  full_name='a.elwood.client.ClientCfgGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='sessionType', full_name='a.elwood.client.ClientCfgGpb.sessionType', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=3,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030=1=none, 2=save to file, 3=compute checksum 4=analyze progress')),
    descriptor.FieldDescriptor(
      name='maxConnects', full_name='a.elwood.client.ClientCfgGpb.maxConnects', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=1024,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0301maximum amount of simultaneously open connections')),
    descriptor.FieldDescriptor(
      name='options', full_name='a.elwood.client.ClientCfgGpb.options', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _CLIENTCFGGPB_SESSIONTYPE,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=98,
  serialized_end=487,
)


_CLIENTGPB = descriptor.Descriptor(
  name='ClientGpb',
  full_name='a.elwood.client.ClientGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='clientIp', full_name='a.elwood.client.ClientGpb.clientIp', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='cfg', full_name='a.elwood.client.ClientGpb.cfg', index=1,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='interface', full_name='a.elwood.client.ClientGpb.interface', index=2,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030 interface matching the client ip')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=490,
  serialized_end=620,
)


_SESSIONCFGGPB = descriptor.Descriptor(
  name='SessionCfgGpb',
  full_name='a.elwood.client.SessionCfgGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='id', full_name='a.elwood.client.SessionCfgGpb.id', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='url', full_name='a.elwood.client.SessionCfgGpb.url', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='options', full_name='a.elwood.client.SessionCfgGpb.options', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030<If not set, the session retrieved the global network options')),
    descriptor.FieldDescriptor(
      name='isNewConnection', full_name='a.elwood.client.SessionCfgGpb.isNewConnection', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030$If set to true start new tcp session')),
    descriptor.FieldDescriptor(
      name='isLastTransaction', full_name='a.elwood.client.SessionCfgGpb.isLastTransaction', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0306if set to true close tcp session in end of transaction')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=623,
  serialized_end=948,
)


_NETWORKOPTIONSGPB = descriptor.Descriptor(
  name='NetworkOptionsGpb',
  full_name='a.elwood.client.NetworkOptionsGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='protocol', full_name='a.elwood.client.NetworkOptionsGpb.protocol', index=0,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\0351=HTTP, 2=RTSP, 3=SMTP, 4=FTP')),
    descriptor.FieldDescriptor(
      name='connection', full_name='a.elwood.client.NetworkOptionsGpb.connection', index=1,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='http', full_name='a.elwood.client.NetworkOptionsGpb.http', index=2,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='action', full_name='a.elwood.client.NetworkOptionsGpb.action', index=3,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=951,
  serialized_end=1210,
)


_WRITEACTIONGPB = descriptor.Descriptor(
  name='WriteActionGpb',
  full_name='a.elwood.client.WriteActionGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='outDir', full_name='a.elwood.client.WriteActionGpb.outDir', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030@The destination directory for the saved files (type=kSaveToFile)')),
    descriptor.FieldDescriptor(
      name='checksumNumBytes', full_name='a.elwood.client.WriteActionGpb.checksumNumBytes', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030BThe number of bytes to compute checksum on (type=kComputeChecksum)')),
    descriptor.FieldDescriptor(
      name='sampleInterval', full_name='a.elwood.client.WriteActionGpb.sampleInterval', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030MThe interval (in seconds) to sample download progress (type=kAnalyzeProgress)')),
    descriptor.FieldDescriptor(
      name='pauseIntervals', full_name='a.elwood.client.WriteActionGpb.pauseIntervals', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030LThe interval (in seconds) to pause download progress (type=kAnalyzeProgress)')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1213,
  serialized_end=1702,
)


_HTTPOPTIONSGPB = descriptor.Descriptor(
  name='HttpOptionsGpb',
  full_name='a.elwood.client.HttpOptionsGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='version', full_name='a.elwood.client.HttpOptionsGpb.version', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\0261=http/1.0, 2=http/1.1')),
    descriptor.FieldDescriptor(
      name='method', full_name='a.elwood.client.HttpOptionsGpb.method', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030:1=GET, 2=POST, 3=PUT, 4=HEAD, 5=DELETE, 6=TRACE, 7=CONNECT')),
    descriptor.FieldDescriptor(
      name='userAgent', full_name='a.elwood.client.HttpOptionsGpb.userAgent', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='headers', full_name='a.elwood.client.HttpOptionsGpb.headers', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='body', full_name='a.elwood.client.HttpOptionsGpb.body', index=4,
      number=5, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\034for GET/POST/PUT method only')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1705,
  serialized_end=2038,
)


_KEYVALUEPAIRGPB = descriptor.Descriptor(
  name='KeyValuePairGpb',
  full_name='a.elwood.client.KeyValuePairGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='key', full_name='a.elwood.client.KeyValuePairGpb.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='value', full_name='a.elwood.client.KeyValuePairGpb.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2040,
  serialized_end=2085,
)


_SAMPLEINTERVALGPB = descriptor.Descriptor(
  name='SampleIntervalGpb',
  full_name='a.elwood.client.SampleIntervalGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='start', full_name='a.elwood.client.SampleIntervalGpb.start', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='end', full_name='a.elwood.client.SampleIntervalGpb.end', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2087,
  serialized_end=2134,
)


_PAUSEINTERVALGPB = descriptor.Descriptor(
  name='PauseIntervalGpb',
  full_name='a.elwood.client.PauseIntervalGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='timeOffsetSec', full_name='a.elwood.client.PauseIntervalGpb.timeOffsetSec', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='pauseDurationMsec', full_name='a.elwood.client.PauseIntervalGpb.pauseDurationMsec', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2136,
  serialized_end=2204,
)


_CONNETIONOPTIONSGPB = descriptor.Descriptor(
  name='ConnetionOptionsGpb',
  full_name='a.elwood.client.ConnetionOptionsGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='timeoutMs', full_name='a.elwood.client.ConnetionOptionsGpb.timeoutMs', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030Sthe maximum time in miliseconds that you allow the connection to the server to take')),
    descriptor.FieldDescriptor(
      name='maxRecvSpeed', full_name='a.elwood.client.ConnetionOptionsGpb.maxRecvSpeed', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030Rthe average download rate (bytes/sec) is less than or equal to the parameter value')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2207,
  serialized_end=2446,
)


_SESSIONSTATISTICSGPB = descriptor.Descriptor(
  name='SessionStatisticsGpb',
  full_name='a.elwood.client.SessionStatisticsGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='totalTime', full_name='a.elwood.client.SessionStatisticsGpb.totalTime', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0306the total time (in microsec) for the previous transfer')),
    descriptor.FieldDescriptor(
      name='connectTime', full_name='a.elwood.client.SessionStatisticsGpb.connectTime', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0308the connect time (in microsec) for the previous transfer')),
    descriptor.FieldDescriptor(
      name='startTransferTime', full_name='a.elwood.client.SessionStatisticsGpb.startTransferTime', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030Gthe time (in microsec) from the start until the first byte was received')),
    descriptor.FieldDescriptor(
      name='downloadSpeed', full_name='a.elwood.client.SessionStatisticsGpb.downloadSpeed', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030Cthe average download speed for the complete download (bits/second) ')),
    descriptor.FieldDescriptor(
      name='downloadSize', full_name='a.elwood.client.SessionStatisticsGpb.downloadSize', index=4,
      number=5, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030Fthe total amount of bytes that were downloaded for the latest transfer')),
    descriptor.FieldDescriptor(
      name='numConns', full_name='a.elwood.client.SessionStatisticsGpb.numConns', index=5,
      number=6, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0301how many new successful connections were created ')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2449,
  serialized_end=3004,
)

import include.a.infra.prov.definitions_pb2

_CLIENTCFGGPB.fields_by_name['sessionType'].enum_type = _CLIENTCFGGPB_SESSIONTYPE
_CLIENTCFGGPB.fields_by_name['options'].message_type = _NETWORKOPTIONSGPB
_CLIENTCFGGPB_SESSIONTYPE.containing_type = _CLIENTCFGGPB;
_CLIENTGPB.fields_by_name['cfg'].message_type = _CLIENTCFGGPB
_SESSIONCFGGPB.fields_by_name['options'].message_type = _NETWORKOPTIONSGPB
_NETWORKOPTIONSGPB.fields_by_name['protocol'].enum_type = _PROTOCOL
_NETWORKOPTIONSGPB.fields_by_name['connection'].message_type = _CONNETIONOPTIONSGPB
_NETWORKOPTIONSGPB.fields_by_name['http'].message_type = _HTTPOPTIONSGPB
_NETWORKOPTIONSGPB.fields_by_name['action'].message_type = _WRITEACTIONGPB
_WRITEACTIONGPB.fields_by_name['sampleInterval'].message_type = _SAMPLEINTERVALGPB
_WRITEACTIONGPB.fields_by_name['pauseIntervals'].message_type = _PAUSEINTERVALGPB
_HTTPOPTIONSGPB.fields_by_name['version'].enum_type = _HTTPVERSION
_HTTPOPTIONSGPB.fields_by_name['method'].enum_type = _HTTPMETHOD
_HTTPOPTIONSGPB.fields_by_name['headers'].message_type = _KEYVALUEPAIRGPB

class ClientCfgGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _CLIENTCFGGPB
  
  # @@protoc_insertion_point(class_scope:a.elwood.client.ClientCfgGpb)

class ClientGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _CLIENTGPB
  
  # @@protoc_insertion_point(class_scope:a.elwood.client.ClientGpb)

class SessionCfgGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _SESSIONCFGGPB
  
  # @@protoc_insertion_point(class_scope:a.elwood.client.SessionCfgGpb)

class NetworkOptionsGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _NETWORKOPTIONSGPB
  
  # @@protoc_insertion_point(class_scope:a.elwood.client.NetworkOptionsGpb)

class WriteActionGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _WRITEACTIONGPB
  
  # @@protoc_insertion_point(class_scope:a.elwood.client.WriteActionGpb)

class HttpOptionsGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _HTTPOPTIONSGPB
  
  # @@protoc_insertion_point(class_scope:a.elwood.client.HttpOptionsGpb)

class KeyValuePairGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _KEYVALUEPAIRGPB
  
  # @@protoc_insertion_point(class_scope:a.elwood.client.KeyValuePairGpb)

class SampleIntervalGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _SAMPLEINTERVALGPB
  
  # @@protoc_insertion_point(class_scope:a.elwood.client.SampleIntervalGpb)

class PauseIntervalGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _PAUSEINTERVALGPB
  
  # @@protoc_insertion_point(class_scope:a.elwood.client.PauseIntervalGpb)

class ConnetionOptionsGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _CONNETIONOPTIONSGPB
  
  # @@protoc_insertion_point(class_scope:a.elwood.client.ConnetionOptionsGpb)

class SessionStatisticsGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _SESSIONSTATISTICSGPB
  
  # @@protoc_insertion_point(class_scope:a.elwood.client.SessionStatisticsGpb)

# @@protoc_insertion_point(module_scope)
