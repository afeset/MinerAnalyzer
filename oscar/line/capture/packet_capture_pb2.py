# Generated by the protocol buffer compiler.  DO NOT EDIT!

from google.protobuf import descriptor
from google.protobuf import message
from google.protobuf import reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)


DESCRIPTOR = descriptor.FileDescriptor(
  name='line/capture/packet_capture.proto',
  package='a.line.capture',
  serialized_pb='\n!line/capture/packet_capture.proto\x12\x0e\x61.line.capture\x1a&include/a/infra/prov/definitions.proto\x1a)include/a/infra/net/util/ip_address.proto\x1a(include/a/infra/net/util/ip_subnet.proto\"\xef\x05\n\x08SetupGpb\x12L\n\x05types\x18\x01 \x03(\x0e\x32\x1a.a.line.capture.PacketTypeB!\x8a\xb5\x18\x1dlist of enum types to capture\x12[\n\nbufferSize\x18\x02 \x01(\x04\x42G\x8a\xb5\x18\x43size of capture buffer in Kbytes to reallocate if desired to change\x12_\n\x02ip\x18\x03 \x01(\x0b\x32\x18.a.net.util.IPAddressGpbB9\x8a\xb5\x18\x35ip address to capture if exists on either src or dest\x12\x61\n\x06subnet\x18\t \x01(\x0b\x32\x17.a.net.util.IPSubnetGpbB8\x8a\xb5\x18\x34ip subnet to capture if exists on either src or dest\x12I\n\x0fnumPacketsLimit\x18\x04 \x01(\x04:\x08\x31\x30\x30\x30\x30\x30\x30\x30\x42&\x8a\xb5\x18\"limit number of packets to capture\x12\x64\n\x0frequireAllFlags\x18\x05 \x01(\x08\x42K\x8a\xb5\x18GWhen set to true, will only capture packets conforming to all flags set\x12\x33\n\x06protos\x18\x06 \x03(\x04\x42#\x8a\xb5\x18\x1flist of IP protocols to capture\x12\x33\n\x05ports\x18\x07 \x03(\x04\x42$\x8a\xb5\x18 list of src/dst ports to capture\x12Y\n\x0f\x65nabledNicsMask\x18\x08 \x01(\r:\x03\x32\x35\x35\x42;\x8a\xb5\x18\x37\x38 bit mask of bit per nic. bit off -> nic not recording\"\xba\x02\n\x10\x43\x61ptureStatusGpb\x12\x1c\n\x14isCurrentlyRecording\x18\x01 \x01(\x08\x12\x16\n\x0eremainingBytes\x18\x02 \x01(\x04\x12\x1c\n\x14packetsCapturedSoFar\x18\x03 \x01(\x04\x12!\n\x19remainingPacketsToCapture\x18\x04 \x01(\x04\x12\x12\n\ncapturedIP\x18\x05 \x01(\t\x12\x31\n\rcaptureFilter\x18\x06 \x03(\x0e\x32\x1a.a.line.capture.PacketType\x12\x34\n\x10TypesNotInFilter\x18\x07 \x03(\x0e\x32\x1a.a.line.capture.PacketType\x12\x1b\n\x13\x63\x61pturedIpProtocols\x18\x08 \x03(\x04\x12\x15\n\rcapturedPorts\x18\t \x03(\x04\"T\n\x13saveFileInParamsGpb\x12=\n\x08\x66ilename\x18\x01 \x01(\tB+\x8a\xb5\x18\'name of file to save current capture to\"\x8a\x01\n\x11StartCapturingGpb\x12$\n\x02in\x18\x01 \x01(\x0b\x32\x18.a.line.capture.SetupGpb\x12\x1c\n\x03out\x18\x02 \x01(\x0b\x32\x0f.a.prov.NullGpb:1\x8a\xb5\x18-start capturing according to given parameters\"a\n\x10StopCapturingGpb\x12\x1b\n\x02in\x18\x01 \x01(\x0b\x32\x0f.a.prov.NullGpb\x12\x1c\n\x03out\x18\x02 \x01(\x0b\x32\x0f.a.prov.NullGpb:\x12\x8a\xb5\x18\x0estop capturing\"r\n\x0cgetStatusGpb\x12\x1b\n\x02in\x18\x01 \x01(\x0b\x32\x0f.a.prov.NullGpb\x12-\n\x03out\x18\x02 \x01(\x0b\x32 .a.line.capture.CaptureStatusGpb:\x16\x8a\xb5\x18\x12get capture status\"\x1c\n\nzstatusGpb\x12\x0e\n\x06result\x18\x01 \x01(\t\"p\n\x0czedStatusGpb\x12\x1b\n\x02in\x18\x01 \x01(\x0b\x32\x0f.a.prov.NullGpb\x12\'\n\x03out\x18\x02 \x01(\x0b\x32\x1a.a.line.capture.zstatusGpb:\x1a\x8a\xb5\x18\x16show the status of zed\"\x90\x01\n\x0esaveCaptureGpb\x12/\n\x02in\x18\x01 \x01(\x0b\x32#.a.line.capture.saveFileInParamsGpb\x12\x1c\n\x03out\x18\x02 \x01(\x0b\x32\x0f.a.prov.NullGpb:/\x8a\xb5\x18+save current capture to a pcap file on disk*\xe7\x02\n\nPacketType\x12\x08\n\x04none\x10\x00\x12\t\n\x05nonIP\x10\x01\x12\t\n\x05\x62\x61\x64IP\x10\x02\x12\x07\n\x03udp\x10\x04\x12\x07\n\x03tcp\x10\x08\x12\r\n\tnonTcpUdp\x10\x10\x12\x08\n\x04mpls\x10 \x12\x08\n\x04vlan\x10@\x12\r\n\x08vsNoFlow\x10\x80\x01\x12\x12\n\rvsAfterFinRst\x10\x80\x02\x12\x0e\n\tvidServer\x10\x80\x04\x12\x0e\n\tdetection\x10\x80\x08\x12\x18\n\x13\x64\x65tectionLookForSyn\x10\x80\x10\x12\x12\n\rvidSevrerFlow\x10\x80 \x12\x0f\n\nspecificIP\x10\x80@\x12\t\n\x03\x61rp\x10\x80\x80\x01\x12\n\n\x04ipv6\x10\x80\x80\x02\x12\x16\n\x10specificIpProtos\x10\x80\x80\x04\x12\x13\n\rspecificPorts\x10\x80\x80\x08\x12\x11\n\x0b\x62\x61\x64\x43hecksum\x10\x80\x80\x10\x12\x10\n\nipFragment\x10\x80\x80@\x12\r\n\x06\x62\x61\x64Syn\x10\x80\x80\x80\x01\x12\n\n\x03\x61ll\x10\xff\xff\xff\x07')

_PACKETTYPE = descriptor.EnumDescriptor(
  name='PacketType',
  full_name='a.line.capture.PacketType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    descriptor.EnumValueDescriptor(
      name='none', index=0, number=0,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='nonIP', index=1, number=1,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='badIP', index=2, number=2,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='udp', index=3, number=4,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='tcp', index=4, number=8,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='nonTcpUdp', index=5, number=16,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='mpls', index=6, number=32,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='vlan', index=7, number=64,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='vsNoFlow', index=8, number=128,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='vsAfterFinRst', index=9, number=256,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='vidServer', index=10, number=512,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='detection', index=11, number=1024,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='detectionLookForSyn', index=12, number=2048,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='vidSevrerFlow', index=13, number=4096,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='specificIP', index=14, number=8192,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='arp', index=15, number=16384,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='ipv6', index=16, number=32768,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='specificIpProtos', index=17, number=65536,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='specificPorts', index=18, number=131072,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='badChecksum', index=19, number=262144,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='ipFragment', index=20, number=1048576,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='badSyn', index=21, number=2097152,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='all', index=22, number=16777215,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1983,
  serialized_end=2342,
)


none = 0
nonIP = 1
badIP = 2
udp = 4
tcp = 8
nonTcpUdp = 16
mpls = 32
vlan = 64
vsNoFlow = 128
vsAfterFinRst = 256
vidServer = 512
detection = 1024
detectionLookForSyn = 2048
vidSevrerFlow = 4096
specificIP = 8192
arp = 16384
ipv6 = 32768
specificIpProtos = 65536
specificPorts = 131072
badChecksum = 262144
ipFragment = 1048576
badSyn = 2097152
all = 16777215



_SETUPGPB = descriptor.Descriptor(
  name='SetupGpb',
  full_name='a.line.capture.SetupGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='types', full_name='a.line.capture.SetupGpb.types', index=0,
      number=1, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\035list of enum types to capture')),
    descriptor.FieldDescriptor(
      name='bufferSize', full_name='a.line.capture.SetupGpb.bufferSize', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030Csize of capture buffer in Kbytes to reallocate if desired to change')),
    descriptor.FieldDescriptor(
      name='ip', full_name='a.line.capture.SetupGpb.ip', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0305ip address to capture if exists on either src or dest')),
    descriptor.FieldDescriptor(
      name='subnet', full_name='a.line.capture.SetupGpb.subnet', index=3,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0304ip subnet to capture if exists on either src or dest')),
    descriptor.FieldDescriptor(
      name='numPacketsLimit', full_name='a.line.capture.SetupGpb.numPacketsLimit', index=4,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=True, default_value=10000000,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\"limit number of packets to capture')),
    descriptor.FieldDescriptor(
      name='requireAllFlags', full_name='a.line.capture.SetupGpb.requireAllFlags', index=5,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030GWhen set to true, will only capture packets conforming to all flags set')),
    descriptor.FieldDescriptor(
      name='protos', full_name='a.line.capture.SetupGpb.protos', index=6,
      number=6, type=4, cpp_type=4, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\037list of IP protocols to capture')),
    descriptor.FieldDescriptor(
      name='ports', full_name='a.line.capture.SetupGpb.ports', index=7,
      number=7, type=4, cpp_type=4, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030 list of src/dst ports to capture')),
    descriptor.FieldDescriptor(
      name='enabledNicsMask', full_name='a.line.capture.SetupGpb.enabledNicsMask', index=8,
      number=8, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=255,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\03078 bit mask of bit per nic. bit off -> nic not recording')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=179,
  serialized_end=930,
)


_CAPTURESTATUSGPB = descriptor.Descriptor(
  name='CaptureStatusGpb',
  full_name='a.line.capture.CaptureStatusGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='isCurrentlyRecording', full_name='a.line.capture.CaptureStatusGpb.isCurrentlyRecording', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='remainingBytes', full_name='a.line.capture.CaptureStatusGpb.remainingBytes', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='packetsCapturedSoFar', full_name='a.line.capture.CaptureStatusGpb.packetsCapturedSoFar', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='remainingPacketsToCapture', full_name='a.line.capture.CaptureStatusGpb.remainingPacketsToCapture', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='capturedIP', full_name='a.line.capture.CaptureStatusGpb.capturedIP', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='captureFilter', full_name='a.line.capture.CaptureStatusGpb.captureFilter', index=5,
      number=6, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='TypesNotInFilter', full_name='a.line.capture.CaptureStatusGpb.TypesNotInFilter', index=6,
      number=7, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='capturedIpProtocols', full_name='a.line.capture.CaptureStatusGpb.capturedIpProtocols', index=7,
      number=8, type=4, cpp_type=4, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='capturedPorts', full_name='a.line.capture.CaptureStatusGpb.capturedPorts', index=8,
      number=9, type=4, cpp_type=4, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=933,
  serialized_end=1247,
)


_SAVEFILEINPARAMSGPB = descriptor.Descriptor(
  name='saveFileInParamsGpb',
  full_name='a.line.capture.saveFileInParamsGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='filename', full_name='a.line.capture.saveFileInParamsGpb.filename', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\'name of file to save current capture to')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1249,
  serialized_end=1333,
)


_STARTCAPTURINGGPB = descriptor.Descriptor(
  name='StartCapturingGpb',
  full_name='a.line.capture.StartCapturingGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.capture.StartCapturingGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.capture.StartCapturingGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030-start capturing according to given parameters'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1336,
  serialized_end=1474,
)


_STOPCAPTURINGGPB = descriptor.Descriptor(
  name='StopCapturingGpb',
  full_name='a.line.capture.StopCapturingGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.capture.StopCapturingGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.capture.StopCapturingGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030\016stop capturing'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1476,
  serialized_end=1573,
)


_GETSTATUSGPB = descriptor.Descriptor(
  name='getStatusGpb',
  full_name='a.line.capture.getStatusGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.capture.getStatusGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.capture.getStatusGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030\022get capture status'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1575,
  serialized_end=1689,
)


_ZSTATUSGPB = descriptor.Descriptor(
  name='zstatusGpb',
  full_name='a.line.capture.zstatusGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='result', full_name='a.line.capture.zstatusGpb.result', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1691,
  serialized_end=1719,
)


_ZEDSTATUSGPB = descriptor.Descriptor(
  name='zedStatusGpb',
  full_name='a.line.capture.zedStatusGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.capture.zedStatusGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.capture.zedStatusGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030\026show the status of zed'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1721,
  serialized_end=1833,
)


_SAVECAPTUREGPB = descriptor.Descriptor(
  name='saveCaptureGpb',
  full_name='a.line.capture.saveCaptureGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.capture.saveCaptureGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.capture.saveCaptureGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030+save current capture to a pcap file on disk'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1836,
  serialized_end=1980,
)

import include.a.infra.prov.definitions_pb2
import include.a.infra.net.util.ip_address_pb2
import include.a.infra.net.util.ip_subnet_pb2

_SETUPGPB.fields_by_name['types'].enum_type = _PACKETTYPE
_SETUPGPB.fields_by_name['ip'].message_type = include.a.infra.net.util.ip_address_pb2._IPADDRESSGPB
_SETUPGPB.fields_by_name['subnet'].message_type = include.a.infra.net.util.ip_subnet_pb2._IPSUBNETGPB
_CAPTURESTATUSGPB.fields_by_name['captureFilter'].enum_type = _PACKETTYPE
_CAPTURESTATUSGPB.fields_by_name['TypesNotInFilter'].enum_type = _PACKETTYPE
_STARTCAPTURINGGPB.fields_by_name['in'].message_type = _SETUPGPB
_STARTCAPTURINGGPB.fields_by_name['out'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_STOPCAPTURINGGPB.fields_by_name['in'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_STOPCAPTURINGGPB.fields_by_name['out'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_GETSTATUSGPB.fields_by_name['in'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_GETSTATUSGPB.fields_by_name['out'].message_type = _CAPTURESTATUSGPB
_ZEDSTATUSGPB.fields_by_name['in'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_ZEDSTATUSGPB.fields_by_name['out'].message_type = _ZSTATUSGPB
_SAVECAPTUREGPB.fields_by_name['in'].message_type = _SAVEFILEINPARAMSGPB
_SAVECAPTUREGPB.fields_by_name['out'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB

class SetupGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _SETUPGPB
  
  # @@protoc_insertion_point(class_scope:a.line.capture.SetupGpb)

class CaptureStatusGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _CAPTURESTATUSGPB
  
  # @@protoc_insertion_point(class_scope:a.line.capture.CaptureStatusGpb)

class saveFileInParamsGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _SAVEFILEINPARAMSGPB
  
  # @@protoc_insertion_point(class_scope:a.line.capture.saveFileInParamsGpb)

class StartCapturingGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _STARTCAPTURINGGPB
  
  # @@protoc_insertion_point(class_scope:a.line.capture.StartCapturingGpb)

class StopCapturingGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _STOPCAPTURINGGPB
  
  # @@protoc_insertion_point(class_scope:a.line.capture.StopCapturingGpb)

class getStatusGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _GETSTATUSGPB
  
  # @@protoc_insertion_point(class_scope:a.line.capture.getStatusGpb)

class zstatusGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _ZSTATUSGPB
  
  # @@protoc_insertion_point(class_scope:a.line.capture.zstatusGpb)

class zedStatusGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _ZEDSTATUSGPB
  
  # @@protoc_insertion_point(class_scope:a.line.capture.zedStatusGpb)

class saveCaptureGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _SAVECAPTUREGPB
  
  # @@protoc_insertion_point(class_scope:a.line.capture.saveCaptureGpb)

# @@protoc_insertion_point(module_scope)
