# Generated by the protocol buffer compiler.  DO NOT EDIT!

from google.protobuf import descriptor
from google.protobuf import message
from google.protobuf import reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)


DESCRIPTOR = descriptor.FileDescriptor(
  name='line/va/line.proto',
  package='a.line.va',
  serialized_pb='\n\x12line/va/line.proto\x12\ta.line.va\x1a)include/a/infra/config/config_types.proto\x1a&include/a/infra/prov/definitions.proto\x1a$include/a/infra/io/nic/nic_cfg.proto\x1a(include/a/infra/net/util/ip_subnet.proto\x1a%include/a/infra/stats/histogram.proto\"\xf1\x01\n\x16SubnetsForSignatureGpb\x12<\n\rsignatureName\x18\x01 \x01(\tB%\x8a\xb5\x18!Sitename of subnet signature site\x12\x63\n\x07subnets\x18\x02 \x03(\x0b\x32\x17.a.net.util.IPSubnetGpbB9\x8a\xb5\x18\x35List of subnets to add to defaults site configuration\x12\x34\n\x12subnetsListControl\x18\x03 \x01(\x0b\x32\x18.a.config.ListControlGpb\"\xca\x01\n\x1d\x41lternativeRedirectForCgidGpb\x12@\n\x04\x63gid\x18\x01 \x01(\x03\x42\x32\x8a\xb5\x18.cgid to perform alternative pattern evaluation\x12g\n alternativeRedirectAddressFormat\x18\x02 \x01(\t:\x00\x42;\x8a\xb5\x18\x37redirect address used when userAgent and referrer match\"\xec&\n\nLineCfgGpb\x12\x1d\n\rnumVipServers\x18\x01 \x01(\r:\x06\x32\x36\x32\x31\x34\x34\x12\"\n\x10numTitlesLruHash\x18\x02 \x01(\r:\x08\x31\x36\x37\x37\x37\x32\x31\x36\x12`\n\x11\x65nableSelfAcquire\x18\x06 \x01(\x08:\x04trueB?\x8a\xb5\x18;True to enable content acquisition based on line titles LRU\x12Y\n\x12\x65nableSelfRedirect\x18\x07 \x01(\x08:\x04trueB7\x8a\xb5\x18\x33True to enable redirection based on line titles LRU\x12\xaa\x01\n\x11\x64\x65\x62ugRedirectSite\x18\x08 \x01(\tB\x8e\x01\x8a\xb5\x18\x89\x01Host suffix of content to always redirect (If not empty, and debugRedirectUrl matches, and enableSelfRedirect is true). CGID will be 9999\x12j\n\x10\x64\x65\x62ugRedirectUrl\x18\t \x01(\tBP\x8a\xb5\x18LURL prefix of content to always redirect (If debugRedirectSite is not empty)\x12O\n\x12httpRedirectOpcode\x18\n \x01(\t:\x12HTTP/1.1 302 FoundB\x1f\x8a\xb5\x18\x1bOpcode for redirect command\x12\xc6\x01\n\x12httpRedirectFields\x18\x0b \x01(\t:fConnection: close\r\nX-Content-Type-Options: nosniff\r\nContent-Type: text/html\r\nCache-Control: no-cache\r\nBB\x8a\xb5\x18>HTTP fields for redirect, for now appeneded after the location\x12\x9f\x01\n\x12tablesSaveLocation\x18\x0c \x01(\t:\x1b\x64\x61ta/oscar/line/0/var/stateBf\x8a\xb5\x18\x62\x66older name, relative to the base dir, for saving to and loading from, ip table and title lru data\x12H\n\x14\x63idCacheSaveFilename\x18\r \x01(\t:\x04\x63idsB$\x8a\xb5\x18 filename of title LRU saved data\x12\x62\n\x18videoIpTableSaveFilename\x18\x0e \x01(\t:\rvideo-serversB1\x8a\xb5\x18-filename of video servers ip table saved data\x12\x44\n\x11\x65nablePolicyTable\x18\x0f \x01(\x08:\x04trueB#\x8a\xb5\x18\x1f\x65nable/disable the policy table\x12p\n\x1bhttpRedirectSendRstToServer\x18\x10 \x01(\x08:\x05\x66\x61lseBD\x8a\xb5\x18@enable/disable sending RST to server after sending HTTP redirect\x12o\n\x1bhttpRedirectSendFinToClient\x18\x11 \x01(\x08:\x04trueBD\x8a\xb5\x18@enable/disable sending FIN to client after sending HTTP redirect\x12z\n\x1chttpRedirectSendPiggybackFin\x18\x32 \x01(\x08:\x04trueBN\x8a\xb5\x18Jenable/disable sending PIGGYBACK FIN to client on the HTTP redirect packet\x12W\n\x10maxContentSizeMB\x18\x13 \x01(\x04:\x04\x32\x30\x30\x30\x42\x37\x8a\xb5\x18\x33Max content size in MB for acquisition and delivery\x12S\n\x17\x64\x65\x66\x61ultSitePackFileName\x18\x14 \x01(\t:\x08sitepackB(\x8a\xb5\x18$filename of the default site package\x12\x8f\x01\n\x14sitePackSaveLocation\x18\x16 \x01(\t:\x19sys/oscar/line/0/var/confBV\x8a\xb5\x18Rfolder name, relative to the base dir, for saving to and loading from site package\x12\x64\n\x18\x62rownieExpireTimeSeconds\x18\x17 \x01(\r:\x02\x31\x35\x42>\x8a\xb5\x18:number of seconds from now for setting brownie expire time\x12\x62\n\x1cmaxLookAheadBufferAllSitesKB\x18\x18 \x01(\x04:\x01\x30\x42\x39\x8a\xb5\x18\x35Max size for all sites of the look ahead buffer in KB\x12P\n\x17\x62yteCountToUpdateMetaKB\x18\x1a \x01(\x04:\x04\x35\x31\x32\x30\x42)\x8a\xb5\x18%Session byteCount to update meta data\x12P\n\x1ashouldUpdateMetaPeriodicly\x18\x1c \x01(\x08:\x04trueB&\x8a\xb5\x18\"Should line update meta periodicly\x12|\n(shouldRedirectRangeInHttpHeadersAllSites\x18\x1d \x01(\x08:\x04trueBD\x8a\xb5\x18@Should redirect request with range in http headers for all sites\x12z\n\'shouldAcquireRangeInHttpHeadersAllSites\x18\x1e \x01(\x08:\x04trueBC\x8a\xb5\x18?Should acquire request with range in http headers for all sites\x12I\n\x11nicStatsSleepMsec\x18! \x01(\x03:\x03\x31\x30\x30\x42)\x8a\xb5\x18%nic stats thread sleep time (in msec)\x12\x88\x01\n\x0f\x62\x61seMspLocation\x18\" \x01(\t:\x17\x61pp/oscar/sitepack.baseBV\x8a\xb5\x18Rfolder name, relative to the base dir, for saving to and loading from site package\x12j\n\x10perCgidOverrides\x18# \x03(\x0b\x32\x19.a.line.va.LineCgidCfgGpbB5\x8a\xb5\x18\x31List of per-cgid overrides for line configuration\x12=\n\x1bperCgidOverridesListControl\x18$ \x01(\x0b\x32\x18.a.config.ListControlGpb\x12Q\n\x0b\x61\x63quisition\x18% \x01(\x0b\x32 .a.line.va.LineAcquisitionCfgGpbB\x1a\x8a\xb5\x18\x16\x41\x63quisition parameters\x12m\n$shouldEnableResponseValidationTokens\x18( \x01(\x08:\x04trueB9\x8a\xb5\x18\x35general enable/disable for response tokens validation\x12\x66\n\x14subnetsForSignatures\x18) \x03(\x0b\x32!.a.line.va.SubnetsForSignatureGpbB%\x8a\xb5\x18!Additional subnets per signature.\x12v\n\x1fsubnetsForSignaturesListControl\x18* \x01(\x0b\x32\x18.a.config.ListControlGpbB3\x8a\xb5\x18/Should subnet per signature list changed or not\x12q\n\x1b\x61lternativeRedirectForCgids\x18+ \x03(\x0b\x32(.a.line.va.AlternativeRedirectForCgidGpbB\"\x8a\xb5\x18\x1e\x41lternative redirects per cgid\x12s\n&alternativeRedirectForCgidsListControl\x18, \x01(\x0b\x32\x18.a.config.ListControlGpbB)\x8a\xb5\x18%Should alternative redirects changed.\x12[\n myCfgMaxTransactionIndexToDetect\x18- \x01(\r:\x01\x31\x42.\x8a\xb5\x18*number of transactions to detect in a flow\x12Z\n\x1dshouldIgnoreChecksumConflicts\x18. \x01(\x08\x42\x33\x8a\xb5\x18/A knob to turn checksum conflicts detection off\x12\x36\n\x0fipv6PolicyRules\x18/ \x01(\x0b\x32\x1d.a.line.va.Line_Ipv6PolicyGpb\x12\x64\n\x14ignoreChecksumErrors\x18\x30 \x01(\x08\x42\x46\x8a\xb5\x18\x42When true, ignores checksum errors and packets are being processed\x12W\n\x15potentialSaveFilename\x18\x31 \x01(\t:\tpotentialB-\x8a\xb5\x18)filename of potential analyzer saved data\x12\x45\n\x17\x62\x61ndwidthDeliveryParams\x18\x34 \x01(\x0b\x32$.a.line.va.Line_BandwidthDeliveryGpb\x12[\n\x17maxConcurrentLoadedMsps\x18\x35 \x01(\x03:\x02\x33\x30\x42\x36\x8a\xb5\x18\x32Max number of allowed packages concurrently loaded\x12k\n\x19parseResponseNoContentLen\x18\x36 \x01(\x08:\x05\x66\x61lseBA\x8a\xb5\x18=Enable/disable processing of responses with no content length\x12y\n\x1areportResponseNoContentLen\x18\x37 \x01(\x08:\x05\x66\x61lseBN\x8a\xb5\x18JEnable/disable reporting transactions where response has no content length\x12\x61\n\x17shouldOpenFlowsOnSynAck\x18\x38 \x01(\x08:\x05\x66\x61lseB9\x8a\xb5\x18\x35\x65nable/disable opening flows for split flow detection\x12\x8e\x01\n+videoFlowDbNumServerBytesSeenForLongerAging\x18\x39 \x01(\x04:\x02\x32\x30\x42U\x8a\xb5\x18Qnumber of server bytes we want to see before moving a flow to the long aging list\x12\x82\x01\n\x19numPacketsForFastFlowKill\x18: \x01(\r:\x01\x31\x42\\\x8a\xb5\x18XThe number of packets we want to see from a flow we mark for fast kill before we kill it\x12\x62\n\x1bshouldReportPipelineAsVideo\x18; \x01(\x08:\x05\x66\x61lseB6\x8a\xb5\x18\x32should video pipelened flows be reported to topper\x12\x1d\n\x0enumBundleItems\x18< \x01(\x04:\x05\x36\x35\x35\x33\x36\x12(\n\x1cnumBundleAgingTicksPerSecond\x18= \x01(\x04:\x02\x32\x30\x12!\n\x15maxBundleAgingSeconds\x18> \x01(\x04:\x02\x36\x30\"\x8c\x01\n\x0eLineCgidCfgGpb\x12?\n\x04\x63gid\x18\x01 \x01(\x03\x42\x31\x8a\xb5\x18-CGID to this these over-rides will be applied\x12\x39\n\x0b\x61\x63quisition\x18\x02 \x01(\x0b\x32$.a.line.va.LineAcquisitionCgidCfgGpb\"F\n\nHttpFields\x12\x38\n\x06\x66ields\x18\x01 \x03(\tB(\x8a\xb5\x18$Add HTTP fields to redirect command.\"\xe1\x02\n\x15LineAcquisitionCfgGpb\x12\xf9\x01\n\x17qwiltPotentialAlgorithm\x18\x07 \x01(\x0e\x32\x35.a.line.va.LineAcquisitionCfgGpb.AcquisitionAlgorithm:\x10kEfficiencyBasedB\x8e\x01\x8a\xb5\x18\x89\x01\x41lgorithm for calculating \'Qwilt Potential\': kSecondHit for second-hit (2.1.2) algorithm, kEfficiencyBased for efficiency-based algorithm\"L\n\x14\x41\x63quisitionAlgorithm\x12\x0e\n\nkSecondHit\x10\x00\x12\x14\n\x10kEfficiencyBased\x10\x01\x12\x0e\n\nkFirstTime\x10\x02\"\xd4\x11\n\x19LineAcquisitionCgidCfgGpb\x12=\n\x11\x61lgorithmOverride\x18\x01 \x01(\x08\x42\"\x8a\xb5\x18\x1eOverride acquisition algorithm\x12\xb0\x01\n\talgorithm\x18\x02 \x01(\x0e\x32\x35.a.line.va.LineAcquisitionCfgGpb.AcquisitionAlgorithmBf\x8a\xb5\x18\x62\x61\x63quisition algorithm to use for this cgid, effective only if acquisitionAlgorithmOverride is true\x12y\n\x0fthresholdFactor\x18\x03 \x01(\x02:\x01\x31\x42]\x8a\xb5\x18YIf thresholdOverride is false, this multiplies global acquisition threshold for this CGID\x12\xb5\x01\n\x11thresholdOverride\x18\x04 \x01(\x08\x42\x99\x01\x8a\xb5\x18\x94\x01Override global pastVolumeAttnFactor. If true, thresholdOverrideValue is used. If false, both global threshold and per-cgid thresholdFactor are used\x12\x8d\x01\n\x16thresholdOverrideValue\x18\x05 \x01(\x02:\x01\x31\x42j\x8a\xb5\x18\x66Value replacing the global threshold to use for this cgid, effective only if thresholdOverride is true\x12P\n\x16useTitleLengthOverride\x18\x06 \x01(\x08\x42\x30\x8a\xb5\x18,Override global useTitleLength configuration\x12|\n\x0euseTitleLength\x18\x07 \x01(\x08\x42\x64\x8a\xb5\x18`Value to override global useTitleLength config, effective only if useTitleLengthOverride is true\x12\\\n\x1c\x66ullTitleOnceStartedOverride\x18\x08 \x01(\x08\x42\x36\x8a\xb5\x18\x32Override global fullTitleOnceStarted configuration\x12\x8e\x01\n\x14\x66ullTitleOnceStarted\x18\t \x01(\x08\x42p\x8a\xb5\x18lValue to override global fullTitleOnceStarted config, effective only if fullTitleOnceStartedOverride is true\x12Z\n\x1bonlyIfRangeOverlapsOverride\x18\n \x01(\x08\x42\x35\x8a\xb5\x18\x31Override global onlyIfRangeOverlaps configuration\x12\x8b\x01\n\x13onlyIfRangeOverlaps\x18\x0b \x01(\x08\x42n\x8a\xb5\x18jValue to override global onlyIfRangeOverlaps config, effective only if onlyIfRangeOverlapsOverride is true\x12X\n\x1fqwiltPotentialAlgorithmOverride\x18\x0c \x01(\x08\x42/\x8a\xb5\x18+Override global \'Qwilt Potential\' algorithm\x12\xc7\x01\n\x17qwiltPotentialAlgorithm\x18\r \x01(\x0e\x32\x35.a.line.va.LineAcquisitionCfgGpb.AcquisitionAlgorithmBo\x8a\xb5\x18k\'Qwilt Potential\' algorithm to use for this cgid, effective only if qwiltPotentialAlgorithmOverride is true\x12\xa2\x01\n\x14pastVolumeAttnFactor\x18\x0e \x01(\x02:\x01\x31\x42\x80\x01\x8a\xb5\x18|If !=1, multiplies global pastVolumeAttnFactor factor for this CGID, effective only if pastVolumeAttnFactorOverride is false\x12\xdb\x01\n\x1cpastVolumeAttnFactorOverride\x18\x0f \x01(\x08\x42\xb4\x01\x8a\xb5\x18\xaf\x01Override global pastVolumeAttnFactor. If true, pastVolumeAttnFactorOverrideValue is used. If false, both global pastVolumeAttnFactor and per-cgid pastVolumeAttnFactor are used\x12\xb1\x01\n!pastVolumeAttnFactorOverrideValue\x18\x10 \x01(\x02:\x03\x30.9B\x80\x01\x8a\xb5\x18|Value replacing the global pastVolumeAttnFactor to use for this cgid, effective only if pastVolumeAttnFactorOverride is true\"\xa4\x03\n\x11Line_GetConfigGpb\x12\x1b\n\x02in\x18\x01 \x01(\x0b\x32\x0f.a.prov.NullGpb\x12\x30\n\x03out\x18\x02 \x01(\x0b\x32#.a.line.va.Line_GetConfigGpb.Output\x1a\xa3\x02\n\x06Output\x12\x1e\n\x16\x64\x65liveryBlockerEnabled\x18\x01 \x01(\x08\x12$\n\x1c\x65\x66\x66iciencyAlgorithmThreshold\x18\x02 \x01(\x02\x12*\n\"efficiencyAlgorithmThresholdMargin\x18\x03 \x01(\x02\x12\x1a\n\x12useContentItemSize\x18\x04 \x01(\x08\x12\x1b\n\x13\x63ontinueOnceStarted\x18\x05 \x01(\x08\x12\x1b\n\x13onlyIfRangeOverlaps\x18\x06 \x01(\x08\x12#\n\x1bpastVolumeAttenuationFactor\x18\x07 \x01(\x02\x12,\n$pastVolumeAttenuationIntervalMinutes\x18\x08 \x01(\x03:\x1a\x8a\xb5\x18\x16Get line blinky config\"\xe1\x01\n\x0eLine_StatusGbp\x12\x44\n\x11isGlobalAcquireOn\x18\x01 \x01(\x08:\x04trueB#\x8a\xb5\x18\x1f\x65nable/disable acquire globally\x12\x46\n\x12isGlobalRedirectOn\x18\x02 \x01(\x08:\x04trueB$\x8a\xb5\x18 enable/disable redirect globally\x12\x41\n\x0eisPredictionOn\x18\x03 \x01(\x08:\x05\x66\x61lseB\"\x8a\xb5\x18\x1e\x65nable/disable prediction mode\"m\n\x11Line_SetStatusGpb\x12%\n\x02in\x18\x01 \x01(\x0b\x32\x19.a.line.va.Line_StatusGbp\x12\x1c\n\x03out\x18\x02 \x01(\x0b\x32\x0f.a.prov.NullGpb:\x13\x8a\xb5\x18\x0fSet line status\"m\n\x11Line_GetStatusGpb\x12\x1b\n\x02in\x18\x01 \x01(\x0b\x32\x0f.a.prov.NullGpb\x12&\n\x03out\x18\x02 \x01(\x0b\x32\x19.a.line.va.Line_StatusGbp:\x13\x8a\xb5\x18\x0fGet line status\"\x85\x01\n\x1eLine_SetExtraRedirectFieldsGpb\x12!\n\x02in\x18\x01 \x01(\x0b\x32\x15.a.line.va.HttpFields\x12\x1c\n\x03out\x18\x02 \x01(\x0b\x32\x0f.a.prov.NullGpb:\"\x8a\xb5\x18\x1eSet HTTP redirect extra fields\"\x85\x01\n\x1eLine_GetExtraRedirectFieldsGpb\x12\x1b\n\x02in\x18\x01 \x01(\x0b\x32\x0f.a.prov.NullGpb\x12\"\n\x03out\x18\x02 \x01(\x0b\x32\x15.a.line.va.HttpFields:\"\x8a\xb5\x18\x1eGet HTTP redirect extra fields\"\x98\x03\n\x1cLine_PacketProcessingLoadGpb\x12\x1b\n\x02in\x18\x01 \x01(\x0b\x32\x0f.a.prov.NullGpb\x12;\n\x03out\x18\x02 \x01(\x0b\x32..a.line.va.Line_PacketProcessingLoadGpb.Output\x1a\xee\x01\n\x06Output\x12L\n\x07percent\x18\x01 \x03(\x01\x42;\x8a\xb5\x18\x37Percentage of time spent on processing in the line loop\x12P\n\x06packet\x18\x02 \x03(\x04\x42@\x8a\xb5\x18<number of ticks of time spent on processing in the line loop\x12\x44\n\x05total\x18\x03 \x03(\x04\x42\x35\x8a\xb5\x18\x31number of ticks of time spent on entire line loop:-\x8a\xb5\x18)Get average VA load for packet processing\"\xe8\x01\n\x14Line_SaveTitleLruGpb\x12\x34\n\x02in\x18\x01 \x01(\x0b\x32(.a.line.va.Line_SaveTitleLruGpb.InputGpb\x12\x1c\n\x03out\x18\x02 \x01(\x0b\x32\x0f.a.prov.NullGpb\x1aN\n\x08InputGpb\x12\x42\n\x08\x66ilename\x18\x01 \x01(\tB0\x8a\xb5\x18,full path for the title-lru to be saved into:,\x8a\xb5\x18(Save a snapshot of the title LRU to disk\"\x81\x02\n\x19Line_SetRedirectEnableGpb\x12\x39\n\x02in\x18\x01 \x01(\x0b\x32-.a.line.va.Line_SetRedirectEnableGpb.StateGpb\x12\x1c\n\x03out\x18\x02 \x01(\x0b\x32\x0f.a.prov.NullGpb\x1a\x8a\x01\n\x08StateGpb\x12\x37\n\x05\x61llow\x18\x01 \x01(\x08\x42(\x8a\xb5\x18$enable/disable redirects per all VAs\x12\x45\n\x03msg\x18\x02 \x01(\tB8\x8a\xb5\x18\x34\x61n optional text message that will appear in the log\"z\n\x1fLine_GetRedirectEnableStatusGpb\x12\x1b\n\x02in\x18\x01 \x01(\x0b\x32\x0f.a.prov.NullGpb\x12:\n\x03out\x18\x02 \x01(\x0b\x32-.a.line.va.Line_SetRedirectEnableGpb.StateGpb\"\xe8\x02\n\x1fLine_GetPastVolumeAttnStatusGpb\x12\x1b\n\x02in\x18\x01 \x01(\x0b\x32\x0f.a.prov.NullGpb\x12\x41\n\x03out\x18\x02 \x01(\x0b\x32\x34.a.line.va.Line_GetPastVolumeAttnStatusGpb.StatusGpb\x1a\xe4\x01\n\tStatusGpb\x12\x12\n\nlinesPerVa\x18\x01 \x01(\x03\x12 \n\x18lastPastVolumeAttnPeriod\x18\x02 \x01(\x03\x12(\n pendingPastVolumeAttnStopScanAck\x18\x03 \x01(\x08\x12\x0f\n\x07\x63urHour\x18\x04 \x01(\x03\x12\x11\n\tcurMinute\x18\x05 \x01(\x03\x12\x1b\n\x13lastHourStartedScan\x18\x06 \x01(\x03\x12\x1d\n\x15lastMinuteStartedScan\x18\x07 \x01(\x03\x12\x17\n\x0fsomePvaScanning\x18\x08 \x01(\x08\"\xf2\x04\n\x18Line_GetPortHistogramGpb\x12<\n\x02in\x18\x01 \x01(\x0b\x32\x30.a.line.va.Line_GetPortHistogramGpb.HistInputGpb\x12;\n\x03out\x18\x02 \x01(\x0b\x32..a.line.va.Line_GetPortHistogramGpb.HistOutGpb\x1a\xd4\x01\n\x0cHistInputGpb\x12\x34\n\x03top\x18\x01 \x01(\r:\x02\x31\x30\x42#\x8a\xb5\x18\x1fnumber of top ports to retrieve\x12\x8d\x01\n\x08protocol\x18\x02 \x01(\x0e\x32,.a.line.va.Line_GetPortHistogramGpb.ProtoGpb:\x03tcpBH\x8a\xb5\x18\x44\'tcp\' (default),  \'udp\' or \'video\' for video (desired) content bytes\x1a\x9e\x01\n\nHistOutGpb\x12\r\n\x05title\x18\x01 \x01(\t\x12\x45\n\x04info\x18\x02 \x03(\x0b\x32\x37.a.line.va.Line_GetPortHistogramGpb.HistOutGpb.PortInfo\x1a:\n\x08PortInfo\x12\x0c\n\x04port\x18\x01 \x01(\r\x12\x0f\n\x07percent\x18\x02 \x01(\x01\x12\x0f\n\x07summary\x18\x03 \x01(\t\"\'\n\x08ProtoGpb\x12\x07\n\x03tcp\x10\x01\x12\x07\n\x03udp\x10\x02\x12\t\n\x05video\x10\x03::\x8a\xb5\x18\x36retriev ea histogram for tcp/udp ports with top volume\"\x83\x04\n\x1aGetEfficiencyHistogramsGpb\x12:\n\x02in\x18\x01 \x01(\x0b\x32..a.line.va.GetEfficiencyHistogramsGpb.InputGpb\x12<\n\x03out\x18\x02 \x01(\x0b\x32/.a.line.va.GetEfficiencyHistogramsGpb.OutputGpb\x1a\xfa\x01\n\x08InputGpb\x12O\n\x10\x61\x63qDecisionPoint\x18\x01 \x01(\x08\x42\x35\x8a\xb5\x18\x31True to get acquisition decision point histograms\x12Q\n\x11notAcquiredPerAge\x18\x02 \x01(\x08\x42\x36\x8a\xb5\x18\x32True to get not-acquired titles per-age histograms\x12J\n\x0e\x61\x63quiredPerAge\x18\x03 \x01(\x08\x42\x32\x8a\xb5\x18.True to get acquired titles per-age histograms\x1a\x35\n\tOutputGpb\x12(\n\x05histo\x18\x01 \x03(\x0b\x32\x19.a.stats.HistogramDataGpb:7\x8a\xb5\x18\x33Retrieve the ton of histograms measuring efficiency\"\xb6\x01\n\x0cNicsStatsGpb\x12+\n\x03nic\x18\x01 \x03(\x0b\x32\x1e.a.line.va.NicsStatsGpb.NicGpb\x1ay\n\x06NicGpb\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04type\x18\x02 \x01(\t\x12\n\n\x02up\x18\x03 \x01(\x08\x12\r\n\x05speed\x18\x04 \x01(\x04\x12+\n\x08\x63ounters\x18\x05 \x01(\x0b\x32\x19.a.io.nic.ChannelStatsGpb\x12\x0b\n\x03mac\x18\x06 \x01(\t\"\xa8\x01\n\x06UaaGpb\x12&\n\x02in\x18\x01 \x01(\x0b\x32\x1a.a.line.va.UaaGpb.UaaInGpb\x12\x1c\n\x03out\x18\x02 \x01(\x0b\x32\x0f.a.prov.NullGpb\x1a$\n\x08UaaInGpb\x12\x18\n\x10IknowWhatImDoing\x18\x01 \x01(\x03:2\x8a\xb5\x18.age all flows. Use in testing environment only\"\xfc\x02\n\x1dLine_GetContentDisksStatusGpb\x12\x1b\n\x02in\x18\x01 \x01(\x0b\x32\x0f.a.prov.NullGpb\x12\x45\n\x03out\x18\x02 \x01(\x0b\x32\x38.a.line.va.Line_GetContentDisksStatusGpb.ContentDisksGpb\x1a\xd5\x01\n\x0f\x43ontentDisksGpb\x12\x14\n\x0cminDiskIndex\x18\x01 \x01(\x03\x12\x14\n\x0cmaxDiskIndex\x18\x02 \x01(\x03\x12\x16\n\x0enumActiveDisks\x18\x03 \x01(\x03\x12S\n\x08\x64iskInfo\x18\x04 \x03(\x0b\x32\x41.a.line.va.Line_GetContentDisksStatusGpb.ContentDisksGpb.DiskInfo\x1a)\n\x08\x44iskInfo\x12\r\n\x05index\x18\x01 \x01(\x03\x12\x0e\n\x06status\x18\x02 \x01(\t:\x1f\x8a\xb5\x18\x1bget status of content disks\"\xf3\x01\n\x12Line_Ipv6PolicyGpb\x12J\n\x13\x65nableIpv6Analytics\x18\x01 \x01(\x08:\x04trueB\'\x8a\xb5\x18#enable/disable Ipv6 packet analysis\x12H\n\x14\x65nableIpv6Acqusition\x18\x02 \x01(\x08:\x04trueB$\x8a\xb5\x18 enable/disable Ipv6 acquisitions\x12G\n\x13\x65nableIpv6Redirects\x18\x03 \x01(\x08:\x04trueB$\x8a\xb5\x18 enable/disable Ipv6 redirections\"\xc8\x03\n\x19Line_BandwidthDeliveryGpb\x12L\n\x14\x62wDeliverLimitEnable\x18\x01 \x01(\x08:\x05\x66\x61lseB\'\x8a\xb5\x18#enable/disable bandwidth limitation\x12Q\n\x12\x62wMbpsDeliverLimit\x18\x02 \x01(\x04:\x04\x37\x30\x30\x30\x42/\x8a\xb5\x18+Mbps bandwidth limitation (default=700Mbps)\x12U\n\x14highThresholdPercent\x18\x03 \x01(\x04:\x01\x30\x42\x34\x8a\xb5\x18\x30percent of bandwidth high threshold (default=0%)\x12S\n\x13lowThresholdPercent\x18\x04 \x01(\x04:\x01\x30\x42\x33\x8a\xb5\x18/percent of bandwidth low threshold (default=0%)\x12^\n\x13\x63reditFactorPercent\x18\x05 \x01(\x04:\x01\x30\x42>\x8a\xb5\x18:percent of bandwidth credit factor correction (default=0%)\"Q\n\x11LineRunningCfgGpb\x12\x0e\n\x06numVAs\x18\x01 \x01(\x04\x12\x16\n\x0enumDispatchers\x18\x02 \x01(\x04\x12\x14\n\x0cnumLinePorts\x18\x03 \x01(\x04\"\xc6\x01\n\x11\x41\x64\x64PortCounterGpb\x12\x35\n\x02in\x18\x01 \x01(\x0b\x32).a.line.va.AddPortCounterGpb.AddPortInGpb\x12\x1c\n\x03out\x18\x02 \x01(\x0b\x32\x0f.a.prov.NullGpb\x1a+\n\x0c\x41\x64\x64PortInGpb\x12\x0c\n\x04port\x18\x01 \x01(\r\x12\r\n\x05isUdp\x18\x02 \x01(\x08:/\x8a\xb5\x18+dinamically add a tcp/udp port stat counter')



_LINEACQUISITIONCFGGPB_ACQUISITIONALGORITHM = descriptor.EnumDescriptor(
  name='AcquisitionAlgorithm',
  full_name='a.line.va.LineAcquisitionCfgGpb.AcquisitionAlgorithm',
  filename=None,
  file=DESCRIPTOR,
  values=[
    descriptor.EnumValueDescriptor(
      name='kSecondHit', index=0, number=0,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='kEfficiencyBased', index=1, number=1,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='kFirstTime', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=6152,
  serialized_end=6228,
)

_LINE_GETPORTHISTOGRAMGPB_PROTOGPB = descriptor.EnumDescriptor(
  name='ProtoGpb',
  full_name='a.line.va.Line_GetPortHistogramGpb.ProtoGpb',
  filename=None,
  file=DESCRIPTOR,
  values=[
    descriptor.EnumValueDescriptor(
      name='tcp', index=0, number=1,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='udp', index=1, number=2,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='video', index=2, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=11559,
  serialized_end=11598,
)


_SUBNETSFORSIGNATUREGPB = descriptor.Descriptor(
  name='SubnetsForSignatureGpb',
  full_name='a.line.va.SubnetsForSignatureGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='signatureName', full_name='a.line.va.SubnetsForSignatureGpb.signatureName', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030!Sitename of subnet signature site')),
    descriptor.FieldDescriptor(
      name='subnets', full_name='a.line.va.SubnetsForSignatureGpb.subnets', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0305List of subnets to add to defaults site configuration')),
    descriptor.FieldDescriptor(
      name='subnetsListControl', full_name='a.line.va.SubnetsForSignatureGpb.subnetsListControl', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=236,
  serialized_end=477,
)


_ALTERNATIVEREDIRECTFORCGIDGPB = descriptor.Descriptor(
  name='AlternativeRedirectForCgidGpb',
  full_name='a.line.va.AlternativeRedirectForCgidGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='cgid', full_name='a.line.va.AlternativeRedirectForCgidGpb.cgid', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030.cgid to perform alternative pattern evaluation')),
    descriptor.FieldDescriptor(
      name='alternativeRedirectAddressFormat', full_name='a.line.va.AlternativeRedirectForCgidGpb.alternativeRedirectAddressFormat', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0307redirect address used when userAgent and referrer match')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=480,
  serialized_end=682,
)


_LINECFGGPB = descriptor.Descriptor(
  name='LineCfgGpb',
  full_name='a.line.va.LineCfgGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='numVipServers', full_name='a.line.va.LineCfgGpb.numVipServers', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=262144,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='numTitlesLruHash', full_name='a.line.va.LineCfgGpb.numTitlesLruHash', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=16777216,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='enableSelfAcquire', full_name='a.line.va.LineCfgGpb.enableSelfAcquire', index=2,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030;True to enable content acquisition based on line titles LRU')),
    descriptor.FieldDescriptor(
      name='enableSelfRedirect', full_name='a.line.va.LineCfgGpb.enableSelfRedirect', index=3,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0303True to enable redirection based on line titles LRU')),
    descriptor.FieldDescriptor(
      name='debugRedirectSite', full_name='a.line.va.LineCfgGpb.debugRedirectSite', index=4,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\211\001Host suffix of content to always redirect (If not empty, and debugRedirectUrl matches, and enableSelfRedirect is true). CGID will be 9999')),
    descriptor.FieldDescriptor(
      name='debugRedirectUrl', full_name='a.line.va.LineCfgGpb.debugRedirectUrl', index=5,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030LURL prefix of content to always redirect (If debugRedirectSite is not empty)')),
    descriptor.FieldDescriptor(
      name='httpRedirectOpcode', full_name='a.line.va.LineCfgGpb.httpRedirectOpcode', index=6,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=unicode("HTTP/1.1 302 Found", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\033Opcode for redirect command')),
    descriptor.FieldDescriptor(
      name='httpRedirectFields', full_name='a.line.va.LineCfgGpb.httpRedirectFields', index=7,
      number=11, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=unicode("Connection: close\r\nX-Content-Type-Options: nosniff\r\nContent-Type: text/html\r\nCache-Control: no-cache\r\n", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030>HTTP fields for redirect, for now appeneded after the location')),
    descriptor.FieldDescriptor(
      name='tablesSaveLocation', full_name='a.line.va.LineCfgGpb.tablesSaveLocation', index=8,
      number=12, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=unicode("data/oscar/line/0/var/state", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030bfolder name, relative to the base dir, for saving to and loading from, ip table and title lru data')),
    descriptor.FieldDescriptor(
      name='cidCacheSaveFilename', full_name='a.line.va.LineCfgGpb.cidCacheSaveFilename', index=9,
      number=13, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=unicode("cids", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030 filename of title LRU saved data')),
    descriptor.FieldDescriptor(
      name='videoIpTableSaveFilename', full_name='a.line.va.LineCfgGpb.videoIpTableSaveFilename', index=10,
      number=14, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=unicode("video-servers", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030-filename of video servers ip table saved data')),
    descriptor.FieldDescriptor(
      name='enablePolicyTable', full_name='a.line.va.LineCfgGpb.enablePolicyTable', index=11,
      number=15, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\037enable/disable the policy table')),
    descriptor.FieldDescriptor(
      name='httpRedirectSendRstToServer', full_name='a.line.va.LineCfgGpb.httpRedirectSendRstToServer', index=12,
      number=16, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030@enable/disable sending RST to server after sending HTTP redirect')),
    descriptor.FieldDescriptor(
      name='httpRedirectSendFinToClient', full_name='a.line.va.LineCfgGpb.httpRedirectSendFinToClient', index=13,
      number=17, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030@enable/disable sending FIN to client after sending HTTP redirect')),
    descriptor.FieldDescriptor(
      name='httpRedirectSendPiggybackFin', full_name='a.line.va.LineCfgGpb.httpRedirectSendPiggybackFin', index=14,
      number=50, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030Jenable/disable sending PIGGYBACK FIN to client on the HTTP redirect packet')),
    descriptor.FieldDescriptor(
      name='maxContentSizeMB', full_name='a.line.va.LineCfgGpb.maxContentSizeMB', index=15,
      number=19, type=4, cpp_type=4, label=1,
      has_default_value=True, default_value=2000,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0303Max content size in MB for acquisition and delivery')),
    descriptor.FieldDescriptor(
      name='defaultSitePackFileName', full_name='a.line.va.LineCfgGpb.defaultSitePackFileName', index=16,
      number=20, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=unicode("sitepack", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030$filename of the default site package')),
    descriptor.FieldDescriptor(
      name='sitePackSaveLocation', full_name='a.line.va.LineCfgGpb.sitePackSaveLocation', index=17,
      number=22, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=unicode("sys/oscar/line/0/var/conf", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030Rfolder name, relative to the base dir, for saving to and loading from site package')),
    descriptor.FieldDescriptor(
      name='brownieExpireTimeSeconds', full_name='a.line.va.LineCfgGpb.brownieExpireTimeSeconds', index=18,
      number=23, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=15,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030:number of seconds from now for setting brownie expire time')),
    descriptor.FieldDescriptor(
      name='maxLookAheadBufferAllSitesKB', full_name='a.line.va.LineCfgGpb.maxLookAheadBufferAllSitesKB', index=19,
      number=24, type=4, cpp_type=4, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0305Max size for all sites of the look ahead buffer in KB')),
    descriptor.FieldDescriptor(
      name='byteCountToUpdateMetaKB', full_name='a.line.va.LineCfgGpb.byteCountToUpdateMetaKB', index=20,
      number=26, type=4, cpp_type=4, label=1,
      has_default_value=True, default_value=5120,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030%Session byteCount to update meta data')),
    descriptor.FieldDescriptor(
      name='shouldUpdateMetaPeriodicly', full_name='a.line.va.LineCfgGpb.shouldUpdateMetaPeriodicly', index=21,
      number=28, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\"Should line update meta periodicly')),
    descriptor.FieldDescriptor(
      name='shouldRedirectRangeInHttpHeadersAllSites', full_name='a.line.va.LineCfgGpb.shouldRedirectRangeInHttpHeadersAllSites', index=22,
      number=29, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030@Should redirect request with range in http headers for all sites')),
    descriptor.FieldDescriptor(
      name='shouldAcquireRangeInHttpHeadersAllSites', full_name='a.line.va.LineCfgGpb.shouldAcquireRangeInHttpHeadersAllSites', index=23,
      number=30, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030?Should acquire request with range in http headers for all sites')),
    descriptor.FieldDescriptor(
      name='nicStatsSleepMsec', full_name='a.line.va.LineCfgGpb.nicStatsSleepMsec', index=24,
      number=33, type=3, cpp_type=2, label=1,
      has_default_value=True, default_value=100,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030%nic stats thread sleep time (in msec)')),
    descriptor.FieldDescriptor(
      name='baseMspLocation', full_name='a.line.va.LineCfgGpb.baseMspLocation', index=25,
      number=34, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=unicode("app/oscar/sitepack.base", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030Rfolder name, relative to the base dir, for saving to and loading from site package')),
    descriptor.FieldDescriptor(
      name='perCgidOverrides', full_name='a.line.va.LineCfgGpb.perCgidOverrides', index=26,
      number=35, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0301List of per-cgid overrides for line configuration')),
    descriptor.FieldDescriptor(
      name='perCgidOverridesListControl', full_name='a.line.va.LineCfgGpb.perCgidOverridesListControl', index=27,
      number=36, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='acquisition', full_name='a.line.va.LineCfgGpb.acquisition', index=28,
      number=37, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\026Acquisition parameters')),
    descriptor.FieldDescriptor(
      name='shouldEnableResponseValidationTokens', full_name='a.line.va.LineCfgGpb.shouldEnableResponseValidationTokens', index=29,
      number=40, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0305general enable/disable for response tokens validation')),
    descriptor.FieldDescriptor(
      name='subnetsForSignatures', full_name='a.line.va.LineCfgGpb.subnetsForSignatures', index=30,
      number=41, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030!Additional subnets per signature.')),
    descriptor.FieldDescriptor(
      name='subnetsForSignaturesListControl', full_name='a.line.va.LineCfgGpb.subnetsForSignaturesListControl', index=31,
      number=42, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030/Should subnet per signature list changed or not')),
    descriptor.FieldDescriptor(
      name='alternativeRedirectForCgids', full_name='a.line.va.LineCfgGpb.alternativeRedirectForCgids', index=32,
      number=43, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\036Alternative redirects per cgid')),
    descriptor.FieldDescriptor(
      name='alternativeRedirectForCgidsListControl', full_name='a.line.va.LineCfgGpb.alternativeRedirectForCgidsListControl', index=33,
      number=44, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030%Should alternative redirects changed.')),
    descriptor.FieldDescriptor(
      name='myCfgMaxTransactionIndexToDetect', full_name='a.line.va.LineCfgGpb.myCfgMaxTransactionIndexToDetect', index=34,
      number=45, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030*number of transactions to detect in a flow')),
    descriptor.FieldDescriptor(
      name='shouldIgnoreChecksumConflicts', full_name='a.line.va.LineCfgGpb.shouldIgnoreChecksumConflicts', index=35,
      number=46, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030/A knob to turn checksum conflicts detection off')),
    descriptor.FieldDescriptor(
      name='ipv6PolicyRules', full_name='a.line.va.LineCfgGpb.ipv6PolicyRules', index=36,
      number=47, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='ignoreChecksumErrors', full_name='a.line.va.LineCfgGpb.ignoreChecksumErrors', index=37,
      number=48, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030BWhen true, ignores checksum errors and packets are being processed')),
    descriptor.FieldDescriptor(
      name='potentialSaveFilename', full_name='a.line.va.LineCfgGpb.potentialSaveFilename', index=38,
      number=49, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=unicode("potential", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030)filename of potential analyzer saved data')),
    descriptor.FieldDescriptor(
      name='bandwidthDeliveryParams', full_name='a.line.va.LineCfgGpb.bandwidthDeliveryParams', index=39,
      number=52, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='maxConcurrentLoadedMsps', full_name='a.line.va.LineCfgGpb.maxConcurrentLoadedMsps', index=40,
      number=53, type=3, cpp_type=2, label=1,
      has_default_value=True, default_value=30,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0302Max number of allowed packages concurrently loaded')),
    descriptor.FieldDescriptor(
      name='parseResponseNoContentLen', full_name='a.line.va.LineCfgGpb.parseResponseNoContentLen', index=41,
      number=54, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030=Enable/disable processing of responses with no content length')),
    descriptor.FieldDescriptor(
      name='reportResponseNoContentLen', full_name='a.line.va.LineCfgGpb.reportResponseNoContentLen', index=42,
      number=55, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030JEnable/disable reporting transactions where response has no content length')),
    descriptor.FieldDescriptor(
      name='shouldOpenFlowsOnSynAck', full_name='a.line.va.LineCfgGpb.shouldOpenFlowsOnSynAck', index=43,
      number=56, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0305enable/disable opening flows for split flow detection')),
    descriptor.FieldDescriptor(
      name='videoFlowDbNumServerBytesSeenForLongerAging', full_name='a.line.va.LineCfgGpb.videoFlowDbNumServerBytesSeenForLongerAging', index=44,
      number=57, type=4, cpp_type=4, label=1,
      has_default_value=True, default_value=20,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030Qnumber of server bytes we want to see before moving a flow to the long aging list')),
    descriptor.FieldDescriptor(
      name='numPacketsForFastFlowKill', full_name='a.line.va.LineCfgGpb.numPacketsForFastFlowKill', index=45,
      number=58, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030XThe number of packets we want to see from a flow we mark for fast kill before we kill it')),
    descriptor.FieldDescriptor(
      name='shouldReportPipelineAsVideo', full_name='a.line.va.LineCfgGpb.shouldReportPipelineAsVideo', index=46,
      number=59, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0302should video pipelened flows be reported to topper')),
    descriptor.FieldDescriptor(
      name='numBundleItems', full_name='a.line.va.LineCfgGpb.numBundleItems', index=47,
      number=60, type=4, cpp_type=4, label=1,
      has_default_value=True, default_value=65536,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='numBundleAgingTicksPerSecond', full_name='a.line.va.LineCfgGpb.numBundleAgingTicksPerSecond', index=48,
      number=61, type=4, cpp_type=4, label=1,
      has_default_value=True, default_value=20,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='maxBundleAgingSeconds', full_name='a.line.va.LineCfgGpb.maxBundleAgingSeconds', index=49,
      number=62, type=4, cpp_type=4, label=1,
      has_default_value=True, default_value=60,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=685,
  serialized_end=5657,
)


_LINECGIDCFGGPB = descriptor.Descriptor(
  name='LineCgidCfgGpb',
  full_name='a.line.va.LineCgidCfgGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='cgid', full_name='a.line.va.LineCgidCfgGpb.cgid', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030-CGID to this these over-rides will be applied')),
    descriptor.FieldDescriptor(
      name='acquisition', full_name='a.line.va.LineCgidCfgGpb.acquisition', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=5660,
  serialized_end=5800,
)


_HTTPFIELDS = descriptor.Descriptor(
  name='HttpFields',
  full_name='a.line.va.HttpFields',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='fields', full_name='a.line.va.HttpFields.fields', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030$Add HTTP fields to redirect command.')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=5802,
  serialized_end=5872,
)


_LINEACQUISITIONCFGGPB = descriptor.Descriptor(
  name='LineAcquisitionCfgGpb',
  full_name='a.line.va.LineAcquisitionCfgGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='qwiltPotentialAlgorithm', full_name='a.line.va.LineAcquisitionCfgGpb.qwiltPotentialAlgorithm', index=0,
      number=7, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\211\001Algorithm for calculating \'Qwilt Potential\': kSecondHit for second-hit (2.1.2) algorithm, kEfficiencyBased for efficiency-based algorithm')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _LINEACQUISITIONCFGGPB_ACQUISITIONALGORITHM,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=5875,
  serialized_end=6228,
)


_LINEACQUISITIONCGIDCFGGPB = descriptor.Descriptor(
  name='LineAcquisitionCgidCfgGpb',
  full_name='a.line.va.LineAcquisitionCgidCfgGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='algorithmOverride', full_name='a.line.va.LineAcquisitionCgidCfgGpb.algorithmOverride', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\036Override acquisition algorithm')),
    descriptor.FieldDescriptor(
      name='algorithm', full_name='a.line.va.LineAcquisitionCgidCfgGpb.algorithm', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030bacquisition algorithm to use for this cgid, effective only if acquisitionAlgorithmOverride is true')),
    descriptor.FieldDescriptor(
      name='thresholdFactor', full_name='a.line.va.LineAcquisitionCgidCfgGpb.thresholdFactor', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030YIf thresholdOverride is false, this multiplies global acquisition threshold for this CGID')),
    descriptor.FieldDescriptor(
      name='thresholdOverride', full_name='a.line.va.LineAcquisitionCgidCfgGpb.thresholdOverride', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\224\001Override global pastVolumeAttnFactor. If true, thresholdOverrideValue is used. If false, both global threshold and per-cgid thresholdFactor are used')),
    descriptor.FieldDescriptor(
      name='thresholdOverrideValue', full_name='a.line.va.LineAcquisitionCgidCfgGpb.thresholdOverrideValue', index=4,
      number=5, type=2, cpp_type=6, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030fValue replacing the global threshold to use for this cgid, effective only if thresholdOverride is true')),
    descriptor.FieldDescriptor(
      name='useTitleLengthOverride', full_name='a.line.va.LineAcquisitionCgidCfgGpb.useTitleLengthOverride', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030,Override global useTitleLength configuration')),
    descriptor.FieldDescriptor(
      name='useTitleLength', full_name='a.line.va.LineAcquisitionCgidCfgGpb.useTitleLength', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030`Value to override global useTitleLength config, effective only if useTitleLengthOverride is true')),
    descriptor.FieldDescriptor(
      name='fullTitleOnceStartedOverride', full_name='a.line.va.LineAcquisitionCgidCfgGpb.fullTitleOnceStartedOverride', index=7,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0302Override global fullTitleOnceStarted configuration')),
    descriptor.FieldDescriptor(
      name='fullTitleOnceStarted', full_name='a.line.va.LineAcquisitionCgidCfgGpb.fullTitleOnceStarted', index=8,
      number=9, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030lValue to override global fullTitleOnceStarted config, effective only if fullTitleOnceStartedOverride is true')),
    descriptor.FieldDescriptor(
      name='onlyIfRangeOverlapsOverride', full_name='a.line.va.LineAcquisitionCgidCfgGpb.onlyIfRangeOverlapsOverride', index=9,
      number=10, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0301Override global onlyIfRangeOverlaps configuration')),
    descriptor.FieldDescriptor(
      name='onlyIfRangeOverlaps', full_name='a.line.va.LineAcquisitionCgidCfgGpb.onlyIfRangeOverlaps', index=10,
      number=11, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030jValue to override global onlyIfRangeOverlaps config, effective only if onlyIfRangeOverlapsOverride is true')),
    descriptor.FieldDescriptor(
      name='qwiltPotentialAlgorithmOverride', full_name='a.line.va.LineAcquisitionCgidCfgGpb.qwiltPotentialAlgorithmOverride', index=11,
      number=12, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030+Override global \'Qwilt Potential\' algorithm')),
    descriptor.FieldDescriptor(
      name='qwiltPotentialAlgorithm', full_name='a.line.va.LineAcquisitionCgidCfgGpb.qwiltPotentialAlgorithm', index=12,
      number=13, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030k\'Qwilt Potential\' algorithm to use for this cgid, effective only if qwiltPotentialAlgorithmOverride is true')),
    descriptor.FieldDescriptor(
      name='pastVolumeAttnFactor', full_name='a.line.va.LineAcquisitionCgidCfgGpb.pastVolumeAttnFactor', index=13,
      number=14, type=2, cpp_type=6, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030|If !=1, multiplies global pastVolumeAttnFactor factor for this CGID, effective only if pastVolumeAttnFactorOverride is false')),
    descriptor.FieldDescriptor(
      name='pastVolumeAttnFactorOverride', full_name='a.line.va.LineAcquisitionCgidCfgGpb.pastVolumeAttnFactorOverride', index=14,
      number=15, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\257\001Override global pastVolumeAttnFactor. If true, pastVolumeAttnFactorOverrideValue is used. If false, both global pastVolumeAttnFactor and per-cgid pastVolumeAttnFactor are used')),
    descriptor.FieldDescriptor(
      name='pastVolumeAttnFactorOverrideValue', full_name='a.line.va.LineAcquisitionCgidCfgGpb.pastVolumeAttnFactorOverrideValue', index=15,
      number=16, type=2, cpp_type=6, label=1,
      has_default_value=True, default_value=0.9,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030|Value replacing the global pastVolumeAttnFactor to use for this cgid, effective only if pastVolumeAttnFactorOverride is true')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=6231,
  serialized_end=8491,
)


_LINE_GETCONFIGGPB_OUTPUT = descriptor.Descriptor(
  name='Output',
  full_name='a.line.va.Line_GetConfigGpb.Output',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='deliveryBlockerEnabled', full_name='a.line.va.Line_GetConfigGpb.Output.deliveryBlockerEnabled', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='efficiencyAlgorithmThreshold', full_name='a.line.va.Line_GetConfigGpb.Output.efficiencyAlgorithmThreshold', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='efficiencyAlgorithmThresholdMargin', full_name='a.line.va.Line_GetConfigGpb.Output.efficiencyAlgorithmThresholdMargin', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='useContentItemSize', full_name='a.line.va.Line_GetConfigGpb.Output.useContentItemSize', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='continueOnceStarted', full_name='a.line.va.Line_GetConfigGpb.Output.continueOnceStarted', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='onlyIfRangeOverlaps', full_name='a.line.va.Line_GetConfigGpb.Output.onlyIfRangeOverlaps', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='pastVolumeAttenuationFactor', full_name='a.line.va.Line_GetConfigGpb.Output.pastVolumeAttenuationFactor', index=6,
      number=7, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='pastVolumeAttenuationIntervalMinutes', full_name='a.line.va.Line_GetConfigGpb.Output.pastVolumeAttenuationIntervalMinutes', index=7,
      number=8, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=8595,
  serialized_end=8886,
)

_LINE_GETCONFIGGPB = descriptor.Descriptor(
  name='Line_GetConfigGpb',
  full_name='a.line.va.Line_GetConfigGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.va.Line_GetConfigGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.va.Line_GetConfigGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_LINE_GETCONFIGGPB_OUTPUT, ],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030\026Get line blinky config'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=8494,
  serialized_end=8914,
)


_LINE_STATUSGBP = descriptor.Descriptor(
  name='Line_StatusGbp',
  full_name='a.line.va.Line_StatusGbp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='isGlobalAcquireOn', full_name='a.line.va.Line_StatusGbp.isGlobalAcquireOn', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\037enable/disable acquire globally')),
    descriptor.FieldDescriptor(
      name='isGlobalRedirectOn', full_name='a.line.va.Line_StatusGbp.isGlobalRedirectOn', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030 enable/disable redirect globally')),
    descriptor.FieldDescriptor(
      name='isPredictionOn', full_name='a.line.va.Line_StatusGbp.isPredictionOn', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\036enable/disable prediction mode')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=8917,
  serialized_end=9142,
)


_LINE_SETSTATUSGPB = descriptor.Descriptor(
  name='Line_SetStatusGpb',
  full_name='a.line.va.Line_SetStatusGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.va.Line_SetStatusGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.va.Line_SetStatusGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030\017Set line status'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=9144,
  serialized_end=9253,
)


_LINE_GETSTATUSGPB = descriptor.Descriptor(
  name='Line_GetStatusGpb',
  full_name='a.line.va.Line_GetStatusGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.va.Line_GetStatusGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.va.Line_GetStatusGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030\017Get line status'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=9255,
  serialized_end=9364,
)


_LINE_SETEXTRAREDIRECTFIELDSGPB = descriptor.Descriptor(
  name='Line_SetExtraRedirectFieldsGpb',
  full_name='a.line.va.Line_SetExtraRedirectFieldsGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.va.Line_SetExtraRedirectFieldsGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.va.Line_SetExtraRedirectFieldsGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030\036Set HTTP redirect extra fields'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=9367,
  serialized_end=9500,
)


_LINE_GETEXTRAREDIRECTFIELDSGPB = descriptor.Descriptor(
  name='Line_GetExtraRedirectFieldsGpb',
  full_name='a.line.va.Line_GetExtraRedirectFieldsGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.va.Line_GetExtraRedirectFieldsGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.va.Line_GetExtraRedirectFieldsGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030\036Get HTTP redirect extra fields'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=9503,
  serialized_end=9636,
)


_LINE_PACKETPROCESSINGLOADGPB_OUTPUT = descriptor.Descriptor(
  name='Output',
  full_name='a.line.va.Line_PacketProcessingLoadGpb.Output',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='percent', full_name='a.line.va.Line_PacketProcessingLoadGpb.Output.percent', index=0,
      number=1, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0307Percentage of time spent on processing in the line loop')),
    descriptor.FieldDescriptor(
      name='packet', full_name='a.line.va.Line_PacketProcessingLoadGpb.Output.packet', index=1,
      number=2, type=4, cpp_type=4, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030<number of ticks of time spent on processing in the line loop')),
    descriptor.FieldDescriptor(
      name='total', full_name='a.line.va.Line_PacketProcessingLoadGpb.Output.total', index=2,
      number=3, type=4, cpp_type=4, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0301number of ticks of time spent on entire line loop')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=9762,
  serialized_end=10000,
)

_LINE_PACKETPROCESSINGLOADGPB = descriptor.Descriptor(
  name='Line_PacketProcessingLoadGpb',
  full_name='a.line.va.Line_PacketProcessingLoadGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.va.Line_PacketProcessingLoadGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.va.Line_PacketProcessingLoadGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_LINE_PACKETPROCESSINGLOADGPB_OUTPUT, ],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030)Get average VA load for packet processing'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=9639,
  serialized_end=10047,
)


_LINE_SAVETITLELRUGPB_INPUTGPB = descriptor.Descriptor(
  name='InputGpb',
  full_name='a.line.va.Line_SaveTitleLruGpb.InputGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='filename', full_name='a.line.va.Line_SaveTitleLruGpb.InputGpb.filename', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030,full path for the title-lru to be saved into')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=10158,
  serialized_end=10236,
)

_LINE_SAVETITLELRUGPB = descriptor.Descriptor(
  name='Line_SaveTitleLruGpb',
  full_name='a.line.va.Line_SaveTitleLruGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.va.Line_SaveTitleLruGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.va.Line_SaveTitleLruGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_LINE_SAVETITLELRUGPB_INPUTGPB, ],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030(Save a snapshot of the title LRU to disk'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=10050,
  serialized_end=10282,
)


_LINE_SETREDIRECTENABLEGPB_STATEGPB = descriptor.Descriptor(
  name='StateGpb',
  full_name='a.line.va.Line_SetRedirectEnableGpb.StateGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='allow', full_name='a.line.va.Line_SetRedirectEnableGpb.StateGpb.allow', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030$enable/disable redirects per all VAs')),
    descriptor.FieldDescriptor(
      name='msg', full_name='a.line.va.Line_SetRedirectEnableGpb.StateGpb.msg', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0304an optional text message that will appear in the log')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=10404,
  serialized_end=10542,
)

_LINE_SETREDIRECTENABLEGPB = descriptor.Descriptor(
  name='Line_SetRedirectEnableGpb',
  full_name='a.line.va.Line_SetRedirectEnableGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.va.Line_SetRedirectEnableGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.va.Line_SetRedirectEnableGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_LINE_SETREDIRECTENABLEGPB_STATEGPB, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=10285,
  serialized_end=10542,
)


_LINE_GETREDIRECTENABLESTATUSGPB = descriptor.Descriptor(
  name='Line_GetRedirectEnableStatusGpb',
  full_name='a.line.va.Line_GetRedirectEnableStatusGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.va.Line_GetRedirectEnableStatusGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.va.Line_GetRedirectEnableStatusGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=10544,
  serialized_end=10666,
)


_LINE_GETPASTVOLUMEATTNSTATUSGPB_STATUSGPB = descriptor.Descriptor(
  name='StatusGpb',
  full_name='a.line.va.Line_GetPastVolumeAttnStatusGpb.StatusGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='linesPerVa', full_name='a.line.va.Line_GetPastVolumeAttnStatusGpb.StatusGpb.linesPerVa', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='lastPastVolumeAttnPeriod', full_name='a.line.va.Line_GetPastVolumeAttnStatusGpb.StatusGpb.lastPastVolumeAttnPeriod', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='pendingPastVolumeAttnStopScanAck', full_name='a.line.va.Line_GetPastVolumeAttnStatusGpb.StatusGpb.pendingPastVolumeAttnStopScanAck', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='curHour', full_name='a.line.va.Line_GetPastVolumeAttnStatusGpb.StatusGpb.curHour', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='curMinute', full_name='a.line.va.Line_GetPastVolumeAttnStatusGpb.StatusGpb.curMinute', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='lastHourStartedScan', full_name='a.line.va.Line_GetPastVolumeAttnStatusGpb.StatusGpb.lastHourStartedScan', index=5,
      number=6, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='lastMinuteStartedScan', full_name='a.line.va.Line_GetPastVolumeAttnStatusGpb.StatusGpb.lastMinuteStartedScan', index=6,
      number=7, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='somePvaScanning', full_name='a.line.va.Line_GetPastVolumeAttnStatusGpb.StatusGpb.somePvaScanning', index=7,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=10801,
  serialized_end=11029,
)

_LINE_GETPASTVOLUMEATTNSTATUSGPB = descriptor.Descriptor(
  name='Line_GetPastVolumeAttnStatusGpb',
  full_name='a.line.va.Line_GetPastVolumeAttnStatusGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.va.Line_GetPastVolumeAttnStatusGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.va.Line_GetPastVolumeAttnStatusGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_LINE_GETPASTVOLUMEATTNSTATUSGPB_STATUSGPB, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=10669,
  serialized_end=11029,
)


_LINE_GETPORTHISTOGRAMGPB_HISTINPUTGPB = descriptor.Descriptor(
  name='HistInputGpb',
  full_name='a.line.va.Line_GetPortHistogramGpb.HistInputGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='top', full_name='a.line.va.Line_GetPortHistogramGpb.HistInputGpb.top', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=10,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\037number of top ports to retrieve')),
    descriptor.FieldDescriptor(
      name='protocol', full_name='a.line.va.Line_GetPortHistogramGpb.HistInputGpb.protocol', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030D\'tcp\' (default),  \'udp\' or \'video\' for video (desired) content bytes')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=11184,
  serialized_end=11396,
)

_LINE_GETPORTHISTOGRAMGPB_HISTOUTGPB_PORTINFO = descriptor.Descriptor(
  name='PortInfo',
  full_name='a.line.va.Line_GetPortHistogramGpb.HistOutGpb.PortInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='port', full_name='a.line.va.Line_GetPortHistogramGpb.HistOutGpb.PortInfo.port', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='percent', full_name='a.line.va.Line_GetPortHistogramGpb.HistOutGpb.PortInfo.percent', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='summary', full_name='a.line.va.Line_GetPortHistogramGpb.HistOutGpb.PortInfo.summary', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=11499,
  serialized_end=11557,
)

_LINE_GETPORTHISTOGRAMGPB_HISTOUTGPB = descriptor.Descriptor(
  name='HistOutGpb',
  full_name='a.line.va.Line_GetPortHistogramGpb.HistOutGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='title', full_name='a.line.va.Line_GetPortHistogramGpb.HistOutGpb.title', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='info', full_name='a.line.va.Line_GetPortHistogramGpb.HistOutGpb.info', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_LINE_GETPORTHISTOGRAMGPB_HISTOUTGPB_PORTINFO, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=11399,
  serialized_end=11557,
)

_LINE_GETPORTHISTOGRAMGPB = descriptor.Descriptor(
  name='Line_GetPortHistogramGpb',
  full_name='a.line.va.Line_GetPortHistogramGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.va.Line_GetPortHistogramGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.va.Line_GetPortHistogramGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_LINE_GETPORTHISTOGRAMGPB_HISTINPUTGPB, _LINE_GETPORTHISTOGRAMGPB_HISTOUTGPB, ],
  enum_types=[
    _LINE_GETPORTHISTOGRAMGPB_PROTOGPB,
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\0306retriev ea histogram for tcp/udp ports with top volume'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=11032,
  serialized_end=11658,
)


_GETEFFICIENCYHISTOGRAMSGPB_INPUTGPB = descriptor.Descriptor(
  name='InputGpb',
  full_name='a.line.va.GetEfficiencyHistogramsGpb.InputGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='acqDecisionPoint', full_name='a.line.va.GetEfficiencyHistogramsGpb.InputGpb.acqDecisionPoint', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0301True to get acquisition decision point histograms')),
    descriptor.FieldDescriptor(
      name='notAcquiredPerAge', full_name='a.line.va.GetEfficiencyHistogramsGpb.InputGpb.notAcquiredPerAge', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0302True to get not-acquired titles per-age histograms')),
    descriptor.FieldDescriptor(
      name='acquiredPerAge', full_name='a.line.va.GetEfficiencyHistogramsGpb.InputGpb.acquiredPerAge', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030.True to get acquired titles per-age histograms')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=11814,
  serialized_end=12064,
)

_GETEFFICIENCYHISTOGRAMSGPB_OUTPUTGPB = descriptor.Descriptor(
  name='OutputGpb',
  full_name='a.line.va.GetEfficiencyHistogramsGpb.OutputGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='histo', full_name='a.line.va.GetEfficiencyHistogramsGpb.OutputGpb.histo', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=12066,
  serialized_end=12119,
)

_GETEFFICIENCYHISTOGRAMSGPB = descriptor.Descriptor(
  name='GetEfficiencyHistogramsGpb',
  full_name='a.line.va.GetEfficiencyHistogramsGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.va.GetEfficiencyHistogramsGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.va.GetEfficiencyHistogramsGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_GETEFFICIENCYHISTOGRAMSGPB_INPUTGPB, _GETEFFICIENCYHISTOGRAMSGPB_OUTPUTGPB, ],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\0303Retrieve the ton of histograms measuring efficiency'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=11661,
  serialized_end=12176,
)


_NICSSTATSGPB_NICGPB = descriptor.Descriptor(
  name='NicGpb',
  full_name='a.line.va.NicsStatsGpb.NicGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='name', full_name='a.line.va.NicsStatsGpb.NicGpb.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='type', full_name='a.line.va.NicsStatsGpb.NicGpb.type', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='up', full_name='a.line.va.NicsStatsGpb.NicGpb.up', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='speed', full_name='a.line.va.NicsStatsGpb.NicGpb.speed', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='counters', full_name='a.line.va.NicsStatsGpb.NicGpb.counters', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='mac', full_name='a.line.va.NicsStatsGpb.NicGpb.mac', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=12240,
  serialized_end=12361,
)

_NICSSTATSGPB = descriptor.Descriptor(
  name='NicsStatsGpb',
  full_name='a.line.va.NicsStatsGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='nic', full_name='a.line.va.NicsStatsGpb.nic', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_NICSSTATSGPB_NICGPB, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=12179,
  serialized_end=12361,
)


_UAAGPB_UAAINGPB = descriptor.Descriptor(
  name='UaaInGpb',
  full_name='a.line.va.UaaGpb.UaaInGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='IknowWhatImDoing', full_name='a.line.va.UaaGpb.UaaInGpb.IknowWhatImDoing', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=12444,
  serialized_end=12480,
)

_UAAGPB = descriptor.Descriptor(
  name='UaaGpb',
  full_name='a.line.va.UaaGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.va.UaaGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.va.UaaGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_UAAGPB_UAAINGPB, ],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030.age all flows. Use in testing environment only'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=12364,
  serialized_end=12532,
)


_LINE_GETCONTENTDISKSSTATUSGPB_CONTENTDISKSGPB_DISKINFO = descriptor.Descriptor(
  name='DiskInfo',
  full_name='a.line.va.Line_GetContentDisksStatusGpb.ContentDisksGpb.DiskInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='index', full_name='a.line.va.Line_GetContentDisksStatusGpb.ContentDisksGpb.DiskInfo.index', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='status', full_name='a.line.va.Line_GetContentDisksStatusGpb.ContentDisksGpb.DiskInfo.status', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=12841,
  serialized_end=12882,
)

_LINE_GETCONTENTDISKSSTATUSGPB_CONTENTDISKSGPB = descriptor.Descriptor(
  name='ContentDisksGpb',
  full_name='a.line.va.Line_GetContentDisksStatusGpb.ContentDisksGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='minDiskIndex', full_name='a.line.va.Line_GetContentDisksStatusGpb.ContentDisksGpb.minDiskIndex', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='maxDiskIndex', full_name='a.line.va.Line_GetContentDisksStatusGpb.ContentDisksGpb.maxDiskIndex', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='numActiveDisks', full_name='a.line.va.Line_GetContentDisksStatusGpb.ContentDisksGpb.numActiveDisks', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='diskInfo', full_name='a.line.va.Line_GetContentDisksStatusGpb.ContentDisksGpb.diskInfo', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_LINE_GETCONTENTDISKSSTATUSGPB_CONTENTDISKSGPB_DISKINFO, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=12669,
  serialized_end=12882,
)

_LINE_GETCONTENTDISKSSTATUSGPB = descriptor.Descriptor(
  name='Line_GetContentDisksStatusGpb',
  full_name='a.line.va.Line_GetContentDisksStatusGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.va.Line_GetContentDisksStatusGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.va.Line_GetContentDisksStatusGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_LINE_GETCONTENTDISKSSTATUSGPB_CONTENTDISKSGPB, ],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030\033get status of content disks'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=12535,
  serialized_end=12915,
)


_LINE_IPV6POLICYGPB = descriptor.Descriptor(
  name='Line_Ipv6PolicyGpb',
  full_name='a.line.va.Line_Ipv6PolicyGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='enableIpv6Analytics', full_name='a.line.va.Line_Ipv6PolicyGpb.enableIpv6Analytics', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030#enable/disable Ipv6 packet analysis')),
    descriptor.FieldDescriptor(
      name='enableIpv6Acqusition', full_name='a.line.va.Line_Ipv6PolicyGpb.enableIpv6Acqusition', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030 enable/disable Ipv6 acquisitions')),
    descriptor.FieldDescriptor(
      name='enableIpv6Redirects', full_name='a.line.va.Line_Ipv6PolicyGpb.enableIpv6Redirects', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030 enable/disable Ipv6 redirections')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=12918,
  serialized_end=13161,
)


_LINE_BANDWIDTHDELIVERYGPB = descriptor.Descriptor(
  name='Line_BandwidthDeliveryGpb',
  full_name='a.line.va.Line_BandwidthDeliveryGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='bwDeliverLimitEnable', full_name='a.line.va.Line_BandwidthDeliveryGpb.bwDeliverLimitEnable', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030#enable/disable bandwidth limitation')),
    descriptor.FieldDescriptor(
      name='bwMbpsDeliverLimit', full_name='a.line.va.Line_BandwidthDeliveryGpb.bwMbpsDeliverLimit', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=True, default_value=7000,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030+Mbps bandwidth limitation (default=700Mbps)')),
    descriptor.FieldDescriptor(
      name='highThresholdPercent', full_name='a.line.va.Line_BandwidthDeliveryGpb.highThresholdPercent', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0300percent of bandwidth high threshold (default=0%)')),
    descriptor.FieldDescriptor(
      name='lowThresholdPercent', full_name='a.line.va.Line_BandwidthDeliveryGpb.lowThresholdPercent', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030/percent of bandwidth low threshold (default=0%)')),
    descriptor.FieldDescriptor(
      name='creditFactorPercent', full_name='a.line.va.Line_BandwidthDeliveryGpb.creditFactorPercent', index=4,
      number=5, type=4, cpp_type=4, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030:percent of bandwidth credit factor correction (default=0%)')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=13164,
  serialized_end=13620,
)


_LINERUNNINGCFGGPB = descriptor.Descriptor(
  name='LineRunningCfgGpb',
  full_name='a.line.va.LineRunningCfgGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='numVAs', full_name='a.line.va.LineRunningCfgGpb.numVAs', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='numDispatchers', full_name='a.line.va.LineRunningCfgGpb.numDispatchers', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='numLinePorts', full_name='a.line.va.LineRunningCfgGpb.numLinePorts', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=13622,
  serialized_end=13703,
)


_ADDPORTCOUNTERGPB_ADDPORTINGPB = descriptor.Descriptor(
  name='AddPortInGpb',
  full_name='a.line.va.AddPortCounterGpb.AddPortInGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='port', full_name='a.line.va.AddPortCounterGpb.AddPortInGpb.port', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='isUdp', full_name='a.line.va.AddPortCounterGpb.AddPortInGpb.isUdp', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=13812,
  serialized_end=13855,
)

_ADDPORTCOUNTERGPB = descriptor.Descriptor(
  name='AddPortCounterGpb',
  full_name='a.line.va.AddPortCounterGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.va.AddPortCounterGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.va.AddPortCounterGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_ADDPORTCOUNTERGPB_ADDPORTINGPB, ],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030+dinamically add a tcp/udp port stat counter'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=13706,
  serialized_end=13904,
)

import include.a.infra.config.config_types_pb2
import include.a.infra.prov.definitions_pb2
import include.a.infra.io.nic.nic_cfg_pb2
import include.a.infra.net.util.ip_subnet_pb2
import include.a.infra.stats.histogram_pb2

_SUBNETSFORSIGNATUREGPB.fields_by_name['subnets'].message_type = include.a.infra.net.util.ip_subnet_pb2._IPSUBNETGPB
_SUBNETSFORSIGNATUREGPB.fields_by_name['subnetsListControl'].message_type = include.a.infra.config.config_types_pb2._LISTCONTROLGPB
_LINECFGGPB.fields_by_name['perCgidOverrides'].message_type = _LINECGIDCFGGPB
_LINECFGGPB.fields_by_name['perCgidOverridesListControl'].message_type = include.a.infra.config.config_types_pb2._LISTCONTROLGPB
_LINECFGGPB.fields_by_name['acquisition'].message_type = _LINEACQUISITIONCFGGPB
_LINECFGGPB.fields_by_name['subnetsForSignatures'].message_type = _SUBNETSFORSIGNATUREGPB
_LINECFGGPB.fields_by_name['subnetsForSignaturesListControl'].message_type = include.a.infra.config.config_types_pb2._LISTCONTROLGPB
_LINECFGGPB.fields_by_name['alternativeRedirectForCgids'].message_type = _ALTERNATIVEREDIRECTFORCGIDGPB
_LINECFGGPB.fields_by_name['alternativeRedirectForCgidsListControl'].message_type = include.a.infra.config.config_types_pb2._LISTCONTROLGPB
_LINECFGGPB.fields_by_name['ipv6PolicyRules'].message_type = _LINE_IPV6POLICYGPB
_LINECFGGPB.fields_by_name['bandwidthDeliveryParams'].message_type = _LINE_BANDWIDTHDELIVERYGPB
_LINECGIDCFGGPB.fields_by_name['acquisition'].message_type = _LINEACQUISITIONCGIDCFGGPB
_LINEACQUISITIONCFGGPB.fields_by_name['qwiltPotentialAlgorithm'].enum_type = _LINEACQUISITIONCFGGPB_ACQUISITIONALGORITHM
_LINEACQUISITIONCFGGPB_ACQUISITIONALGORITHM.containing_type = _LINEACQUISITIONCFGGPB;
_LINEACQUISITIONCGIDCFGGPB.fields_by_name['algorithm'].enum_type = _LINEACQUISITIONCFGGPB_ACQUISITIONALGORITHM
_LINEACQUISITIONCGIDCFGGPB.fields_by_name['qwiltPotentialAlgorithm'].enum_type = _LINEACQUISITIONCFGGPB_ACQUISITIONALGORITHM
_LINE_GETCONFIGGPB_OUTPUT.containing_type = _LINE_GETCONFIGGPB;
_LINE_GETCONFIGGPB.fields_by_name['in'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_LINE_GETCONFIGGPB.fields_by_name['out'].message_type = _LINE_GETCONFIGGPB_OUTPUT
_LINE_SETSTATUSGPB.fields_by_name['in'].message_type = _LINE_STATUSGBP
_LINE_SETSTATUSGPB.fields_by_name['out'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_LINE_GETSTATUSGPB.fields_by_name['in'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_LINE_GETSTATUSGPB.fields_by_name['out'].message_type = _LINE_STATUSGBP
_LINE_SETEXTRAREDIRECTFIELDSGPB.fields_by_name['in'].message_type = _HTTPFIELDS
_LINE_SETEXTRAREDIRECTFIELDSGPB.fields_by_name['out'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_LINE_GETEXTRAREDIRECTFIELDSGPB.fields_by_name['in'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_LINE_GETEXTRAREDIRECTFIELDSGPB.fields_by_name['out'].message_type = _HTTPFIELDS
_LINE_PACKETPROCESSINGLOADGPB_OUTPUT.containing_type = _LINE_PACKETPROCESSINGLOADGPB;
_LINE_PACKETPROCESSINGLOADGPB.fields_by_name['in'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_LINE_PACKETPROCESSINGLOADGPB.fields_by_name['out'].message_type = _LINE_PACKETPROCESSINGLOADGPB_OUTPUT
_LINE_SAVETITLELRUGPB_INPUTGPB.containing_type = _LINE_SAVETITLELRUGPB;
_LINE_SAVETITLELRUGPB.fields_by_name['in'].message_type = _LINE_SAVETITLELRUGPB_INPUTGPB
_LINE_SAVETITLELRUGPB.fields_by_name['out'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_LINE_SETREDIRECTENABLEGPB_STATEGPB.containing_type = _LINE_SETREDIRECTENABLEGPB;
_LINE_SETREDIRECTENABLEGPB.fields_by_name['in'].message_type = _LINE_SETREDIRECTENABLEGPB_STATEGPB
_LINE_SETREDIRECTENABLEGPB.fields_by_name['out'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_LINE_GETREDIRECTENABLESTATUSGPB.fields_by_name['in'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_LINE_GETREDIRECTENABLESTATUSGPB.fields_by_name['out'].message_type = _LINE_SETREDIRECTENABLEGPB_STATEGPB
_LINE_GETPASTVOLUMEATTNSTATUSGPB_STATUSGPB.containing_type = _LINE_GETPASTVOLUMEATTNSTATUSGPB;
_LINE_GETPASTVOLUMEATTNSTATUSGPB.fields_by_name['in'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_LINE_GETPASTVOLUMEATTNSTATUSGPB.fields_by_name['out'].message_type = _LINE_GETPASTVOLUMEATTNSTATUSGPB_STATUSGPB
_LINE_GETPORTHISTOGRAMGPB_HISTINPUTGPB.fields_by_name['protocol'].enum_type = _LINE_GETPORTHISTOGRAMGPB_PROTOGPB
_LINE_GETPORTHISTOGRAMGPB_HISTINPUTGPB.containing_type = _LINE_GETPORTHISTOGRAMGPB;
_LINE_GETPORTHISTOGRAMGPB_HISTOUTGPB_PORTINFO.containing_type = _LINE_GETPORTHISTOGRAMGPB_HISTOUTGPB;
_LINE_GETPORTHISTOGRAMGPB_HISTOUTGPB.fields_by_name['info'].message_type = _LINE_GETPORTHISTOGRAMGPB_HISTOUTGPB_PORTINFO
_LINE_GETPORTHISTOGRAMGPB_HISTOUTGPB.containing_type = _LINE_GETPORTHISTOGRAMGPB;
_LINE_GETPORTHISTOGRAMGPB.fields_by_name['in'].message_type = _LINE_GETPORTHISTOGRAMGPB_HISTINPUTGPB
_LINE_GETPORTHISTOGRAMGPB.fields_by_name['out'].message_type = _LINE_GETPORTHISTOGRAMGPB_HISTOUTGPB
_LINE_GETPORTHISTOGRAMGPB_PROTOGPB.containing_type = _LINE_GETPORTHISTOGRAMGPB;
_GETEFFICIENCYHISTOGRAMSGPB_INPUTGPB.containing_type = _GETEFFICIENCYHISTOGRAMSGPB;
_GETEFFICIENCYHISTOGRAMSGPB_OUTPUTGPB.fields_by_name['histo'].message_type = include.a.infra.stats.histogram_pb2._HISTOGRAMDATAGPB
_GETEFFICIENCYHISTOGRAMSGPB_OUTPUTGPB.containing_type = _GETEFFICIENCYHISTOGRAMSGPB;
_GETEFFICIENCYHISTOGRAMSGPB.fields_by_name['in'].message_type = _GETEFFICIENCYHISTOGRAMSGPB_INPUTGPB
_GETEFFICIENCYHISTOGRAMSGPB.fields_by_name['out'].message_type = _GETEFFICIENCYHISTOGRAMSGPB_OUTPUTGPB
_NICSSTATSGPB_NICGPB.fields_by_name['counters'].message_type = include.a.infra.io.nic.nic_cfg_pb2._CHANNELSTATSGPB
_NICSSTATSGPB_NICGPB.containing_type = _NICSSTATSGPB;
_NICSSTATSGPB.fields_by_name['nic'].message_type = _NICSSTATSGPB_NICGPB
_UAAGPB_UAAINGPB.containing_type = _UAAGPB;
_UAAGPB.fields_by_name['in'].message_type = _UAAGPB_UAAINGPB
_UAAGPB.fields_by_name['out'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_LINE_GETCONTENTDISKSSTATUSGPB_CONTENTDISKSGPB_DISKINFO.containing_type = _LINE_GETCONTENTDISKSSTATUSGPB_CONTENTDISKSGPB;
_LINE_GETCONTENTDISKSSTATUSGPB_CONTENTDISKSGPB.fields_by_name['diskInfo'].message_type = _LINE_GETCONTENTDISKSSTATUSGPB_CONTENTDISKSGPB_DISKINFO
_LINE_GETCONTENTDISKSSTATUSGPB_CONTENTDISKSGPB.containing_type = _LINE_GETCONTENTDISKSSTATUSGPB;
_LINE_GETCONTENTDISKSSTATUSGPB.fields_by_name['in'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_LINE_GETCONTENTDISKSSTATUSGPB.fields_by_name['out'].message_type = _LINE_GETCONTENTDISKSSTATUSGPB_CONTENTDISKSGPB
_ADDPORTCOUNTERGPB_ADDPORTINGPB.containing_type = _ADDPORTCOUNTERGPB;
_ADDPORTCOUNTERGPB.fields_by_name['in'].message_type = _ADDPORTCOUNTERGPB_ADDPORTINGPB
_ADDPORTCOUNTERGPB.fields_by_name['out'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB

class SubnetsForSignatureGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _SUBNETSFORSIGNATUREGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.SubnetsForSignatureGpb)

class AlternativeRedirectForCgidGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _ALTERNATIVEREDIRECTFORCGIDGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.AlternativeRedirectForCgidGpb)

class LineCfgGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _LINECFGGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.LineCfgGpb)

class LineCgidCfgGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _LINECGIDCFGGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.LineCgidCfgGpb)

class HttpFields(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _HTTPFIELDS
  
  # @@protoc_insertion_point(class_scope:a.line.va.HttpFields)

class LineAcquisitionCfgGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _LINEACQUISITIONCFGGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.LineAcquisitionCfgGpb)

class LineAcquisitionCgidCfgGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _LINEACQUISITIONCGIDCFGGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.LineAcquisitionCgidCfgGpb)

class Line_GetConfigGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class Output(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _LINE_GETCONFIGGPB_OUTPUT
    
    # @@protoc_insertion_point(class_scope:a.line.va.Line_GetConfigGpb.Output)
  DESCRIPTOR = _LINE_GETCONFIGGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.Line_GetConfigGpb)

class Line_StatusGbp(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _LINE_STATUSGBP
  
  # @@protoc_insertion_point(class_scope:a.line.va.Line_StatusGbp)

class Line_SetStatusGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _LINE_SETSTATUSGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.Line_SetStatusGpb)

class Line_GetStatusGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _LINE_GETSTATUSGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.Line_GetStatusGpb)

class Line_SetExtraRedirectFieldsGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _LINE_SETEXTRAREDIRECTFIELDSGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.Line_SetExtraRedirectFieldsGpb)

class Line_GetExtraRedirectFieldsGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _LINE_GETEXTRAREDIRECTFIELDSGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.Line_GetExtraRedirectFieldsGpb)

class Line_PacketProcessingLoadGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class Output(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _LINE_PACKETPROCESSINGLOADGPB_OUTPUT
    
    # @@protoc_insertion_point(class_scope:a.line.va.Line_PacketProcessingLoadGpb.Output)
  DESCRIPTOR = _LINE_PACKETPROCESSINGLOADGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.Line_PacketProcessingLoadGpb)

class Line_SaveTitleLruGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class InputGpb(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _LINE_SAVETITLELRUGPB_INPUTGPB
    
    # @@protoc_insertion_point(class_scope:a.line.va.Line_SaveTitleLruGpb.InputGpb)
  DESCRIPTOR = _LINE_SAVETITLELRUGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.Line_SaveTitleLruGpb)

class Line_SetRedirectEnableGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class StateGpb(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _LINE_SETREDIRECTENABLEGPB_STATEGPB
    
    # @@protoc_insertion_point(class_scope:a.line.va.Line_SetRedirectEnableGpb.StateGpb)
  DESCRIPTOR = _LINE_SETREDIRECTENABLEGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.Line_SetRedirectEnableGpb)

class Line_GetRedirectEnableStatusGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _LINE_GETREDIRECTENABLESTATUSGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.Line_GetRedirectEnableStatusGpb)

class Line_GetPastVolumeAttnStatusGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class StatusGpb(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _LINE_GETPASTVOLUMEATTNSTATUSGPB_STATUSGPB
    
    # @@protoc_insertion_point(class_scope:a.line.va.Line_GetPastVolumeAttnStatusGpb.StatusGpb)
  DESCRIPTOR = _LINE_GETPASTVOLUMEATTNSTATUSGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.Line_GetPastVolumeAttnStatusGpb)

class Line_GetPortHistogramGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class HistInputGpb(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _LINE_GETPORTHISTOGRAMGPB_HISTINPUTGPB
    
    # @@protoc_insertion_point(class_scope:a.line.va.Line_GetPortHistogramGpb.HistInputGpb)
  
  class HistOutGpb(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    
    class PortInfo(message.Message):
      __metaclass__ = reflection.GeneratedProtocolMessageType
      DESCRIPTOR = _LINE_GETPORTHISTOGRAMGPB_HISTOUTGPB_PORTINFO
      
      # @@protoc_insertion_point(class_scope:a.line.va.Line_GetPortHistogramGpb.HistOutGpb.PortInfo)
    DESCRIPTOR = _LINE_GETPORTHISTOGRAMGPB_HISTOUTGPB
    
    # @@protoc_insertion_point(class_scope:a.line.va.Line_GetPortHistogramGpb.HistOutGpb)
  DESCRIPTOR = _LINE_GETPORTHISTOGRAMGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.Line_GetPortHistogramGpb)

class GetEfficiencyHistogramsGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class InputGpb(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _GETEFFICIENCYHISTOGRAMSGPB_INPUTGPB
    
    # @@protoc_insertion_point(class_scope:a.line.va.GetEfficiencyHistogramsGpb.InputGpb)
  
  class OutputGpb(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _GETEFFICIENCYHISTOGRAMSGPB_OUTPUTGPB
    
    # @@protoc_insertion_point(class_scope:a.line.va.GetEfficiencyHistogramsGpb.OutputGpb)
  DESCRIPTOR = _GETEFFICIENCYHISTOGRAMSGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.GetEfficiencyHistogramsGpb)

class NicsStatsGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class NicGpb(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _NICSSTATSGPB_NICGPB
    
    # @@protoc_insertion_point(class_scope:a.line.va.NicsStatsGpb.NicGpb)
  DESCRIPTOR = _NICSSTATSGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.NicsStatsGpb)

class UaaGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class UaaInGpb(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _UAAGPB_UAAINGPB
    
    # @@protoc_insertion_point(class_scope:a.line.va.UaaGpb.UaaInGpb)
  DESCRIPTOR = _UAAGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.UaaGpb)

class Line_GetContentDisksStatusGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class ContentDisksGpb(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    
    class DiskInfo(message.Message):
      __metaclass__ = reflection.GeneratedProtocolMessageType
      DESCRIPTOR = _LINE_GETCONTENTDISKSSTATUSGPB_CONTENTDISKSGPB_DISKINFO
      
      # @@protoc_insertion_point(class_scope:a.line.va.Line_GetContentDisksStatusGpb.ContentDisksGpb.DiskInfo)
    DESCRIPTOR = _LINE_GETCONTENTDISKSSTATUSGPB_CONTENTDISKSGPB
    
    # @@protoc_insertion_point(class_scope:a.line.va.Line_GetContentDisksStatusGpb.ContentDisksGpb)
  DESCRIPTOR = _LINE_GETCONTENTDISKSSTATUSGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.Line_GetContentDisksStatusGpb)

class Line_Ipv6PolicyGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _LINE_IPV6POLICYGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.Line_Ipv6PolicyGpb)

class Line_BandwidthDeliveryGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _LINE_BANDWIDTHDELIVERYGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.Line_BandwidthDeliveryGpb)

class LineRunningCfgGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _LINERUNNINGCFGGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.LineRunningCfgGpb)

class AddPortCounterGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class AddPortInGpb(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _ADDPORTCOUNTERGPB_ADDPORTINGPB
    
    # @@protoc_insertion_point(class_scope:a.line.va.AddPortCounterGpb.AddPortInGpb)
  DESCRIPTOR = _ADDPORTCOUNTERGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.AddPortCounterGpb)

# @@protoc_insertion_point(module_scope)
