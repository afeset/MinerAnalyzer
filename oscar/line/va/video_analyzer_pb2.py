# Generated by the protocol buffer compiler.  DO NOT EDIT!

from google.protobuf import descriptor
from google.protobuf import message
from google.protobuf import reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)


DESCRIPTOR = descriptor.FileDescriptor(
  name='line/va/video_analyzer.proto',
  package='a.line.va',
  serialized_pb='\n\x1cline/va/video_analyzer.proto\x12\ta.line.va\x1a&include/a/infra/prov/definitions.proto\x1a*include/a/sys/meta/content_meta_data.proto\x1a%include/a/sys/brownies/brownies.proto\x1a$line/va/past_volume_attenuator.proto\"\xce\x0f\n\x13VideoAnalyzerCfgGpb\x12\x87\x01\n\x0esamplingThresh\x18\x01 \x01(\r:\x05\x36\x35\x35\x33\x35\x42h\x8a\xb5\x18\x64Threshold for sampling flows, 0-65535. 0 means sample 1/65536 of flows, 65535 means sample all flows\x12W\n\x1d\x64isableAutoDetectVideoServers\x18\x03 \x01(\x08\x42\x30\x8a\xb5\x18,true to disable video servers auto-detection\x12\x61\n\x0ereportToTopper\x18\x06 \x01(\x08:\x04trueBC\x8a\xb5\x18?true to report video transactions to topper (a.k.a. v3 reports)\x12m\n\x13reportBothFlowSides\x18\x07 \x01(\x08:\x04trueBJ\x8a\xb5\x18\x46true to report to topper both sides of the flow and not just responder\x12L\n\x14reportDetectionStuff\x18\x08 \x01(\x08\x42.\x8a\xb5\x18*true to report stuff about detection flows\x12\x43\n\x13videoFlowDbHashSize\x18\t \x01(\r:\x06\x32\x30\x30\x30\x30\x30\x42\x1e\x8a\xb5\x18\x1aSize of video flow DB Hash\x12:\n\x0fvideoFlowDbSize\x18\n \x01(\r:\x06\x31\x35\x30\x30\x30\x30\x42\x19\x8a\xb5\x18\x15Size of video flow DB\x12G\n\x12videoFlowDbUrlSize\x18\x0b \x01(\r:\x06\x31\x30\x30\x30\x30\x30\x42#\x8a\xb5\x18\x1fSize of video flow DB URL table\x12I\n\x16\x64\x65tectorFlowDbHashSize\x18\x0c \x01(\r:\x06\x32\x30\x30\x30\x30\x30\x42!\x8a\xb5\x18\x1dSize of detector flow DB Hash\x12@\n\x12\x64\x65tectorFlowDbSize\x18\r \x01(\r:\x06\x31\x30\x30\x30\x30\x30\x42\x1c\x8a\xb5\x18\x18Size of detector flow DB\x12Z\n\x07relaxed\x18\x10 \x01(\x08:\x05\x66\x61lseBB\x8a\xb5\x18>impose a 1msec sleep upon every main loop which got no packets\x12S\n\x18\x64\x65siredContentTypePrefix\x18\x11 \x01(\t:\x05videoB*\x8a\xb5\x18&HTTP Content-type to detect and report\x12I\n\x0etopperInterval\x18\x12 \x01(\r:\x02\x31\x30\x42-\x8a\xb5\x18)Interval for vidTopper reports in seconds\x12L\n\x13removeFlowsOnFinRst\x18\x13 \x01(\x08\x42/\x8a\xb5\x18+true to remove flowdb flows upon RST or FIN\x12W\n\x0e\x61geFlowsOnIdle\x18\x14 \x01(\x08\x42?\x8a\xb5\x18;try to age old flows even when not trigerred by new traffic\x12\x7f\n\x1a\x61geEveryXBackToBackPackets\x18\x15 \x01(\x03:\x03\x35\x30\x30\x42V\x8a\xb5\x18RWhen line has 100% packets, every how many we try to do some aging. -1 means never\x12\x65\n\x1fsecondsToReportLongTransactions\x18\x19 \x01(\r:\x02\x33\x30\x42\x38\x8a\xb5\x18\x34Number of seconds to report during long transactions\x12\x31\n\x10\x63puAffinityValue\x18\x1a \x01(\rB\x17\x8a\xb5\x18\x13\x43PU core to bind to\x12P\n\x0e\x63puAffinitySet\x18\x1b \x01(\x08:\x05\x66\x61lseB1\x8a\xb5\x18-True to set affinity, false to leave it unset\x12i\n\x0eviewTimeFactor\x18\x1c \x01(\x04:\x03\x33\x34\x35\x42L\x8a\xb5\x18HBitrate factor to multiply with the video bytes for generating view-time\x12W\n\x16videoFlowDbReqRespSize\x18\x1f \x01(\r:\x05\x31\x30\x30\x30\x30\x42\x30\x8a\xb5\x18,Size of video flow DB Request/Response table\x12\x88\x01\n(timeSinceLastByteToEndTransactionMiliSec\x18! \x01(\x04:\x06\x33\x30\x30\x30\x30\x30\x42N\x8a\xb5\x18JTime in miliseconds since last packet with payload for ending transactions\"u\n\x0bVa_StartGpb\x12\x1b\n\x02in\x18\x01 \x01(\x0b\x32\x0f.a.prov.NullGpb\x12\x1c\n\x03out\x18\x02 \x01(\x0b\x32\x0f.a.prov.NullGpb:+\x8a\xb5\x18\'Tell the VA to start processing packets\"s\n\nVa_StopGpb\x12\x1b\n\x02in\x18\x01 \x01(\x0b\x32\x0f.a.prov.NullGpb\x12\x1c\n\x03out\x18\x02 \x01(\x0b\x32\x0f.a.prov.NullGpb:*\x8a\xb5\x18&Tell the VA to stop processing packets\"\xed\x04\n\x0eVa_GetStateGpb\x12\x1b\n\x02in\x18\x01 \x01(\x0b\x32\x0f.a.prov.NullGpb\x12*\n\x03out\x18\x02 \x01(\x0b\x32\x1d.a.line.va.Va_GetStateGpb.Out\x1a\xfb\x03\n\x03Out\x12<\n\tisRunning\x18\x01 \x01(\x08\x42)\x8a\xb5\x18%True if the main VA thread is running\x12J\n\x0cisProcessing\x18\x02 \x01(\x08\x42\x34\x8a\xb5\x18\x30True if the main VA thread is processing packets\x12T\n\x0eisPendingStart\x18\x03 \x01(\x08\x42<\x8a\xb5\x18\x38True if the main VA thread has a pending \'start\' command\x12R\n\risPendingStop\x18\x04 \x01(\x08\x42;\x8a\xb5\x18\x37True if the main VA thread has a pending \'stop\' command\x12]\n\x03pva\x18\x05 \x01(\x0b\x32(.a.line.va.PastVolumeAttenuatorStatusGpbB&\x8a\xb5\x18\"Past Volume Attenuator information\x12\x36\n\x0cisVipEnabled\x18\x06 \x01(\x08\x42 \x8a\xb5\x18\x1cTrue if vip table is enabled\x12)\n!estimatedDeliveryTrxPerConnection\x18\x07 \x01(\x03:\x14\x8a\xb5\x18\x10Get the VA state\"\xf8\x02\n\x0fVa_GetConfigGpb\x12\x1b\n\x02in\x18\x01 \x01(\x0b\x32\x0f.a.prov.NullGpb\x12+\n\x03out\x18\x02 \x01(\x0b\x32\x1e.a.line.va.Va_GetConfigGpb.Out\x1a\xe2\x01\n\x03Out\x12\x61\n\x0cisVipEnabled\x18\x01 \x01(\x08\x42K\x8a\xb5\x18GTrue if vip table is enabled, should mirror \'analyzer unit vip enabled\'\x12x\n!estimatedDeliveryTrxPerConnection\x18\x02 \x01(\x03\x42M\x8a\xb5\x18IShould mirror \'analyzer prediction estimated-delivery-trx-per-connection\':6\x8a\xb5\x18\x32Get the VA config (For debugging the config paths)\"\xb0\x01\n\x18LoadCidsBatchFromFileGpb\x12\x32\n\x02in\x18\x01 \x01(\x0b\x32&.a.line.va.LoadCidsBatchFromFileGpb.In\x12\x34\n\x03out\x18\x02 \x01(\x0b\x32\'.a.line.va.LoadCidsBatchFromFileGpb.Out\x1a\x16\n\x02In\x12\x10\n\x08\x66ilename\x18\x01 \x01(\t\x1a\x12\n\x03Out\x12\x0b\n\x03msg\x18\x01 \x01(\t\"\xc5\x0f\n\x1bVa_ComputeCidFromRequestGpb\x12\x35\n\x02in\x18\x01 \x01(\x0b\x32).a.line.va.Va_ComputeCidFromRequestGpb.In\x12\x37\n\x03out\x18\x02 \x01(\x0b\x32*.a.line.va.Va_ComputeCidFromRequestGpb.Out\x1a\xfb\x05\n\x02In\x12=\n\x05parts\x18\x01 \x03(\tB.\x8a\xb5\x18*Parts of the request to be joined using \r\n\x12O\n\rresponseParts\x18\x02 \x03(\tB8\x8a\xb5\x18\x34optional Parts of the response to be joined using \r\n\x12h\n\x0b\x65xpectNoCid\x18\x03 \x01(\x08\x42S\x8a\xb5\x18Owhen true - will not fail command in case no cid generated (e.g checksum based)\x12\x66\n\tupdateLru\x18\x04 \x01(\x08\x42S\x8a\xb5\x18Owhen true the comupted cid is inserted into the LRU using the supplied min-max \x12\x17\n\x0bminObserved\x18\x05 \x01(\x03:\x02-1\x12\x17\n\x0bmaxObserved\x18\x06 \x01(\x03:\x02-1\x12u\n\rcreateContent\x18\x07 \x01(\x08\x42^\x8a\xb5\x18Zwhen true and content does not exist, a content will be created using the supplied min-max\x12t\n\x1cserverIpAddressStringForRuri\x18\x08 \x01(\tBN\x8a\xb5\x18Jfor signatures using server ip address for ruri - place the ip string here\x12t\n\x1c\x63lientIpAddressStringForRuri\x18\t \x01(\tBN\x8a\xb5\x18Jfor signatures using client ip address for ruri - place the ip string here\x1a\x91\x08\n\x03Out\x12\x0b\n\x03\x63id\x18\x01 \x01(\x04\x12\x11\n\tcidString\x18\x02 \x01(\t\x12\x11\n\tsubItemId\x18# \x01(\x04\x12\x15\n\rsubItemString\x18$ \x01(\t\x12\x11\n\tsessionId\x18% \x01(\x04\x12\x0f\n\x07titleId\x18& \x01(\x04\x12\x10\n\x08siteName\x18\" \x01(\t\x12\x1a\n\x12\x62\x65ginOffsetFromUri\x18\x03 \x01(\x03\x12\x1c\n\x14\x62\x65ginOffsetFromRange\x18\x04 \x01(\x03\x12\x0c\n\x04\x63gid\x18\x05 \x01(\x04\x12\x15\n\rcidPathOndisk\x18\x06 \x01(\t\x12\x16\n\x0ewasFoundOnDisk\x18\x07 \x01(\x08\x12!\n\x19wasRangeSpecifiedInReqUri\x18\x08 \x01(\x08\x12\"\n\x1awasRangeSpecifiedInReqHttp\x18\t \x01(\x08\x12\x1f\n\x17wasEndSpecifiedInReqUri\x18\n \x01(\x08\x12 \n\x18wasEndSpecifiedInReqHttp\x18\x0b \x01(\x08\x12\x1f\n\x17wasRangeSpecifiedInResp\x18\x0c \x01(\x08\x12\x1d\n\x15wasEndSpecifiedInResp\x18\r \x01(\x08\x12!\n\x19wasRequestUriRangeInvalid\x18\x0e \x01(\x08\x12\"\n\x1awasRequestHttpRangeInvalid\x18\x0f \x01(\x08\x12\x1f\n\x17wasResponseRangeInvalid\x18\x10 \x01(\x08\x12%\n\x1dwasResponseTotalRangeWildCard\x18\x11 \x01(\x08\x12+\n#wasOriginalRequestUriOffsetNegative\x18\x12 \x01(\x08\x12,\n$wasOriginalRequestHttpOffsetNegative\x18\x13 \x01(\x08\x12\x19\n\x11reqUriStartOffset\x18\x14 \x01(\x03\x12\x17\n\x0freqUriEndOffset\x18\x15 \x01(\x03\x12\x1a\n\x12reqHttpStartOffset\x18\x16 \x01(\x03\x12\x18\n\x10reqHttpEndOffset\x18\x17 \x01(\x03\x12\x17\n\x0frespStartOffset\x18\x18 \x01(\x03\x12\x15\n\rrespEndOffset\x18\x19 \x01(\x03\x12\x17\n\x0frespTotalLength\x18\x1a \x01(\x03\x12\x13\n\x0b\x63ontentType\x18\x1b \x01(\t\x12\x15\n\rcontentLength\x18\x1c \x01(\x03\x12\x14\n\x0cresponseSize\x18\x1d \x01(\x03\x12\x1a\n\x12wasResponseParseOk\x18\x1e \x01(\x08\x12\x15\n\rwasMetaOnDisk\x18\x1f \x01(\x08\x12\x37\n\x0f\x63ontentMetaData\x18! \x01(\x0b\x32\x1e.a.sys.meta.ContentMetaDataGpb:$\x8a\xb5\x18 Compute cid from a given request\"\x85\x03\n\x16\x43ontentCreateOnDiskGpb\x12\x30\n\x02in\x18\x01 \x01(\x0b\x32$.a.line.va.ContentCreateOnDiskGpb.In\x12\x32\n\x03out\x18\x02 \x01(\x0b\x32%.a.line.va.ContentCreateOnDiskGpb.Out\x1a\xea\x01\n\x02In\x12\x45\n\x03\x63id\x18\x01 \x01(\x04\x42\x38\x8a\xb5\x18\x34The cid that needs to be associated with the contend\x12?\n\x04size\x18\x03 \x01(\x03\x42\x31\x8a\xb5\x18-Size of the content (random if not specified)\x12\\\n\x04meta\x18\x04 \x01(\x0b\x32\x1e.a.sys.meta.ContentMetaDataGpbB.\x8a\xb5\x18*defaults are cgid 2, a single full segment\x1a\x18\n\x03Out\x12\x11\n\tmediaPath\x18\x01 \x01(\t\"\x9d\x05\n\x16\x42rownieCustomCreateGpb\x12\x30\n\x02in\x18\x01 \x01(\x0b\x32$.a.line.va.BrownieCustomCreateGpb.In\x12\x32\n\x03out\x18\x02 \x01(\x0b\x32%.a.line.va.BrownieCustomCreateGpb.Out\x1a\xbc\x03\n\x02In\x12\x46\n\x03\x63id\x18\x01 \x01(\x04\x42\x39\x8a\xb5\x18\x35The cid that needs to be associated with this brownie\x12_\n\tbrownieId\x18\x02 \x01(\x04\x42L\x8a\xb5\x18Hcustom brownie id.must not exist before on disk.random if not specified.\x12[\n\x0b\x65xpireDelta\x18\x03 \x01(\x04:\x05\x38\x36\x34\x30\x30\x42?\x8a\xb5\x18;how many seconds to add to the creation tod (default 86400)\x12G\n\x07\x62rownie\x18\x04 \x01(\x0b\x32\x1a.a.sys.brownies.BrownieGpbB\x1a\x8a\xb5\x18\x16\x63ustom brownie details\x12\x1c\n\x04\x63ids\x18\x05 \x01(\tB\x0e\x8a\xb5\x18\ncid string\x12I\n\x04ipv6\x18\x06 \x01(\x08:\x05\x66\x61lseB4\x8a\xb5\x18\x30true if Ipv6 flow, false if Ipv4 (default false)\x1a^\n\x03Out\x12\x11\n\tbrownieId\x18\x01 \x01(\x04\x12\x17\n\x0f\x62rownieIdString\x18\x02 \x01(\t\x12\x12\n\nrequestURL\x18\x03 \x01(\t\x12\x17\n\x0f\x62rownieDiskPath\x18\x04 \x01(\t\"\xf7\x03\n\x10UpdateBrownieGpb\x12*\n\x02in\x18\x01 \x01(\x0b\x32\x1e.a.line.va.UpdateBrownieGpb.In\x12,\n\x03out\x18\x02 \x01(\x0b\x32\x1f.a.line.va.UpdateBrownieGpb.Out\x1a\xc1\x02\n\x02In\x12@\n\tbrownieId\x18\x01 \x01(\x04\x42-\x8a\xb5\x18)brownie id.The brownie must exist on disk\x12\x65\n\x0b\x65xpireDelta\x18\x02 \x01(\x04\x42P\x8a\xb5\x18Lhow many seconds to add to the creation tod.overrides the same brownie field\x12G\n\x07\x62rownie\x18\x03 \x01(\x0b\x32\x1a.a.sys.brownies.BrownieGpbB\x1a\x8a\xb5\x18\x16\x63ustom brownie details\x12I\n\x04ipv6\x18\x04 \x01(\x08:\x05\x66\x61lseB4\x8a\xb5\x18\x30true if Ipv6 flow, false if Ipv4 (default false)\x1a\x45\n\x03Out\x12\x11\n\tbrownieId\x18\x01 \x01(\x04\x12\x17\n\x0f\x62rownieIdString\x18\x02 \x01(\t\x12\x12\n\nrequestURL\x18\x03 \x01(\t\"\xbb\x03\n\x17SetCidForCondLoggingGpb\x12\x31\n\x02in\x18\x01 \x01(\x0b\x32%.a.line.va.SetCidForCondLoggingGpb.In\x12\x1c\n\x03out\x18\x02 \x01(\x0b\x32\x0f.a.prov.NullGpb\x1a\xdb\x01\n\x02In\x12\x84\x01\n\x0enumTransaction\x18\x02 \x01(\x03:\x02-1Bh\x8a\xb5\x18\x64how many transactions should we open the conditional logs. -1 (default) is unlimited. 0 will disable\x12N\n\rshouldLogCoal\x18\x03 \x01(\x08:\x04trueB1\x8a\xb5\x18-should log also coal reports. default is true:q\x8a\xb5\x18mOpen the conditional logging for a specific cid (Note: Enable/disable and CID selection are now done via CLI)\"\xf4\x03\n\x12ShowCondLoggingGpb\x12\x1b\n\x02in\x18\x01 \x01(\x0b\x32\x0f.a.prov.NullGpb\x12.\n\x03out\x18\x02 \x01(\x0b\x32!.a.line.va.ShowCondLoggingGpb.Out\x1a\xec\x02\n\x03Out\x12#\n\x07\x65nabled\x18\x01 \x01(\x08\x42\x12\x8a\xb5\x18\x0e\x65nabled or not\x12\"\n\x03\x63id\x18\x02 \x01(\x03\x42\x15\x8a\xb5\x18\x11\x63id as an integer\x12\x37\n\rshouldLogCoal\x18\x03 \x01(\x08\x42 \x8a\xb5\x18\x1cshould log also coal reports\x12\x95\x01\n\x14numTransactionsToLog\x18\x04 \x01(\x03\x42w\x8a\xb5\x18sConfiguration: how many transactions should we open the conditional logs. -1 (default) is unlimited. 0 will disable\x12K\n\x15numTransactionsLogged\x18\x05 \x01(\x03\x42,\x8a\xb5\x18(State: how many transactions were logged:\"\x8a\xb5\x18\x1eShow conditional logging state\"\x94\x03\n\x10\x43reateBadFileGpb\x12*\n\x02in\x18\x01 \x01(\x0b\x32\x1e.a.line.va.CreateBadFileGpb.In\x12,\n\x03out\x18\x02 \x01(\x0b\x32\x1f.a.line.va.CreateBadFileGpb.Out\x1a\xd9\x01\n\x02In\x12+\n\x03\x63id\x18\x01 \x01(\t:\x00\x42\x1c\x8a\xb5\x18\x18\x63id in hex string format\x12W\n\x06reason\x18\x02 \x01(\t:\x00\x42\x45\x8a\xb5\x18\x41reason for creating bad file. (will be logged by content cleaner)\x12M\n\x05\x66orce\x18\x03 \x01(\x08:\x05\x66\x61lseB7\x8a\xb5\x18\x33\x66orce creating bad file even if cid doesn\'t exists)\x1a\"\n\x03Out\x12\x1b\n\x13\x62\x61\x64\x46ileFullNamePath\x18\x01 \x01(\t:&\x8a\xb5\x18\"Create a bad file for specific cid')




_VIDEOANALYZERCFGGPB = descriptor.Descriptor(
  name='VideoAnalyzerCfgGpb',
  full_name='a.line.va.VideoAnalyzerCfgGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='samplingThresh', full_name='a.line.va.VideoAnalyzerCfgGpb.samplingThresh', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=65535,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030dThreshold for sampling flows, 0-65535. 0 means sample 1/65536 of flows, 65535 means sample all flows')),
    descriptor.FieldDescriptor(
      name='disableAutoDetectVideoServers', full_name='a.line.va.VideoAnalyzerCfgGpb.disableAutoDetectVideoServers', index=1,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030,true to disable video servers auto-detection')),
    descriptor.FieldDescriptor(
      name='reportToTopper', full_name='a.line.va.VideoAnalyzerCfgGpb.reportToTopper', index=2,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030?true to report video transactions to topper (a.k.a. v3 reports)')),
    descriptor.FieldDescriptor(
      name='reportBothFlowSides', full_name='a.line.va.VideoAnalyzerCfgGpb.reportBothFlowSides', index=3,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030Ftrue to report to topper both sides of the flow and not just responder')),
    descriptor.FieldDescriptor(
      name='reportDetectionStuff', full_name='a.line.va.VideoAnalyzerCfgGpb.reportDetectionStuff', index=4,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030*true to report stuff about detection flows')),
    descriptor.FieldDescriptor(
      name='videoFlowDbHashSize', full_name='a.line.va.VideoAnalyzerCfgGpb.videoFlowDbHashSize', index=5,
      number=9, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=200000,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\032Size of video flow DB Hash')),
    descriptor.FieldDescriptor(
      name='videoFlowDbSize', full_name='a.line.va.VideoAnalyzerCfgGpb.videoFlowDbSize', index=6,
      number=10, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=150000,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\025Size of video flow DB')),
    descriptor.FieldDescriptor(
      name='videoFlowDbUrlSize', full_name='a.line.va.VideoAnalyzerCfgGpb.videoFlowDbUrlSize', index=7,
      number=11, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=100000,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\037Size of video flow DB URL table')),
    descriptor.FieldDescriptor(
      name='detectorFlowDbHashSize', full_name='a.line.va.VideoAnalyzerCfgGpb.detectorFlowDbHashSize', index=8,
      number=12, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=200000,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\035Size of detector flow DB Hash')),
    descriptor.FieldDescriptor(
      name='detectorFlowDbSize', full_name='a.line.va.VideoAnalyzerCfgGpb.detectorFlowDbSize', index=9,
      number=13, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=100000,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\030Size of detector flow DB')),
    descriptor.FieldDescriptor(
      name='relaxed', full_name='a.line.va.VideoAnalyzerCfgGpb.relaxed', index=10,
      number=16, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030>impose a 1msec sleep upon every main loop which got no packets')),
    descriptor.FieldDescriptor(
      name='desiredContentTypePrefix', full_name='a.line.va.VideoAnalyzerCfgGpb.desiredContentTypePrefix', index=11,
      number=17, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=unicode("video", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030&HTTP Content-type to detect and report')),
    descriptor.FieldDescriptor(
      name='topperInterval', full_name='a.line.va.VideoAnalyzerCfgGpb.topperInterval', index=12,
      number=18, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=10,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030)Interval for vidTopper reports in seconds')),
    descriptor.FieldDescriptor(
      name='removeFlowsOnFinRst', full_name='a.line.va.VideoAnalyzerCfgGpb.removeFlowsOnFinRst', index=13,
      number=19, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030+true to remove flowdb flows upon RST or FIN')),
    descriptor.FieldDescriptor(
      name='ageFlowsOnIdle', full_name='a.line.va.VideoAnalyzerCfgGpb.ageFlowsOnIdle', index=14,
      number=20, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030;try to age old flows even when not trigerred by new traffic')),
    descriptor.FieldDescriptor(
      name='ageEveryXBackToBackPackets', full_name='a.line.va.VideoAnalyzerCfgGpb.ageEveryXBackToBackPackets', index=15,
      number=21, type=3, cpp_type=2, label=1,
      has_default_value=True, default_value=500,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030RWhen line has 100% packets, every how many we try to do some aging. -1 means never')),
    descriptor.FieldDescriptor(
      name='secondsToReportLongTransactions', full_name='a.line.va.VideoAnalyzerCfgGpb.secondsToReportLongTransactions', index=16,
      number=25, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=30,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0304Number of seconds to report during long transactions')),
    descriptor.FieldDescriptor(
      name='cpuAffinityValue', full_name='a.line.va.VideoAnalyzerCfgGpb.cpuAffinityValue', index=17,
      number=26, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\023CPU core to bind to')),
    descriptor.FieldDescriptor(
      name='cpuAffinitySet', full_name='a.line.va.VideoAnalyzerCfgGpb.cpuAffinitySet', index=18,
      number=27, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030-True to set affinity, false to leave it unset')),
    descriptor.FieldDescriptor(
      name='viewTimeFactor', full_name='a.line.va.VideoAnalyzerCfgGpb.viewTimeFactor', index=19,
      number=28, type=4, cpp_type=4, label=1,
      has_default_value=True, default_value=345,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030HBitrate factor to multiply with the video bytes for generating view-time')),
    descriptor.FieldDescriptor(
      name='videoFlowDbReqRespSize', full_name='a.line.va.VideoAnalyzerCfgGpb.videoFlowDbReqRespSize', index=20,
      number=31, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=10000,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030,Size of video flow DB Request/Response table')),
    descriptor.FieldDescriptor(
      name='timeSinceLastByteToEndTransactionMiliSec', full_name='a.line.va.VideoAnalyzerCfgGpb.timeSinceLastByteToEndTransactionMiliSec', index=21,
      number=33, type=4, cpp_type=4, label=1,
      has_default_value=True, default_value=300000,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030JTime in miliseconds since last packet with payload for ending transactions')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=205,
  serialized_end=2203,
)


_VA_STARTGPB = descriptor.Descriptor(
  name='Va_StartGpb',
  full_name='a.line.va.Va_StartGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.va.Va_StartGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.va.Va_StartGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030\'Tell the VA to start processing packets'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2205,
  serialized_end=2322,
)


_VA_STOPGPB = descriptor.Descriptor(
  name='Va_StopGpb',
  full_name='a.line.va.Va_StopGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.va.Va_StopGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.va.Va_StopGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030&Tell the VA to stop processing packets'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2324,
  serialized_end=2439,
)


_VA_GETSTATEGPB_OUT = descriptor.Descriptor(
  name='Out',
  full_name='a.line.va.Va_GetStateGpb.Out',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='isRunning', full_name='a.line.va.Va_GetStateGpb.Out.isRunning', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030%True if the main VA thread is running')),
    descriptor.FieldDescriptor(
      name='isProcessing', full_name='a.line.va.Va_GetStateGpb.Out.isProcessing', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0300True if the main VA thread is processing packets')),
    descriptor.FieldDescriptor(
      name='isPendingStart', full_name='a.line.va.Va_GetStateGpb.Out.isPendingStart', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0308True if the main VA thread has a pending \'start\' command')),
    descriptor.FieldDescriptor(
      name='isPendingStop', full_name='a.line.va.Va_GetStateGpb.Out.isPendingStop', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0307True if the main VA thread has a pending \'stop\' command')),
    descriptor.FieldDescriptor(
      name='pva', full_name='a.line.va.Va_GetStateGpb.Out.pva', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\"Past Volume Attenuator information')),
    descriptor.FieldDescriptor(
      name='isVipEnabled', full_name='a.line.va.Va_GetStateGpb.Out.isVipEnabled', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\034True if vip table is enabled')),
    descriptor.FieldDescriptor(
      name='estimatedDeliveryTrxPerConnection', full_name='a.line.va.Va_GetStateGpb.Out.estimatedDeliveryTrxPerConnection', index=6,
      number=7, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2534,
  serialized_end=3041,
)

_VA_GETSTATEGPB = descriptor.Descriptor(
  name='Va_GetStateGpb',
  full_name='a.line.va.Va_GetStateGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.va.Va_GetStateGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.va.Va_GetStateGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_VA_GETSTATEGPB_OUT, ],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030\020Get the VA state'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2442,
  serialized_end=3063,
)


_VA_GETCONFIGGPB_OUT = descriptor.Descriptor(
  name='Out',
  full_name='a.line.va.Va_GetConfigGpb.Out',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='isVipEnabled', full_name='a.line.va.Va_GetConfigGpb.Out.isVipEnabled', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030GTrue if vip table is enabled, should mirror \'analyzer unit vip enabled\'')),
    descriptor.FieldDescriptor(
      name='estimatedDeliveryTrxPerConnection', full_name='a.line.va.Va_GetConfigGpb.Out.estimatedDeliveryTrxPerConnection', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030IShould mirror \'analyzer prediction estimated-delivery-trx-per-connection\'')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=3160,
  serialized_end=3386,
)

_VA_GETCONFIGGPB = descriptor.Descriptor(
  name='Va_GetConfigGpb',
  full_name='a.line.va.Va_GetConfigGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.va.Va_GetConfigGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.va.Va_GetConfigGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_VA_GETCONFIGGPB_OUT, ],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\0302Get the VA config (For debugging the config paths)'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=3066,
  serialized_end=3442,
)


_LOADCIDSBATCHFROMFILEGPB_IN = descriptor.Descriptor(
  name='In',
  full_name='a.line.va.LoadCidsBatchFromFileGpb.In',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='filename', full_name='a.line.va.LoadCidsBatchFromFileGpb.In.filename', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=3579,
  serialized_end=3601,
)

_LOADCIDSBATCHFROMFILEGPB_OUT = descriptor.Descriptor(
  name='Out',
  full_name='a.line.va.LoadCidsBatchFromFileGpb.Out',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='msg', full_name='a.line.va.LoadCidsBatchFromFileGpb.Out.msg', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=3603,
  serialized_end=3621,
)

_LOADCIDSBATCHFROMFILEGPB = descriptor.Descriptor(
  name='LoadCidsBatchFromFileGpb',
  full_name='a.line.va.LoadCidsBatchFromFileGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.va.LoadCidsBatchFromFileGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.va.LoadCidsBatchFromFileGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_LOADCIDSBATCHFROMFILEGPB_IN, _LOADCIDSBATCHFROMFILEGPB_OUT, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=3445,
  serialized_end=3621,
)


_VA_COMPUTECIDFROMREQUESTGPB_IN = descriptor.Descriptor(
  name='In',
  full_name='a.line.va.Va_ComputeCidFromRequestGpb.In',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='parts', full_name='a.line.va.Va_ComputeCidFromRequestGpb.In.parts', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030*Parts of the request to be joined using \r\n')),
    descriptor.FieldDescriptor(
      name='responseParts', full_name='a.line.va.Va_ComputeCidFromRequestGpb.In.responseParts', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0304optional Parts of the response to be joined using \r\n')),
    descriptor.FieldDescriptor(
      name='expectNoCid', full_name='a.line.va.Va_ComputeCidFromRequestGpb.In.expectNoCid', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030Owhen true - will not fail command in case no cid generated (e.g checksum based)')),
    descriptor.FieldDescriptor(
      name='updateLru', full_name='a.line.va.Va_ComputeCidFromRequestGpb.In.updateLru', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030Owhen true the comupted cid is inserted into the LRU using the supplied min-max ')),
    descriptor.FieldDescriptor(
      name='minObserved', full_name='a.line.va.Va_ComputeCidFromRequestGpb.In.minObserved', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=True, default_value=-1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='maxObserved', full_name='a.line.va.Va_ComputeCidFromRequestGpb.In.maxObserved', index=5,
      number=6, type=3, cpp_type=2, label=1,
      has_default_value=True, default_value=-1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='createContent', full_name='a.line.va.Va_ComputeCidFromRequestGpb.In.createContent', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030Zwhen true and content does not exist, a content will be created using the supplied min-max')),
    descriptor.FieldDescriptor(
      name='serverIpAddressStringForRuri', full_name='a.line.va.Va_ComputeCidFromRequestGpb.In.serverIpAddressStringForRuri', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030Jfor signatures using server ip address for ruri - place the ip string here')),
    descriptor.FieldDescriptor(
      name='clientIpAddressStringForRuri', full_name='a.line.va.Va_ComputeCidFromRequestGpb.In.clientIpAddressStringForRuri', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030Jfor signatures using client ip address for ruri - place the ip string here')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=3768,
  serialized_end=4531,
)

_VA_COMPUTECIDFROMREQUESTGPB_OUT = descriptor.Descriptor(
  name='Out',
  full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='cid', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.cid', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='cidString', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.cidString', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='subItemId', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.subItemId', index=2,
      number=35, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='subItemString', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.subItemString', index=3,
      number=36, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='sessionId', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.sessionId', index=4,
      number=37, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='titleId', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.titleId', index=5,
      number=38, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='siteName', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.siteName', index=6,
      number=34, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='beginOffsetFromUri', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.beginOffsetFromUri', index=7,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='beginOffsetFromRange', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.beginOffsetFromRange', index=8,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='cgid', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.cgid', index=9,
      number=5, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='cidPathOndisk', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.cidPathOndisk', index=10,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='wasFoundOnDisk', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.wasFoundOnDisk', index=11,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='wasRangeSpecifiedInReqUri', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.wasRangeSpecifiedInReqUri', index=12,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='wasRangeSpecifiedInReqHttp', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.wasRangeSpecifiedInReqHttp', index=13,
      number=9, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='wasEndSpecifiedInReqUri', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.wasEndSpecifiedInReqUri', index=14,
      number=10, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='wasEndSpecifiedInReqHttp', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.wasEndSpecifiedInReqHttp', index=15,
      number=11, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='wasRangeSpecifiedInResp', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.wasRangeSpecifiedInResp', index=16,
      number=12, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='wasEndSpecifiedInResp', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.wasEndSpecifiedInResp', index=17,
      number=13, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='wasRequestUriRangeInvalid', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.wasRequestUriRangeInvalid', index=18,
      number=14, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='wasRequestHttpRangeInvalid', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.wasRequestHttpRangeInvalid', index=19,
      number=15, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='wasResponseRangeInvalid', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.wasResponseRangeInvalid', index=20,
      number=16, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='wasResponseTotalRangeWildCard', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.wasResponseTotalRangeWildCard', index=21,
      number=17, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='wasOriginalRequestUriOffsetNegative', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.wasOriginalRequestUriOffsetNegative', index=22,
      number=18, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='wasOriginalRequestHttpOffsetNegative', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.wasOriginalRequestHttpOffsetNegative', index=23,
      number=19, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='reqUriStartOffset', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.reqUriStartOffset', index=24,
      number=20, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='reqUriEndOffset', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.reqUriEndOffset', index=25,
      number=21, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='reqHttpStartOffset', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.reqHttpStartOffset', index=26,
      number=22, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='reqHttpEndOffset', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.reqHttpEndOffset', index=27,
      number=23, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='respStartOffset', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.respStartOffset', index=28,
      number=24, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='respEndOffset', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.respEndOffset', index=29,
      number=25, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='respTotalLength', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.respTotalLength', index=30,
      number=26, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='contentType', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.contentType', index=31,
      number=27, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='contentLength', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.contentLength', index=32,
      number=28, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='responseSize', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.responseSize', index=33,
      number=29, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='wasResponseParseOk', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.wasResponseParseOk', index=34,
      number=30, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='wasMetaOnDisk', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.wasMetaOnDisk', index=35,
      number=31, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='contentMetaData', full_name='a.line.va.Va_ComputeCidFromRequestGpb.Out.contentMetaData', index=36,
      number=33, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=4534,
  serialized_end=5575,
)

_VA_COMPUTECIDFROMREQUESTGPB = descriptor.Descriptor(
  name='Va_ComputeCidFromRequestGpb',
  full_name='a.line.va.Va_ComputeCidFromRequestGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.va.Va_ComputeCidFromRequestGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.va.Va_ComputeCidFromRequestGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_VA_COMPUTECIDFROMREQUESTGPB_IN, _VA_COMPUTECIDFROMREQUESTGPB_OUT, ],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030 Compute cid from a given request'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=3624,
  serialized_end=5613,
)


_CONTENTCREATEONDISKGPB_IN = descriptor.Descriptor(
  name='In',
  full_name='a.line.va.ContentCreateOnDiskGpb.In',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='cid', full_name='a.line.va.ContentCreateOnDiskGpb.In.cid', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0304The cid that needs to be associated with the contend')),
    descriptor.FieldDescriptor(
      name='size', full_name='a.line.va.ContentCreateOnDiskGpb.In.size', index=1,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030-Size of the content (random if not specified)')),
    descriptor.FieldDescriptor(
      name='meta', full_name='a.line.va.ContentCreateOnDiskGpb.In.meta', index=2,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030*defaults are cgid 2, a single full segment')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=5745,
  serialized_end=5979,
)

_CONTENTCREATEONDISKGPB_OUT = descriptor.Descriptor(
  name='Out',
  full_name='a.line.va.ContentCreateOnDiskGpb.Out',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='mediaPath', full_name='a.line.va.ContentCreateOnDiskGpb.Out.mediaPath', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=5981,
  serialized_end=6005,
)

_CONTENTCREATEONDISKGPB = descriptor.Descriptor(
  name='ContentCreateOnDiskGpb',
  full_name='a.line.va.ContentCreateOnDiskGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.va.ContentCreateOnDiskGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.va.ContentCreateOnDiskGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_CONTENTCREATEONDISKGPB_IN, _CONTENTCREATEONDISKGPB_OUT, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=5616,
  serialized_end=6005,
)


_BROWNIECUSTOMCREATEGPB_IN = descriptor.Descriptor(
  name='In',
  full_name='a.line.va.BrownieCustomCreateGpb.In',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='cid', full_name='a.line.va.BrownieCustomCreateGpb.In.cid', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0305The cid that needs to be associated with this brownie')),
    descriptor.FieldDescriptor(
      name='brownieId', full_name='a.line.va.BrownieCustomCreateGpb.In.brownieId', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030Hcustom brownie id.must not exist before on disk.random if not specified.')),
    descriptor.FieldDescriptor(
      name='expireDelta', full_name='a.line.va.BrownieCustomCreateGpb.In.expireDelta', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=True, default_value=86400,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030;how many seconds to add to the creation tod (default 86400)')),
    descriptor.FieldDescriptor(
      name='brownie', full_name='a.line.va.BrownieCustomCreateGpb.In.brownie', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\026custom brownie details')),
    descriptor.FieldDescriptor(
      name='cids', full_name='a.line.va.BrownieCustomCreateGpb.In.cids', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\ncid string')),
    descriptor.FieldDescriptor(
      name='ipv6', full_name='a.line.va.BrownieCustomCreateGpb.In.ipv6', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0300true if Ipv6 flow, false if Ipv4 (default false)')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=6137,
  serialized_end=6581,
)

_BROWNIECUSTOMCREATEGPB_OUT = descriptor.Descriptor(
  name='Out',
  full_name='a.line.va.BrownieCustomCreateGpb.Out',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='brownieId', full_name='a.line.va.BrownieCustomCreateGpb.Out.brownieId', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='brownieIdString', full_name='a.line.va.BrownieCustomCreateGpb.Out.brownieIdString', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='requestURL', full_name='a.line.va.BrownieCustomCreateGpb.Out.requestURL', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='brownieDiskPath', full_name='a.line.va.BrownieCustomCreateGpb.Out.brownieDiskPath', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=6583,
  serialized_end=6677,
)

_BROWNIECUSTOMCREATEGPB = descriptor.Descriptor(
  name='BrownieCustomCreateGpb',
  full_name='a.line.va.BrownieCustomCreateGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.va.BrownieCustomCreateGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.va.BrownieCustomCreateGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_BROWNIECUSTOMCREATEGPB_IN, _BROWNIECUSTOMCREATEGPB_OUT, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=6008,
  serialized_end=6677,
)


_UPDATEBROWNIEGPB_IN = descriptor.Descriptor(
  name='In',
  full_name='a.line.va.UpdateBrownieGpb.In',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='brownieId', full_name='a.line.va.UpdateBrownieGpb.In.brownieId', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030)brownie id.The brownie must exist on disk')),
    descriptor.FieldDescriptor(
      name='expireDelta', full_name='a.line.va.UpdateBrownieGpb.In.expireDelta', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030Lhow many seconds to add to the creation tod.overrides the same brownie field')),
    descriptor.FieldDescriptor(
      name='brownie', full_name='a.line.va.UpdateBrownieGpb.In.brownie', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\026custom brownie details')),
    descriptor.FieldDescriptor(
      name='ipv6', full_name='a.line.va.UpdateBrownieGpb.In.ipv6', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0300true if Ipv6 flow, false if Ipv4 (default false)')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=6791,
  serialized_end=7112,
)

_UPDATEBROWNIEGPB_OUT = descriptor.Descriptor(
  name='Out',
  full_name='a.line.va.UpdateBrownieGpb.Out',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='brownieId', full_name='a.line.va.UpdateBrownieGpb.Out.brownieId', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='brownieIdString', full_name='a.line.va.UpdateBrownieGpb.Out.brownieIdString', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='requestURL', full_name='a.line.va.UpdateBrownieGpb.Out.requestURL', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=6583,
  serialized_end=6652,
)

_UPDATEBROWNIEGPB = descriptor.Descriptor(
  name='UpdateBrownieGpb',
  full_name='a.line.va.UpdateBrownieGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.va.UpdateBrownieGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.va.UpdateBrownieGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_UPDATEBROWNIEGPB_IN, _UPDATEBROWNIEGPB_OUT, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=6680,
  serialized_end=7183,
)


_SETCIDFORCONDLOGGINGGPB_IN = descriptor.Descriptor(
  name='In',
  full_name='a.line.va.SetCidForCondLoggingGpb.In',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='numTransaction', full_name='a.line.va.SetCidForCondLoggingGpb.In.numTransaction', index=0,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=True, default_value=-1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030dhow many transactions should we open the conditional logs. -1 (default) is unlimited. 0 will disable')),
    descriptor.FieldDescriptor(
      name='shouldLogCoal', full_name='a.line.va.SetCidForCondLoggingGpb.In.shouldLogCoal', index=1,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030-should log also coal reports. default is true')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=7295,
  serialized_end=7514,
)

_SETCIDFORCONDLOGGINGGPB = descriptor.Descriptor(
  name='SetCidForCondLoggingGpb',
  full_name='a.line.va.SetCidForCondLoggingGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.va.SetCidForCondLoggingGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.va.SetCidForCondLoggingGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_SETCIDFORCONDLOGGINGGPB_IN, ],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030mOpen the conditional logging for a specific cid (Note: Enable/disable and CID selection are now done via CLI)'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=7186,
  serialized_end=7629,
)


_SHOWCONDLOGGINGGPB_OUT = descriptor.Descriptor(
  name='Out',
  full_name='a.line.va.ShowCondLoggingGpb.Out',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='enabled', full_name='a.line.va.ShowCondLoggingGpb.Out.enabled', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\016enabled or not')),
    descriptor.FieldDescriptor(
      name='cid', full_name='a.line.va.ShowCondLoggingGpb.Out.cid', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\021cid as an integer')),
    descriptor.FieldDescriptor(
      name='shouldLogCoal', full_name='a.line.va.ShowCondLoggingGpb.Out.shouldLogCoal', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\034should log also coal reports')),
    descriptor.FieldDescriptor(
      name='numTransactionsToLog', full_name='a.line.va.ShowCondLoggingGpb.Out.numTransactionsToLog', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030sConfiguration: how many transactions should we open the conditional logs. -1 (default) is unlimited. 0 will disable')),
    descriptor.FieldDescriptor(
      name='numTransactionsLogged', full_name='a.line.va.ShowCondLoggingGpb.Out.numTransactionsLogged', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030(State: how many transactions were logged')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=7732,
  serialized_end=8096,
)

_SHOWCONDLOGGINGGPB = descriptor.Descriptor(
  name='ShowCondLoggingGpb',
  full_name='a.line.va.ShowCondLoggingGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.va.ShowCondLoggingGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.va.ShowCondLoggingGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_SHOWCONDLOGGINGGPB_OUT, ],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030\036Show conditional logging state'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=7632,
  serialized_end=8132,
)


_CREATEBADFILEGPB_IN = descriptor.Descriptor(
  name='In',
  full_name='a.line.va.CreateBadFileGpb.In',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='cid', full_name='a.line.va.CreateBadFileGpb.In.cid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030\030cid in hex string format')),
    descriptor.FieldDescriptor(
      name='reason', full_name='a.line.va.CreateBadFileGpb.In.reason', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\030Areason for creating bad file. (will be logged by content cleaner)')),
    descriptor.FieldDescriptor(
      name='force', full_name='a.line.va.CreateBadFileGpb.In.force', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\212\265\0303force creating bad file even if cid doesn\'t exists)')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=8246,
  serialized_end=8463,
)

_CREATEBADFILEGPB_OUT = descriptor.Descriptor(
  name='Out',
  full_name='a.line.va.CreateBadFileGpb.Out',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='badFileFullNamePath', full_name='a.line.va.CreateBadFileGpb.Out.badFileFullNamePath', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=8465,
  serialized_end=8499,
)

_CREATEBADFILEGPB = descriptor.Descriptor(
  name='CreateBadFileGpb',
  full_name='a.line.va.CreateBadFileGpb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='in', full_name='a.line.va.CreateBadFileGpb.in', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='out', full_name='a.line.va.CreateBadFileGpb.out', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_CREATEBADFILEGPB_IN, _CREATEBADFILEGPB_OUT, ],
  enum_types=[
  ],
  options=descriptor._ParseOptions(descriptor_pb2.MessageOptions(), '\212\265\030\"Create a bad file for specific cid'),
  is_extendable=False,
  extension_ranges=[],
  serialized_start=8135,
  serialized_end=8539,
)

import include.a.infra.prov.definitions_pb2
import include.a.sys.meta.content_meta_data_pb2
import include.a.sys.brownies.brownies_pb2
import line.va.past_volume_attenuator_pb2

_VA_STARTGPB.fields_by_name['in'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_VA_STARTGPB.fields_by_name['out'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_VA_STOPGPB.fields_by_name['in'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_VA_STOPGPB.fields_by_name['out'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_VA_GETSTATEGPB_OUT.fields_by_name['pva'].message_type = line.va.past_volume_attenuator_pb2._PASTVOLUMEATTENUATORSTATUSGPB
_VA_GETSTATEGPB_OUT.containing_type = _VA_GETSTATEGPB;
_VA_GETSTATEGPB.fields_by_name['in'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_VA_GETSTATEGPB.fields_by_name['out'].message_type = _VA_GETSTATEGPB_OUT
_VA_GETCONFIGGPB_OUT.containing_type = _VA_GETCONFIGGPB;
_VA_GETCONFIGGPB.fields_by_name['in'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_VA_GETCONFIGGPB.fields_by_name['out'].message_type = _VA_GETCONFIGGPB_OUT
_LOADCIDSBATCHFROMFILEGPB_IN.containing_type = _LOADCIDSBATCHFROMFILEGPB;
_LOADCIDSBATCHFROMFILEGPB_OUT.containing_type = _LOADCIDSBATCHFROMFILEGPB;
_LOADCIDSBATCHFROMFILEGPB.fields_by_name['in'].message_type = _LOADCIDSBATCHFROMFILEGPB_IN
_LOADCIDSBATCHFROMFILEGPB.fields_by_name['out'].message_type = _LOADCIDSBATCHFROMFILEGPB_OUT
_VA_COMPUTECIDFROMREQUESTGPB_IN.containing_type = _VA_COMPUTECIDFROMREQUESTGPB;
_VA_COMPUTECIDFROMREQUESTGPB_OUT.fields_by_name['contentMetaData'].message_type = include.a.sys.meta.content_meta_data_pb2._CONTENTMETADATAGPB
_VA_COMPUTECIDFROMREQUESTGPB_OUT.containing_type = _VA_COMPUTECIDFROMREQUESTGPB;
_VA_COMPUTECIDFROMREQUESTGPB.fields_by_name['in'].message_type = _VA_COMPUTECIDFROMREQUESTGPB_IN
_VA_COMPUTECIDFROMREQUESTGPB.fields_by_name['out'].message_type = _VA_COMPUTECIDFROMREQUESTGPB_OUT
_CONTENTCREATEONDISKGPB_IN.fields_by_name['meta'].message_type = include.a.sys.meta.content_meta_data_pb2._CONTENTMETADATAGPB
_CONTENTCREATEONDISKGPB_IN.containing_type = _CONTENTCREATEONDISKGPB;
_CONTENTCREATEONDISKGPB_OUT.containing_type = _CONTENTCREATEONDISKGPB;
_CONTENTCREATEONDISKGPB.fields_by_name['in'].message_type = _CONTENTCREATEONDISKGPB_IN
_CONTENTCREATEONDISKGPB.fields_by_name['out'].message_type = _CONTENTCREATEONDISKGPB_OUT
_BROWNIECUSTOMCREATEGPB_IN.fields_by_name['brownie'].message_type = include.a.sys.brownies.brownies_pb2._BROWNIEGPB
_BROWNIECUSTOMCREATEGPB_IN.containing_type = _BROWNIECUSTOMCREATEGPB;
_BROWNIECUSTOMCREATEGPB_OUT.containing_type = _BROWNIECUSTOMCREATEGPB;
_BROWNIECUSTOMCREATEGPB.fields_by_name['in'].message_type = _BROWNIECUSTOMCREATEGPB_IN
_BROWNIECUSTOMCREATEGPB.fields_by_name['out'].message_type = _BROWNIECUSTOMCREATEGPB_OUT
_UPDATEBROWNIEGPB_IN.fields_by_name['brownie'].message_type = include.a.sys.brownies.brownies_pb2._BROWNIEGPB
_UPDATEBROWNIEGPB_IN.containing_type = _UPDATEBROWNIEGPB;
_UPDATEBROWNIEGPB_OUT.containing_type = _UPDATEBROWNIEGPB;
_UPDATEBROWNIEGPB.fields_by_name['in'].message_type = _UPDATEBROWNIEGPB_IN
_UPDATEBROWNIEGPB.fields_by_name['out'].message_type = _UPDATEBROWNIEGPB_OUT
_SETCIDFORCONDLOGGINGGPB_IN.containing_type = _SETCIDFORCONDLOGGINGGPB;
_SETCIDFORCONDLOGGINGGPB.fields_by_name['in'].message_type = _SETCIDFORCONDLOGGINGGPB_IN
_SETCIDFORCONDLOGGINGGPB.fields_by_name['out'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_SHOWCONDLOGGINGGPB_OUT.containing_type = _SHOWCONDLOGGINGGPB;
_SHOWCONDLOGGINGGPB.fields_by_name['in'].message_type = include.a.infra.prov.definitions_pb2._NULLGPB
_SHOWCONDLOGGINGGPB.fields_by_name['out'].message_type = _SHOWCONDLOGGINGGPB_OUT
_CREATEBADFILEGPB_IN.containing_type = _CREATEBADFILEGPB;
_CREATEBADFILEGPB_OUT.containing_type = _CREATEBADFILEGPB;
_CREATEBADFILEGPB.fields_by_name['in'].message_type = _CREATEBADFILEGPB_IN
_CREATEBADFILEGPB.fields_by_name['out'].message_type = _CREATEBADFILEGPB_OUT

class VideoAnalyzerCfgGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _VIDEOANALYZERCFGGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.VideoAnalyzerCfgGpb)

class Va_StartGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _VA_STARTGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.Va_StartGpb)

class Va_StopGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _VA_STOPGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.Va_StopGpb)

class Va_GetStateGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class Out(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _VA_GETSTATEGPB_OUT
    
    # @@protoc_insertion_point(class_scope:a.line.va.Va_GetStateGpb.Out)
  DESCRIPTOR = _VA_GETSTATEGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.Va_GetStateGpb)

class Va_GetConfigGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class Out(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _VA_GETCONFIGGPB_OUT
    
    # @@protoc_insertion_point(class_scope:a.line.va.Va_GetConfigGpb.Out)
  DESCRIPTOR = _VA_GETCONFIGGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.Va_GetConfigGpb)

class LoadCidsBatchFromFileGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class In(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _LOADCIDSBATCHFROMFILEGPB_IN
    
    # @@protoc_insertion_point(class_scope:a.line.va.LoadCidsBatchFromFileGpb.In)
  
  class Out(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _LOADCIDSBATCHFROMFILEGPB_OUT
    
    # @@protoc_insertion_point(class_scope:a.line.va.LoadCidsBatchFromFileGpb.Out)
  DESCRIPTOR = _LOADCIDSBATCHFROMFILEGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.LoadCidsBatchFromFileGpb)

class Va_ComputeCidFromRequestGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class In(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _VA_COMPUTECIDFROMREQUESTGPB_IN
    
    # @@protoc_insertion_point(class_scope:a.line.va.Va_ComputeCidFromRequestGpb.In)
  
  class Out(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _VA_COMPUTECIDFROMREQUESTGPB_OUT
    
    # @@protoc_insertion_point(class_scope:a.line.va.Va_ComputeCidFromRequestGpb.Out)
  DESCRIPTOR = _VA_COMPUTECIDFROMREQUESTGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.Va_ComputeCidFromRequestGpb)

class ContentCreateOnDiskGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class In(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _CONTENTCREATEONDISKGPB_IN
    
    # @@protoc_insertion_point(class_scope:a.line.va.ContentCreateOnDiskGpb.In)
  
  class Out(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _CONTENTCREATEONDISKGPB_OUT
    
    # @@protoc_insertion_point(class_scope:a.line.va.ContentCreateOnDiskGpb.Out)
  DESCRIPTOR = _CONTENTCREATEONDISKGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.ContentCreateOnDiskGpb)

class BrownieCustomCreateGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class In(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _BROWNIECUSTOMCREATEGPB_IN
    
    # @@protoc_insertion_point(class_scope:a.line.va.BrownieCustomCreateGpb.In)
  
  class Out(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _BROWNIECUSTOMCREATEGPB_OUT
    
    # @@protoc_insertion_point(class_scope:a.line.va.BrownieCustomCreateGpb.Out)
  DESCRIPTOR = _BROWNIECUSTOMCREATEGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.BrownieCustomCreateGpb)

class UpdateBrownieGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class In(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _UPDATEBROWNIEGPB_IN
    
    # @@protoc_insertion_point(class_scope:a.line.va.UpdateBrownieGpb.In)
  
  class Out(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _UPDATEBROWNIEGPB_OUT
    
    # @@protoc_insertion_point(class_scope:a.line.va.UpdateBrownieGpb.Out)
  DESCRIPTOR = _UPDATEBROWNIEGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.UpdateBrownieGpb)

class SetCidForCondLoggingGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class In(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _SETCIDFORCONDLOGGINGGPB_IN
    
    # @@protoc_insertion_point(class_scope:a.line.va.SetCidForCondLoggingGpb.In)
  DESCRIPTOR = _SETCIDFORCONDLOGGINGGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.SetCidForCondLoggingGpb)

class ShowCondLoggingGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class Out(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _SHOWCONDLOGGINGGPB_OUT
    
    # @@protoc_insertion_point(class_scope:a.line.va.ShowCondLoggingGpb.Out)
  DESCRIPTOR = _SHOWCONDLOGGINGGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.ShowCondLoggingGpb)

class CreateBadFileGpb(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class In(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _CREATEBADFILEGPB_IN
    
    # @@protoc_insertion_point(class_scope:a.line.va.CreateBadFileGpb.In)
  
  class Out(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _CREATEBADFILEGPB_OUT
    
    # @@protoc_insertion_point(class_scope:a.line.va.CreateBadFileGpb.Out)
  DESCRIPTOR = _CREATEBADFILEGPB
  
  # @@protoc_insertion_point(class_scope:a.line.va.CreateBadFileGpb)

# @@protoc_insertion_point(module_scope)
